/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,t,n={594:(e,t,n)=>{"use strict";n.d(t,{Z:()=>we});var r=n(7294),o=n.n(r),i=n(7209);function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,a(e,t)}var s=n(5697),u=n.n(s);function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function f(e){return"/"===e.charAt(0)}function p(e,t){for(var n=t,r=n+1,o=e.length;r<o;n+=1,r+=1)e[n]=e[r];e.pop()}const d=function(e,t){if(!e)throw new Error("Invariant failed")};function h(e){return"/"===e.charAt(0)?e:"/"+e}function m(e){return"/"===e.charAt(0)?e.substr(1):e}function v(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function y(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function g(e){var t=e.pathname,n=e.search,r=e.hash,o=t||"/";return n&&"?"!==n&&(o+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(o+="#"===r.charAt(0)?r:"#"+r),o}function b(e,t,n,r){var o;"string"==typeof e?(o=function(e){var t=e||"/",n="",r="",o=t.indexOf("#");-1!==o&&(r=t.substr(o),t=t.substr(0,o));var i=t.indexOf("?");return-1!==i&&(n=t.substr(i),t=t.substr(0,i)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(o=c({},e)).pathname&&(o.pathname=""),o.search?"?"!==o.search.charAt(0)&&(o.search="?"+o.search):o.search="",o.hash?"#"!==o.hash.charAt(0)&&(o.hash="#"+o.hash):o.hash="",void 0!==t&&void 0===o.state&&(o.state=t));try{o.pathname=decodeURI(o.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+o.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(o.key=n),r?o.pathname?"/"!==o.pathname.charAt(0)&&(o.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],o=t&&t.split("/")||[],i=e&&f(e),a=t&&f(t),l=i||a;if(e&&f(e)?o=r:r.length&&(o.pop(),o=o.concat(r)),!o.length)return"/";if(o.length){var s=o[o.length-1];n="."===s||".."===s||""===s}else n=!1;for(var u=0,c=o.length;c>=0;c--){var d=o[c];"."===d?p(o,c):".."===d?(p(o,c),u++):u&&(p(o,c),u--)}if(!l)for(;u--;u)o.unshift("..");!l||""===o[0]||o[0]&&f(o[0])||o.unshift("");var h=o.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h}(o.pathname,r.pathname)):o.pathname=r.pathname:o.pathname||(o.pathname="/"),o}function w(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,o){if(null!=e){var i="function"==typeof e?e(t,n):e;"string"==typeof i?"function"==typeof r?r(i,o):o(!0):o(!1!==i)}else o(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var x=!("undefined"==typeof window||!window.document||!window.document.createElement);function k(e,t){t(window.confirm(e))}var E="hashchange",S={hashbang:{encodePath:function(e){return"!"===e.charAt(0)?e:"!/"+m(e)},decodePath:function(e){return"!"===e.charAt(0)?e.substr(1):e}},noslash:{encodePath:m,decodePath:h},slash:{encodePath:h,decodePath:h}};function _(e){var t=e.indexOf("#");return-1===t?e:e.slice(0,t)}function C(){var e=window.location.href,t=e.indexOf("#");return-1===t?"":e.substring(t+1)}function T(e){window.location.replace(_(window.location.href)+"#"+e)}function P(e){void 0===e&&(e={}),x||d(!1);var t=window.history,n=(window.navigator.userAgent.indexOf("Firefox"),e),r=n.getUserConfirmation,o=void 0===r?k:r,i=n.hashType,a=void 0===i?"slash":i,l=e.basename?y(h(e.basename)):"",s=S[a],u=s.encodePath,f=s.decodePath;function p(){var e=f(C());return l&&(e=v(e,l)),b(e)}var m=w();function P(e){c(F,e),F.length=t.length,m.notifyListeners(F.location,F.action)}var O=!1,R=null;function j(){var e,t,n=C(),r=u(n);if(n!==r)T(r);else{var i=p(),a=F.location;if(!O&&(t=i,(e=a).pathname===t.pathname&&e.search===t.search&&e.hash===t.hash))return;if(R===g(i))return;R=null,function(e){if(O)O=!1,P();else{m.confirmTransitionTo(e,"POP",o,(function(t){t?P({action:"POP",location:e}):function(e){var t=F.location,n=N.lastIndexOf(g(t));-1===n&&(n=0);var r=N.lastIndexOf(g(e));-1===r&&(r=0);var o=n-r;o&&(O=!0,D(o))}(e)}))}}(i)}}var I=C(),M=u(I);I!==M&&T(M);var A=p(),N=[g(A)];function D(e){t.go(e)}var L=0;function z(e){1===(L+=e)&&1===e?window.addEventListener(E,j):0===L&&window.removeEventListener(E,j)}var U=!1,F={length:t.length,action:"POP",location:A,createHref:function(e){var t=document.querySelector("base"),n="";return t&&t.getAttribute("href")&&(n=_(window.location.href)),n+"#"+u(l+g(e))},push:function(e,t){var n="PUSH",r=b(e,void 0,void 0,F.location);m.confirmTransitionTo(r,n,o,(function(e){if(e){var t=g(r),o=u(l+t);if(C()!==o){R=t,function(e){window.location.hash=e}(o);var i=N.lastIndexOf(g(F.location)),a=N.slice(0,i+1);a.push(t),N=a,P({action:n,location:r})}else P()}}))},replace:function(e,t){var n="REPLACE",r=b(e,void 0,void 0,F.location);m.confirmTransitionTo(r,n,o,(function(e){if(e){var t=g(r),o=u(l+t);C()!==o&&(R=t,T(o));var i=N.indexOf(g(F.location));-1!==i&&(N[i]=t),P({action:n,location:r})}}))},go:D,goBack:function(){D(-1)},goForward:function(){D(1)},block:function(e){void 0===e&&(e=!1);var t=m.setPrompt(e);return U||(z(1),U=!0),function(){return U&&(U=!1,z(-1)),t()}},listen:function(e){var t=m.appendListener(e);return z(1),function(){z(-1),t()}}};return F}var O=1073741823,R="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function j(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const I=o().createContext||function(e,t){var n,o,i,a="__create-react-context-"+((R[i="__global_unique_id__"]=(R[i]||0)+1)+"__"),s=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=j(t.props.value),t}l(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[a]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,o=e.value;((i=r)===(a=o)?0!==i||1/i==1/a:i!=i&&a!=a)?n=0:(n="function"==typeof t?t(r,o):O,0!=(n|=0)&&this.emitter.set(e.value,n))}var i,a},r.render=function(){return this.props.children},n}(r.Component);s.childContextTypes=((n={})[a]=u().object.isRequired,n);var c=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}l(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?O:t},r.componentDidMount=function(){this.context[a]&&this.context[a].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?O:e},r.componentWillUnmount=function(){this.context[a]&&this.context[a].off(this.onUpdate)},r.getValue=function(){return this.context[a]?this.context[a].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return c.contextTypes=((o={})[a]=u().object,o),{Provider:s,Consumer:c}};var M=n(9658),A=n.n(M);function N(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}n(9864),n(8420);var D=function(e){var t=I();return t.displayName="Router-History",t}(),L=function(e){var t=I();return t.displayName="Router",t}(),z=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}l(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return o().createElement(L.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},o().createElement(D.Provider,{children:this.props.children||null,value:this.props.history}))},t}(o().Component);o().Component,o().Component;var U={},F=0;function W(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,o=n.exact,i=void 0!==o&&o,a=n.strict,l=void 0!==a&&a,s=n.sensitive,u=void 0!==s&&s;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=U[n]||(U[n]={});if(r[e])return r[e];var o=[],i={regexp:A()(e,o,t),keys:o};return F<1e4&&(r[e]=i,F++),i}(n,{end:i,strict:l,sensitive:u}),o=r.regexp,a=r.keys,s=o.exec(e);if(!s)return null;var c=s[0],f=s.slice(1),p=e===c;return i&&!p?null:{path:n,url:"/"===n&&""===c?"/":c,isExact:p,params:a.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var H=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o().createElement(L.Consumer,null,(function(t){t||d(!1);var n=e.props.location||t.location,r=c({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?W(n.pathname,e.props):t.match}),i=e.props,a=i.children,l=i.component,s=i.render;return Array.isArray(a)&&0===a.length&&(a=null),o().createElement(L.Provider,{value:r},r.match?a?"function"==typeof a?a(r):a:l?o().createElement(l,r):s?s(r):null:"function"==typeof a?a(r):null)}))},t}(o().Component);o().Component;var $=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return o().createElement(L.Consumer,null,(function(t){t||d(!1);var n,r,i=e.props.location||t.location;return o().Children.forEach(e.props.children,(function(e){if(null==r&&o().isValidElement(e)){n=e;var a=e.props.path||e.props.from;r=a?W(i.pathname,c({},e.props,{path:a})):t.match}})),r?o().cloneElement(n,{location:i,computedMatch:r}):null}))},t}(o().Component);o().useContext,o().Component;var B=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return(t=e.call.apply(e,[this].concat(r))||this).history=P(t.props),t}return l(t,e),t.prototype.render=function(){return o().createElement(z,{history:this.history,children:this.props.children})},t}(o().Component),V=function(e,t){return"function"==typeof e?e(t):e},q=function(e,t){return"string"==typeof e?b(e,null,null,t):e},K=function(e){return e},Q=o().forwardRef;void 0===Q&&(Q=K);var Y=Q((function(e,t){var n=e.innerRef,r=e.navigate,i=e.onClick,a=N(e,["innerRef","navigate","onClick"]),l=a.target,s=c({},a,{onClick:function(e){try{i&&i(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||l&&"_self"!==l||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),r())}});return s.ref=K!==Q&&t||n,o().createElement("a",s)})),X=Q((function(e,t){var n=e.component,r=void 0===n?Y:n,i=e.replace,a=e.to,l=e.innerRef,s=N(e,["component","replace","to","innerRef"]);return o().createElement(L.Consumer,null,(function(e){e||d(!1);var n=e.history,u=q(V(a,e.location),e.location),f=u?n.createHref(u):"",p=c({},s,{href:f,navigate:function(){var t=V(a,e.location);(i?n.replace:n.push)(t)}});return K!==Q?p.ref=t||l:p.innerRef=l,o().createElement(r,p)}))})),G=function(e){return e},J=o().forwardRef;void 0===J&&(J=G),J((function(e,t){var n=e["aria-current"],r=void 0===n?"page":n,i=e.activeClassName,a=void 0===i?"active":i,l=e.activeStyle,s=e.className,u=e.exact,f=e.isActive,p=e.location,h=e.sensitive,m=e.strict,v=e.style,y=e.to,g=e.innerRef,b=N(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return o().createElement(L.Consumer,null,(function(e){e||d(!1);var n=p||e.location,i=q(V(y,n),n),w=i.pathname,x=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=x?W(n.pathname,{path:x,exact:u,sensitive:h,strict:m}):null,E=!!(f?f(k,n):k),S=E?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(s,a):s,_=E?c({},v,{},l):v,C=c({"aria-current":E&&r||null,className:S,style:_,to:i},b);return G!==J?C.ref=t||g:C.innerRef=g,o().createElement(X,C)}))}));var Z,ee=n(4624),te=(n(5587),Z=function(e,t){return(Z=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}Z(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});const ne=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return te(t,e),t.prototype.render=function(){return r.createElement("section",{className:"profile"},r.createElement("div",null,r.createElement("img",{alt:"My head shot picture",src:ee}),r.createElement("h1",null,"Hi, I'm Joshua Sperry"),r.createElement("h2",null,"I'm a front-end web developer and software developer"),r.createElement(X,{to:"/portfolio",className:"portfolio-link"},"View my portfolio")),r.createElement("footer",null,r.createElement("a",{target:"_blank",href:"../../assets/resume.pdf"},"Resume"),r.createElement("a",{title:"mrjoshuasperry@gmail.com",href:"mailto:mrjoshuasperry@gmail.com"},"Email"),r.createElement("a",{rel:"noopener",target:"_blank",href:"https://github.com/mrsperry"},"Github")))},t}(r.Component);n(7825);var re=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const oe=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return re(t,e),t.prototype.render=function(){for(var e,t=[],o=0;o<this.props.data.length;o++){var i=this.props.data[o],a=i.name,l=i.description,s=i.alt,u=a.toLowerCase().split(" ").join("-"),c=this.props.assetFolder+"/"+u+".jpg",f=n(990)("./"+c),p=null!==(e=this.props.urlPrefix)&&void 0!==e?e:"";""!==p&&(p+="/");var d="https://mrsperry.github.io/"+p+u;t.push(r.createElement("a",{key:o,href:d,className:"project"},r.createElement("figure",{title:a},r.createElement("img",{src:f,alt:s}),r.createElement("figcaption",null,r.createElement("span",{className:"title"},a),l?r.createElement("span",{className:"description"},l):""))))}return r.createElement("section",{className:"project-display"},this.props.title?r.createElement("h1",null,this.props.title):"",t)},t}(r.PureComponent),ie=JSON.parse('[{"name":"CyntraSafe","description":"A modern cybersecurity business site","alt":"A modern cybersecurity business site"},{"name":"Fanlite Engineering","description":"An architectural design company\'s site","alt":"An architectural design company\'s site"},{"name":"Iota Online","description":"A futuristic online game website","alt":"A futuristic online game website"},{"name":"LoveLotus","description":"A simple, modern dating app","alt":"A simple, modern dating app"},{"name":"Opinionated","description":"A minimal personal blog","alt":"A minimal personal blog"},{"name":"SineStats","description":"A personal server dashboard","alt":"A personal server dashboard"},{"name":"sudo news","description":"A programmer targeted tech blog","alt":"A programmer targeted tech blog"}]');n(2251);var ae=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const le=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return ae(t,e),t.prototype.render=function(){for(var e=["Home","Portfolio","Games","Visuals"],t=[],n=0;n<e.length;n++){var o,i=e[n],a=i.toLowerCase();o=this.props.view===a?r.createElement("a",{className:"active"},i):r.createElement(X,{to:"/"+a},i),t.push(r.createElement("li",{key:n},o))}return r.createElement("nav",{className:"navigation"},r.createElement("ul",null,t))},t}(r.PureComponent);var se=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const ue=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return se(t,e),t.prototype.render=function(){return r.createElement(r.Fragment,null,r.createElement(le,{view:"portfolio"}),r.createElement("section",{className:"portfolio"},r.createElement(oe,{title:"Personal Projects",data:ie,assetFolder:"portfolio",urlPrefix:"portfolio/projects"})))},t}(r.Component),ce=JSON.parse('[{"name":"Overseer","description":"An incremental virus scanner experience","alt":"A dark shield with a green circle in the center"},{"name":"Fishing Enterprises","description":"An idle/incremental fishing business management simulator","alt":"A pixel art rendition of a fish"},{"name":"Asteroids","description":"A remake of the classic Atari game","alt":"A view of a blue ship in the middle of an asteroid field"}]');var fe=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}();const pe=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return fe(t,e),t.prototype.render=function(){return r.createElement(r.Fragment,null,r.createElement(le,{view:"games"}),r.createElement("section",{className:"games"},r.createElement(oe,{title:"Browser Games",data:ce,assetFolder:"games"})))},t}(r.PureComponent),de=JSON.parse('{"p":["Falling Lights","Cubic Audio Visualizer","Random Walkers"],"q":[{"name":"Falling Lights","alt":"Streaks of colored lights falling down"},{"name":"Geometric Constellations","alt":"Circles floating in space connecting with other nearby circles to create constellations"},{"name":"Rainbow Black Hole","alt":"A rainbow of colors descending towards the center of a circle"},{"name":"Cubic Audio Visualizer","alt":"An audio visualizer that uses colored cubes to display the audio level"},{"name":"Falling Text","alt":"Small sequences of randomly changing letters falling down"},{"name":"Reaching Arms","alt":"Many arms reaching out from the center giving the illusion of being pulled in"},{"name":"Raindrops","alt":"Raindrops splashing after falling"},{"name":"Futuristic Audio Visualizer","alt":"An audio visualizer that uses moving bars and many dots to display the audio level"},{"name":"Rotating Spiral","alt":"A series of dots, emanating from the center, slowly expanding outwards in a rotating spiral"},{"name":"Random Walkers","alt":"Multiple colored walkers move out along random paths from the center"},{"name":"Abstract Squares","alt":"A series of collections of randomly placed colored squares"},{"name":"Bouncing Laser","alt":"A laser bouncing around randomly hitting nodes"},{"name":"Gradient Circuit","alt":"A circuit shape generated with a gradient of colors from the center"},{"name":"Meteor Shower","alt":"Small lines of light coming from the center of the screen to create a meteor shower effect"}]}');n(5456);var he=n(615),me=(n(5450),function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}()),ve=function(){return(ve=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};const ye=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return me(t,e),t.prototype.render=function(){var e=de.p,t=de.q;return r.createElement(r.Fragment,null,r.createElement(le,{view:"visuals"}),r.createElement("section",{className:"visuals"},r.createElement(he.lr,ve({},{autoPlay:!0,interval:5e3,infiniteLoop:!0,showIndicators:!1,showStatus:!1,showThumbs:!1,transitionTime:1e3}),e.map((function(e,o){for(var i=n(1168)("./carousel-"+(o+1)+".jpg"),a="",l=0,s=t;l<s.length;l++){var u=s[l];if(u.name===e){a=u.alt;break}}var c=e.toLowerCase().split(" ").join("-");return r.createElement("a",{key:o,tabIndex:-1,title:e,href:"https://mrsperry.github.io/visuals/projects/"+c},r.createElement("img",{src:i,alt:a}),r.createElement("p",{className:"legend"},e))}))),r.createElement(oe,{data:t,assetFolder:"visuals",urlPrefix:"visuals/projects"})))},t}(r.PureComponent);n(9127),n(6442),n(6176),e=n.hmd(e);var ge=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),be=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return ge(t,e),t.updateHash=function(e){window.location.hash="#"+e},t.prototype.componentDidMount=function(){var e=this;window.addEventListener("hashchange",(function(){return e.forceUpdate()}),!1)},t.prototype.render=function(){var e=window.location.hash;return e.substring(e.indexOf("#")+1).toLowerCase(),r.createElement(B,null,r.createElement($,null,r.createElement(H,{path:"/portfolio"},r.createElement(ue,null)),r.createElement(H,{path:"/games"},r.createElement(pe,null)),r.createElement(H,{path:"/visuals"},r.createElement(ye,null)),r.createElement(H,{path:"/"},r.createElement(ne,null))))},t}(r.PureComponent);const we=(0,i.wU)(e)(be)},4323:(e,t,n)=>{"use strict";var r=n(7294),o=n(3935),i=n(594);o.render(r.createElement(i.Z,null),document.getElementById("root"))},4184:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)){if(n.length){var a=o.apply(null,n);a&&e.push(a)}}else if("object"===i)if(n.toString===Object.prototype.toString)for(var l in n)r.call(n,l)&&n[l]&&e.push(l);else e.push(n.toString())}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(n=function(){return o}.apply(t,[]))||(e.exports=n)}()},6704:(e,t,n)=>{(e.exports=n(9252)(!1)).push([e.id,".carousel .control-arrow,.carousel.carousel-slider .control-arrow{-webkit-transition:all .25s ease-in;-moz-transition:all .25s ease-in;-ms-transition:all .25s ease-in;-o-transition:all .25s ease-in;transition:all .25s ease-in;opacity:.4;filter:alpha(opacity=40);position:absolute;z-index:2;top:20px;background:none;border:0;font-size:32px;cursor:pointer}.carousel .control-arrow:focus,.carousel .control-arrow:hover{opacity:1;filter:alpha(opacity=100)}.carousel .control-arrow:before,.carousel.carousel-slider .control-arrow:before{margin:0 5px;display:inline-block;border-top:8px solid transparent;border-bottom:8px solid transparent;content:''}.carousel .control-disabled.control-arrow{opacity:0;filter:alpha(opacity=0);cursor:inherit;display:none}.carousel .control-prev.control-arrow{left:0}.carousel .control-prev.control-arrow:before{border-right:8px solid #fff}.carousel .control-next.control-arrow{right:0}.carousel .control-next.control-arrow:before{border-left:8px solid #fff}.carousel-root{outline:none}.carousel{position:relative;width:100%}.carousel *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.carousel img{width:100%;display:inline-block;pointer-events:none}.carousel .carousel{position:relative}.carousel .control-arrow{outline:0;border:0;background:none;top:50%;margin-top:-13px;font-size:18px}.carousel .thumbs-wrapper{margin:20px;overflow:hidden}.carousel .thumbs{-webkit-transition:all .15s ease-in;-moz-transition:all .15s ease-in;-ms-transition:all .15s ease-in;-o-transition:all .15s ease-in;transition:all .15s ease-in;-webkit-transform:translate3d(0, 0, 0);-moz-transform:translate3d(0, 0, 0);-ms-transform:translate3d(0, 0, 0);-o-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);position:relative;list-style:none;white-space:nowrap}.carousel .thumb{-webkit-transition:border .15s ease-in;-moz-transition:border .15s ease-in;-ms-transition:border .15s ease-in;-o-transition:border .15s ease-in;transition:border .15s ease-in;display:inline-block;margin-right:6px;white-space:nowrap;overflow:hidden;border:3px solid #fff;padding:2px}.carousel .thumb:focus{border:3px solid #ccc;outline:none}.carousel .thumb.selected,.carousel .thumb:hover{border:3px solid #333}.carousel .thumb img{vertical-align:top}.carousel.carousel-slider{position:relative;margin:0;overflow:hidden}.carousel.carousel-slider .control-arrow{top:0;color:#fff;font-size:26px;bottom:0;margin-top:0;padding:5px}.carousel.carousel-slider .control-arrow:hover{background:rgba(0,0,0,0.2)}.carousel .slider-wrapper{overflow:hidden;margin:auto;width:100%;-webkit-transition:height .15s ease-in;-moz-transition:height .15s ease-in;-ms-transition:height .15s ease-in;-o-transition:height .15s ease-in;transition:height .15s ease-in}.carousel .slider-wrapper.axis-horizontal .slider{-ms-box-orient:horizontal;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-moz-flex;display:-webkit-flex;display:flex}.carousel .slider-wrapper.axis-horizontal .slider .slide{flex-direction:column;flex-flow:column}.carousel .slider-wrapper.axis-vertical{-ms-box-orient:horizontal;display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-moz-flex;display:-webkit-flex;display:flex}.carousel .slider-wrapper.axis-vertical .slider{-webkit-flex-direction:column;flex-direction:column}.carousel .slider{margin:0;padding:0;position:relative;list-style:none;width:100%}.carousel .slider.animated{-webkit-transition:all .35s ease-in-out;-moz-transition:all .35s ease-in-out;-ms-transition:all .35s ease-in-out;-o-transition:all .35s ease-in-out;transition:all .35s ease-in-out}.carousel .slide{min-width:100%;margin:0;position:relative;text-align:center}.carousel .slide img{width:100%;vertical-align:top;border:0}.carousel .slide iframe{display:inline-block;width:calc(100% - 80px);margin:0 40px 40px;border:0}.carousel .slide .legend{-webkit-transition:all .5s ease-in-out;-moz-transition:all .5s ease-in-out;-ms-transition:all .5s ease-in-out;-o-transition:all .5s ease-in-out;transition:all .5s ease-in-out;position:absolute;bottom:40px;left:50%;margin-left:-45%;width:90%;border-radius:10px;background:#000;color:#fff;padding:10px;font-size:12px;text-align:center;opacity:0.25;-webkit-transition:opacity .35s ease-in-out;-moz-transition:opacity .35s ease-in-out;-ms-transition:opacity .35s ease-in-out;-o-transition:opacity .35s ease-in-out;transition:opacity .35s ease-in-out}.carousel .control-dots{position:absolute;bottom:0;margin:10px 0;padding:0;text-align:center;width:100%;z-index:1}@media (min-width: 960px){.carousel .control-dots{bottom:0}}.carousel .control-dots .dot{-webkit-transition:opacity .25s ease-in;-moz-transition:opacity .25s ease-in;-ms-transition:opacity .25s ease-in;-o-transition:opacity .25s ease-in;transition:opacity .25s ease-in;opacity:.3;filter:alpha(opacity=30);box-shadow:1px 1px 2px rgba(0,0,0,0.9);background:#fff;border-radius:50%;width:8px;height:8px;cursor:pointer;display:inline-block;margin:0 8px}.carousel .control-dots .dot.selected,.carousel .control-dots .dot:hover{opacity:1;filter:alpha(opacity=100)}.carousel .carousel-status{position:absolute;top:0;right:0;padding:5px;font-size:10px;text-shadow:1px 1px 1px rgba(0,0,0,0.9);color:#fff}.carousel:hover .slide .legend{opacity:1}\n",""])},514:(e,t,n)=>{var r=n(3456);(e.exports=n(9252)(!1)).push([e.id,'@font-face{font-family:"Klein";src:url('+r(n(7394))+') format("truetype");font-style:normal}:root{font-family:"Klein";font-size:16px;color:#121212}body{background-color:#FAFAFA;margin:0}#root{display:flex;flex-direction:column;justify-content:flex-start;align-items:center;margin-left:calc(100vw - 100%)}#root nav,#root section{max-width:1024px}\n',""])},6486:(e,t,n)=>{(e.exports=n(9252)(!1)).push([e.id,".navigation{width:100%;margin:2rem 2rem 4rem}.navigation ul{display:flex;flex-direction:row;justify-content:flex-end;align-items:center}.navigation li+li{padding-left:2rem}.navigation a{color:#121212;font-size:1.15rem}.navigation a:hover,.navigation a:active,.navigation a:focus,.navigation a.active{color:#121212}.navigation a::after{background-color:#121212}\n",""])},5912:(e,t,n)=>{(e.exports=n(9252)(!1)).push([e.id,".project-display{display:flex;flex-direction:row;justify-content:center;align-items:center;flex-wrap:wrap}.project-display h1{flex-basis:100%;padding:0 0.5rem;border-bottom:1px solid #CCCCCC}.project-display a{border-radius:1rem;box-shadow:0rem 0rem 2rem #CCCCCC;overflow:hidden;padding:0;margin:1rem}.project-display a::after{content:none}.project-display a:hover figcaption,.project-display a:active figcaption,.project-display a:focus figcaption{transform:translateY(0%)}.project-display figure{position:relative}.project-display figure img{display:block;border-radius:inherit}.project-display figure figcaption{transition:transform 250ms ease-in-out;position:absolute;background-color:rgba(0,0,0,0.85);transform:translateY(100%);bottom:0;left:0;right:0;padding:1.5rem}.project-display figure figcaption span{display:block;color:#FAFAFA;background-color:transparent}.project-display figure figcaption .title{font-weight:bold}.project-display figure figcaption .description{margin-top:0.5rem;font-size:0.8rem}\n",""])},7342:(e,t,n)=>{(e.exports=n(9252)(!1)).push([e.id,".profile{display:flex;flex-direction:column;justify-content:center;align-items:center;width:100vw;height:100vh}.profile div{display:flex;flex-direction:column;justify-content:center;align-items:center}.profile img{border-radius:50%;box-shadow:0 0 1rem #AAAAAA}.profile h1{font-size:2.25rem;margin:2rem 0 1rem}.profile .portfolio-link{transition:color 250ms ease-in-out,background-color 250ms ease-in-out;color:#121212;outline:none;padding:1rem 4rem;border:2px solid #121212;margin:3rem 0}.profile .portfolio-link:hover,.profile .portfolio-link:active,.profile .portfolio-link:focus{color:#FAFAFA;background-color:#121212}.profile .portfolio-link::after{content:none}.profile a{font-size:1.15rem}.profile a+a{margin-left:4rem}\n",""])},5374:(e,t,n)=>{(e.exports=n(9252)(!1)).push([e.id,".visuals .carousel{margin-bottom:2rem}.visuals .carousel .slide{display:flex}.visuals .carousel .slide .legend{font-size:1rem;color:#FFFFFF;background-color:transparent;opacity:1;bottom:1rem}.visuals .carousel .slide a{padding:0}.visuals .carousel .slide a::after{content:none}.visuals .project{margin:0.5rem}.visuals .project figcaption{background-color:transparent;padding:0 0 1rem}.visuals .project figcaption .title{text-align:center;font-weight:normal}\n",""])},3746:(e,t,n)=>{(e.exports=n(9252)(!1)).push([e.id,'a{position:relative;color:#0070cc;outline:none;padding:0rem 0.5rem}a:hover,a:active,a:focus,a.active{transition:color 250ms ease-in-out;color:#0086f3}a:hover::after,a:active::after,a:focus::after,a.active::after{width:100%;left:0%}a::after{transition:width 250ms ease-in-out,left 250ms ease-in-out;content:"";position:absolute;background-color:#0086f3;width:0;height:1px;left:50%;bottom:0}\n',""])},9203:(e,t,n)=>{(e.exports=n(9252)(!1)).push([e.id,"*{color:inherit;background-color:inherit;padding:0;border:none;margin:0}ul,ol{list-style-type:none}a{text-decoration:none}button{cursor:pointer;color:inherit;background-color:inherit;font-family:inherit;font-size:inherit}h1,h2{font-weight:normal}\n",""])},9252:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n,r=e[1]||"",o=e[3];if(!o)return r;if(t&&"function"==typeof btoa){var i=(n=o,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */"),a=o.sources.map((function(e){return"/*# sourceURL="+o.sourceRoot+e+" */"}));return[r].concat(a).concat([i]).join("\n")}return[r].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},3456:e=>{e.exports=function(e){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)?'"'+e.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':e)}},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,i){for(var a,l,s=o(e),u=1;u<arguments.length;u++){for(var c in a=Object(arguments[u]))n.call(a,c)&&(s[c]=a[c]);if(t){l=t(a);for(var f=0;f<l.length;f++)r.call(a,l[f])&&(s[l[f]]=a[l[f]])}}return s}},2703:(e,t,n)=>{"use strict";var r=n(414);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},5697:(e,t,n)=>{e.exports=n(2703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},4448:(e,t,n)=>{"use strict";var r=n(7294),o=n(7418),i=n(297);function a(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,o,i,a,l],u=0;(e=Error(t.replace(/%s/g,(function(){return s[u++]})))).name="Invariant Violation"}throw e.framesToPop=1,e}}function l(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);a(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}function s(e,t,n,r,o,i,a,l,s){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}r||l("227");var u=!1,c=null,f=!1,p=null,d={onError:function(e){u=!0,c=e}};function h(e,t,n,r,o,i,a,l,f){u=!1,c=null,s.apply(d,arguments)}var m=null,v={};function y(){if(m)for(var e in v){var t=v[e],n=m.indexOf(e);if(-1<n||l("96",e),!b[n])for(var r in t.extractEvents||l("97",e),b[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,s=r;w.hasOwnProperty(s)&&l("99",s),w[s]=i;var u=i.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&g(u[o],a,s);o=!0}else i.registrationName?(g(i.registrationName,a,s),o=!0):o=!1;o||l("98",r,e)}}}function g(e,t,n){x[e]&&l("100",e),x[e]=t,k[e]=t.eventTypes[n].dependencies}var b=[],w={},x={},k={},E=null,S=null,_=null;function C(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=_(r),function(e,t,n,r,o,i,a,s,d){if(h.apply(this,arguments),u){if(u){var m=c;u=!1,c=null}else l("198"),m=void 0;f||(f=!0,p=m)}}(t,n,void 0,e),e.currentTarget=null}function T(e,t){return null==t&&l("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function P(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var O=null;function R(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)C(e,t,n[o],r[o]);else n&&C(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function j(e){return R(e,!0)}function I(e){return R(e,!1)}var M={injectEventPluginOrder:function(e){m&&l("101"),m=Array.prototype.slice.call(e),y()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];v.hasOwnProperty(t)&&v[t]===r||(v[t]&&l("102",t),v[t]=r,n=!0)}n&&y()}};function A(e,t){var n=e.stateNode;if(!n)return null;var r=E(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&l("231",t,typeof n),n)}function N(e,t){if(null!==e&&(O=T(O,e)),e=O,O=null,e&&(P(e,t?j:I),O&&l("95"),f))throw t=p,f=!1,p=null,t}var D=Math.random().toString(36).slice(2),L="__reactInternalInstance$"+D,z="__reactEventHandlers$"+D;function U(e){if(e[L])return e[L];for(;!e[L];){if(!e.parentNode)return null;e=e.parentNode}return 7===(e=e[L]).tag||8===e.tag?e:null}function F(e){return!(e=e[L])||7!==e.tag&&8!==e.tag?null:e}function W(e){if(7===e.tag||8===e.tag)return e.stateNode;l("33")}function H(e){return e[z]||null}function $(e){do{e=e.return}while(e&&7!==e.tag);return e||null}function B(e,t,n){(t=A(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=T(n._dispatchListeners,t),n._dispatchInstances=T(n._dispatchInstances,e))}function V(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=$(t);for(t=n.length;0<t--;)B(n[t],"captured",e);for(t=0;t<n.length;t++)B(n[t],"bubbled",e)}}function q(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=A(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=T(n._dispatchListeners,t),n._dispatchInstances=T(n._dispatchInstances,e))}function K(e){e&&e.dispatchConfig.registrationName&&q(e._targetInst,null,e)}function Q(e){P(e,V)}var Y=!("undefined"==typeof window||!window.document||!window.document.createElement);function X(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var G={animationend:X("Animation","AnimationEnd"),animationiteration:X("Animation","AnimationIteration"),animationstart:X("Animation","AnimationStart"),transitionend:X("Transition","TransitionEnd")},J={},Z={};function ee(e){if(J[e])return J[e];if(!G[e])return e;var t,n=G[e];for(t in n)if(n.hasOwnProperty(t)&&t in Z)return J[e]=n[t];return e}Y&&(Z=document.createElement("div").style,"AnimationEvent"in window||(delete G.animationend.animation,delete G.animationiteration.animation,delete G.animationstart.animation),"TransitionEvent"in window||delete G.transitionend.transition);var te=ee("animationend"),ne=ee("animationiteration"),re=ee("animationstart"),oe=ee("transitionend"),ie="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ae=null,le=null,se=null;function ue(){if(se)return se;var e,t,n=le,r=n.length,o="value"in ae?ae.value:ae.textContent,i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return se=o.slice(e,1<t?1-t:void 0)}function ce(){return!0}function fe(){return!1}function pe(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ce:fe,this.isPropagationStopped=fe,this}function de(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function he(e){e instanceof this||l("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function me(e){e.eventPool=[],e.getPooled=de,e.release=he}o(pe.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ce)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ce)},persist:function(){this.isPersistent=ce},isPersistent:fe,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=fe,this._dispatchInstances=this._dispatchListeners=null}}),pe.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},pe.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,me(n),n},me(pe);var ve=pe.extend({data:null}),ye=pe.extend({data:null}),ge=[9,13,27,32],be=Y&&"CompositionEvent"in window,we=null;Y&&"documentMode"in document&&(we=document.documentMode);var xe=Y&&"TextEvent"in window&&!we,ke=Y&&(!be||we&&8<we&&11>=we),Ee=String.fromCharCode(32),Se={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},_e=!1;function Ce(e,t){switch(e){case"keyup":return-1!==ge.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Te(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Pe=!1,Oe={eventTypes:Se,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(be)e:{switch(e){case"compositionstart":o=Se.compositionStart;break e;case"compositionend":o=Se.compositionEnd;break e;case"compositionupdate":o=Se.compositionUpdate;break e}o=void 0}else Pe?Ce(e,n)&&(o=Se.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=Se.compositionStart);return o?(ke&&"ko"!==n.locale&&(Pe||o!==Se.compositionStart?o===Se.compositionEnd&&Pe&&(i=ue()):(le="value"in(ae=r)?ae.value:ae.textContent,Pe=!0)),o=ve.getPooled(o,t,n,r),(i||null!==(i=Te(n)))&&(o.data=i),Q(o),i=o):i=null,(e=xe?function(e,t){switch(e){case"compositionend":return Te(t);case"keypress":return 32!==t.which?null:(_e=!0,Ee);case"textInput":return(e=t.data)===Ee&&_e?null:e;default:return null}}(e,n):function(e,t){if(Pe)return"compositionend"===e||!be&&Ce(e,t)?(e=ue(),se=le=ae=null,Pe=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ke&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=ye.getPooled(Se.beforeInput,t,n,r)).data=e,Q(t)):t=null,null===i?t:null===t?i:[i,t]}},Re=null,je=null,Ie=null;function Me(e){if(e=S(e)){"function"!=typeof Re&&l("280");var t=E(e.stateNode);Re(e.stateNode,e.type,t)}}function Ae(e){je?Ie?Ie.push(e):Ie=[e]:je=e}function Ne(){if(je){var e=je,t=Ie;if(Ie=je=null,Me(e),t)for(e=0;e<t.length;e++)Me(t[e])}}function De(e,t){return e(t)}function Le(e,t,n){return e(t,n)}function ze(){}var Ue=!1;function Fe(e,t){if(Ue)return e(t);Ue=!0;try{return De(e,t)}finally{Ue=!1,(null!==je||null!==Ie)&&(ze(),Ne())}}var We={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function He(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!We[e.type]:"textarea"===t}function $e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Be(e){if(!Y)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function Ve(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function qe(e){e._valueTracker||(e._valueTracker=function(e){var t=Ve(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Ve(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Qe=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Ye=/^(.*)[\\\/]/,Xe="function"==typeof Symbol&&Symbol.for,Ge=Xe?Symbol.for("react.element"):60103,Je=Xe?Symbol.for("react.portal"):60106,Ze=Xe?Symbol.for("react.fragment"):60107,et=Xe?Symbol.for("react.strict_mode"):60108,tt=Xe?Symbol.for("react.profiler"):60114,nt=Xe?Symbol.for("react.provider"):60109,rt=Xe?Symbol.for("react.context"):60110,ot=Xe?Symbol.for("react.async_mode"):60111,it=Xe?Symbol.for("react.forward_ref"):60112,at=Xe?Symbol.for("react.placeholder"):60113,lt="function"==typeof Symbol&&Symbol.iterator;function st(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=lt&&e[lt]||e["@@iterator"])?e:null}function ut(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ot:return"AsyncMode";case Ze:return"Fragment";case Je:return"Portal";case tt:return"Profiler";case et:return"StrictMode";case at:return"Placeholder"}if("object"==typeof e){switch(e.$$typeof){case rt:return"Context.Consumer";case nt:return"Context.Provider";case it:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef")}if("function"==typeof e.then&&(e=1===e._reactStatus?e._reactResult:null))return ut(e)}return null}function ct(e){var t="";do{e:switch(e.tag){case 4:case 0:case 1:case 2:case 3:case 7:case 10:var n=e._debugOwner,r=e._debugSource,o=ut(e.type),i=null;n&&(i=ut(n.type)),n=o,o="",r?o=" (at "+r.fileName.replace(Ye,"")+":"+r.lineNumber+")":i&&(o=" (created by "+i+")"),i="\n    in "+(n||"Unknown")+o;break e;default:i=""}t+=i,e=e.return}while(e);return t}var ft=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,pt=Object.prototype.hasOwnProperty,dt={},ht={};function mt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var vt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){vt[e]=new mt(e,0,!1,e,null)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];vt[t]=new mt(t,1,!1,e[1],null)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){vt[e]=new mt(e,2,!1,e.toLowerCase(),null)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){vt[e]=new mt(e,2,!1,e,null)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){vt[e]=new mt(e,3,!1,e.toLowerCase(),null)})),["checked","multiple","muted","selected"].forEach((function(e){vt[e]=new mt(e,3,!0,e,null)})),["capture","download"].forEach((function(e){vt[e]=new mt(e,4,!1,e,null)})),["cols","rows","size","span"].forEach((function(e){vt[e]=new mt(e,6,!1,e,null)})),["rowSpan","start"].forEach((function(e){vt[e]=new mt(e,5,!1,e.toLowerCase(),null)}));var yt=/[\-:]([a-z])/g;function gt(e){return e[1].toUpperCase()}function bt(e,t,n,r){var o=vt.hasOwnProperty(t)?vt[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!pt.call(ht,e)||!pt.call(dt,e)&&(ft.test(e)?ht[e]=!0:(dt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function wt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function xt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function kt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=wt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Et(e,t){null!=(t=t.checked)&&bt(e,"checked",t,!1)}function St(e,t){Et(e,t);var n=wt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ct(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ct(e,t.type,wt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function _t(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ct(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(yt,gt);vt[t]=new mt(t,1,!1,e,null)})),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(yt,gt);vt[t]=new mt(t,1,!1,e,"http://www.w3.org/1999/xlink")})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(yt,gt);vt[t]=new mt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")})),vt.tabIndex=new mt("tabIndex",1,!1,"tabindex",null);var Tt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Pt(e,t,n){return(e=pe.getPooled(Tt.change,e,t,n)).type="change",Ae(n),Q(e),e}var Ot=null,Rt=null;function jt(e){N(e,!1)}function It(e){if(Ke(W(e)))return e}function Mt(e,t){if("change"===e)return t}var At=!1;function Nt(){Ot&&(Ot.detachEvent("onpropertychange",Dt),Rt=Ot=null)}function Dt(e){"value"===e.propertyName&&It(Rt)&&Fe(jt,e=Pt(Rt,e,$e(e)))}function Lt(e,t,n){"focus"===e?(Nt(),Rt=n,(Ot=t).attachEvent("onpropertychange",Dt)):"blur"===e&&Nt()}function zt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return It(Rt)}function Ut(e,t){if("click"===e)return It(t)}function Ft(e,t){if("input"===e||"change"===e)return It(t)}Y&&(At=Be("input")&&(!document.documentMode||9<document.documentMode));var Wt={eventTypes:Tt,_isInputEventSupported:At,extractEvents:function(e,t,n,r){var o=t?W(t):window,i=void 0,a=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?i=Mt:He(o)?At?i=Ft:(i=zt,a=Lt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Ut),i&&(i=i(e,t)))return Pt(i,n,r);a&&a(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Ct(o,"number",o.value)}},Ht=pe.extend({view:null,detail:null}),$t={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Bt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=$t[e])&&!!t[e]}function Vt(){return Bt}var qt=0,Kt=0,Qt=!1,Yt=!1,Xt=Ht.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=qt;return qt=e.screenX,Qt?"mousemove"===e.type?e.screenX-t:0:(Qt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Kt;return Kt=e.screenY,Yt?"mousemove"===e.type?e.screenY-t:0:(Yt=!0,0)}}),Gt=Xt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Jt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Zt={eventTypes:Jt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?U(t):null):i=null,i===t)return null;var a=void 0,l=void 0,s=void 0,u=void 0;"mouseout"===e||"mouseover"===e?(a=Xt,l=Jt.mouseLeave,s=Jt.mouseEnter,u="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=Gt,l=Jt.pointerLeave,s=Jt.pointerEnter,u="pointer");var c=null==i?o:W(i);if(o=null==t?o:W(t),(e=a.getPooled(l,i,n,r)).type=u+"leave",e.target=c,e.relatedTarget=o,(n=a.getPooled(s,t,n,r)).type=u+"enter",n.target=o,n.relatedTarget=c,r=t,i&&r)e:{for(o=r,u=0,a=t=i;a;a=$(a))u++;for(a=0,s=o;s;s=$(s))a++;for(;0<u-a;)t=$(t),u--;for(;0<a-u;)o=$(o),a--;for(;u--;){if(t===o||t===o.alternate)break e;t=$(t),o=$(o)}t=null}else t=null;for(o=t,t=[];i&&i!==o&&(null===(u=i.alternate)||u!==o);)t.push(i),i=$(i);for(i=[];r&&r!==o&&(null===(u=r.alternate)||u!==o);)i.push(r),r=$(r);for(r=0;r<t.length;r++)q(t[r],"bubbled",e);for(r=i.length;0<r--;)q(i[r],"captured",n);return[e,n]}},en=Object.prototype.hasOwnProperty;function tn(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function nn(e,t){if(tn(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!en.call(t,n[r])||!tn(e[n[r]],t[n[r]]))return!1;return!0}function rn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 5===t.tag?2:3}function on(e){2!==rn(e)&&l("188")}function an(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=rn(e))&&l("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var a=o.child;a;){if(a===n)return on(o),e;if(a===r)return on(o),t;a=a.sibling}l("188")}if(n.return!==r.return)n=o,r=i;else{a=!1;for(var s=o.child;s;){if(s===n){a=!0,n=o,r=i;break}if(s===r){a=!0,r=o,n=i;break}s=s.sibling}if(!a){for(s=i.child;s;){if(s===n){a=!0,n=i,r=o;break}if(s===r){a=!0,r=i,n=o;break}s=s.sibling}a||l("189")}}n.alternate!==r&&l("190")}return 5!==n.tag&&l("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(7===t.tag||8===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var ln=pe.extend({animationName:null,elapsedTime:null,pseudoElement:null}),sn=pe.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),un=Ht.extend({relatedTarget:null});function cn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var fn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},pn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},dn=Ht.extend({key:function(e){if(e.key){var t=fn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=cn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?pn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?cn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?cn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),hn=Xt.extend({dataTransfer:null}),mn=Ht.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),vn=pe.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yn=Xt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),gn=[["abort","abort"],[te,"animationEnd"],[ne,"animationIteration"],[re,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[oe,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],bn={},wn={};function xn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},bn[e]=t,wn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach((function(e){xn(e,!0)})),gn.forEach((function(e){xn(e,!1)}));var kn={eventTypes:bn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=wn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=wn[e];if(!o)return null;switch(e){case"keypress":if(0===cn(n))return null;case"keydown":case"keyup":e=dn;break;case"blur":case"focus":e=un;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Xt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=mn;break;case te:case ne:case re:e=ln;break;case oe:e=vn;break;case"scroll":e=Ht;break;case"wheel":e=yn;break;case"copy":case"cut":case"paste":e=sn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Gt;break;default:e=pe}return Q(t=e.getPooled(o,t,n,r)),t}},En=kn.isInteractiveTopLevelEventType,Sn=[];function _n(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=5!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=U(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=$e(e.nativeEvent);r=e.topLevelType;for(var i=e.nativeEvent,a=null,l=0;l<b.length;l++){var s=b[l];s&&(s=s.extractEvents(r,t,i,o))&&(a=T(a,s))}N(a,!1)}}var Cn=!0;function Tn(e,t){if(!t)return null;var n=(En(e)?On:Rn).bind(null,e);t.addEventListener(e,n,!1)}function Pn(e,t){if(!t)return null;var n=(En(e)?On:Rn).bind(null,e);t.addEventListener(e,n,!0)}function On(e,t){Le(Rn,e,t)}function Rn(e,t){if(Cn){var n=$e(t);if(null===(n=U(n))||"number"!=typeof n.tag||2===rn(n)||(n=null),Sn.length){var r=Sn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Fe(_n,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Sn.length&&Sn.push(e)}}}var jn={},In=0,Mn="_reactListenersID"+(""+Math.random()).slice(2);function An(e){return Object.prototype.hasOwnProperty.call(e,Mn)||(e[Mn]=In++,jn[e[Mn]]={}),jn[e[Mn]]}function Nn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Ln(e,t){var n,r=Dn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Dn(r)}}function zn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?zn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function Un(){for(var e=window,t=Nn();t instanceof e.HTMLIFrameElement;){try{e=t.contentDocument.defaultView}catch(e){break}t=Nn(e.document)}return t}function Fn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Wn=Y&&"documentMode"in document&&11>=document.documentMode,Hn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},$n=null,Bn=null,Vn=null,qn=!1;function Kn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return qn||null==$n||$n!==Nn(n)?null:(n="selectionStart"in(n=$n)&&Fn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vn&&nn(Vn,n)?null:(Vn=n,(e=pe.getPooled(Hn.select,Bn,e,t)).type="select",e.target=$n,Q(e),e))}var Qn={eventTypes:Hn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=An(i),o=k.onSelect;for(var a=0;a<o.length;a++){var l=o[a];if(!i.hasOwnProperty(l)||!i[l]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?W(t):window,e){case"focus":(He(i)||"true"===i.contentEditable)&&($n=i,Bn=t,Vn=null);break;case"blur":Vn=Bn=$n=null;break;case"mousedown":qn=!0;break;case"contextmenu":case"mouseup":case"dragend":return qn=!1,Kn(n,r);case"selectionchange":if(Wn)break;case"keydown":case"keyup":return Kn(n,r)}return null}};function Yn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Xn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+wt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Gn(e,t){return null!=t.dangerouslySetInnerHTML&&l("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Jn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&l("92"),Array.isArray(t)&&(1>=t.length||l("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:wt(n)}}function Zn(e,t){var n=wt(t.value),r=wt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function er(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}M.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),E=H,S=F,_=W,M.injectEventPluginsByName({SimpleEventPlugin:kn,EnterLeaveEventPlugin:Zt,ChangeEventPlugin:Wt,SelectEventPlugin:Qn,BeforeInputEventPlugin:Oe});var tr="http://www.w3.org/1999/xhtml";function nr(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function rr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?nr(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var or,ir=void 0,ar=(or=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ir=ir||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=ir.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return or(e,t)}))}:or);function lr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var sr={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ur=["Webkit","ms","Moz","O"];function cr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,i=t[n];o=null==i||"boolean"==typeof i||""===i?"":r||"number"!=typeof i||0===i||sr.hasOwnProperty(o)&&sr[o]?(""+i).trim():i+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(sr).forEach((function(e){ur.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),sr[t]=sr[e]}))}));var fr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function pr(e,t){t&&(fr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&l("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&l("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||l("61")),null!=t.style&&"object"!=typeof t.style&&l("62",""))}function dr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function hr(e,t){var n=An(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=k[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Pn("scroll",e);break;case"focus":case"blur":Pn("focus",e),Pn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Be(o)&&Pn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===ie.indexOf(o)&&Tn(o,e)}n[o]=!0}}}function mr(){}var vr=null,yr=null;function gr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function br(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}function wr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function xr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var kr=[],Er=-1;function Sr(e){0>Er||(e.current=kr[Er],kr[Er]=null,Er--)}function _r(e,t){Er++,kr[Er]=e.current,e.current=t}var Cr={},Tr={current:Cr},Pr={current:!1},Or=Cr;function Rr(e,t){var n=e.type.contextTypes;if(!n)return Cr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function jr(e){return null!=e.childContextTypes}function Ir(e){Sr(Pr),Sr(Tr)}function Mr(e){Sr(Pr),Sr(Tr)}function Ar(e,t,n){Tr.current!==Cr&&l("168"),_r(Tr,t),_r(Pr,n)}function Nr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||l("108",ut(t)||"Unknown",i);return o({},n,r)}function Dr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Cr,Or=Tr.current,_r(Tr,t),_r(Pr,Pr.current),!0}function Lr(e,t,n){var r=e.stateNode;r||l("169"),n?(t=Nr(e,t,Or),r.__reactInternalMemoizedMergedChildContext=t,Sr(Pr),Sr(Tr),_r(Tr,t)):Sr(Pr),_r(Pr,n)}var zr=null,Ur=null;function Fr(e){return function(t){try{return e(t)}catch(e){}}}function Wr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=t,this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function $r(e,t,n){var r=e.alternate;return null===r?((r=new Wr(e.tag,t,e.key,e.mode)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.childExpirationTime=e.childExpirationTime,r.expirationTime=t!==e.pendingProps?n:e.expirationTime,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.firstContextDependency=e.firstContextDependency,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Br(e,t,n){var r=e.type,o=e.key;e=e.props;var i=void 0;if("function"==typeof r)i=Hr(r)?2:4;else if("string"==typeof r)i=7;else e:switch(r){case Ze:return Vr(e.children,t,n,o);case ot:i=10,t|=3;break;case et:i=10,t|=2;break;case tt:return(r=new Wr(15,e,o,4|t)).type=tt,r.expirationTime=n,r;case at:i=16;break;default:if("object"==typeof r&&null!==r)switch(r.$$typeof){case nt:i=12;break e;case rt:i=11;break e;case it:i=13;break e;default:if("function"==typeof r.then){i=4;break e}}l("130",null==r?r:typeof r,"")}return(t=new Wr(i,e,o,t)).type=r,t.expirationTime=n,t}function Vr(e,t,n,r){return(e=new Wr(9,e,r,t)).expirationTime=n,e}function qr(e,t,n){return(e=new Wr(8,e,null,t)).expirationTime=n,e}function Kr(e,t,n){return(t=new Wr(6,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Qr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n>t?e.earliestPendingTime=t:e.latestPendingTime<t&&(e.latestPendingTime=t),Yr(t,e)}function Yr(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r>e)&&(o=r),0!==(e=o)&&0!==n&&n<e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}var Xr=!1;function Gr(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Jr(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Zr(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function eo(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function to(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Gr(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Gr(e.memoizedState),o=n.updateQueue=Gr(n.memoizedState)):r=e.updateQueue=Jr(o):null===o&&(o=n.updateQueue=Jr(r));null===o||r===o?eo(r,t):null===r.lastUpdate||null===o.lastUpdate?(eo(r,t),eo(o,t)):(eo(r,t),o.lastUpdate=t)}function no(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Gr(e.memoizedState):ro(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ro(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Jr(t)),t}function oo(e,t,n,r,i,a){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(a,r,i):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(null==(i="function"==typeof(e=n.payload)?e.call(a,r,i):e))break;return o({},r,i);case 2:Xr=!0}return r}function io(e,t,n,r,o){Xr=!1;for(var i=(t=ro(e,t)).baseState,a=null,l=0,s=t.firstUpdate,u=i;null!==s;){var c=s.expirationTime;c>o?(null===a&&(a=s,i=u),(0===l||l>c)&&(l=c)):(u=oo(e,0,s,u,n,r),null!==s.callback&&(e.effectTag|=32,s.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=s:(t.lastEffect.nextEffect=s,t.lastEffect=s))),s=s.next}for(c=null,s=t.firstCapturedUpdate;null!==s;){var f=s.expirationTime;f>o?(null===c&&(c=s,null===a&&(i=u)),(0===l||l>f)&&(l=f)):(u=oo(e,0,s,u,n,r),null!==s.callback&&(e.effectTag|=32,s.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=s:(t.lastCapturedEffect.nextEffect=s,t.lastCapturedEffect=s))),s=s.next}null===a&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===c&&(i=u),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=c,e.expirationTime=l,e.memoizedState=u}function ao(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),lo(t.firstEffect,n),t.firstEffect=t.lastEffect=null,lo(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function lo(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&l("191",n),n.call(r)}e=e.nextEffect}}function so(e,t){return{value:e,source:t,stack:ct(t)}}var uo={current:null},co=null,fo=null,po=null;function ho(e,t){var n=e.type._context;_r(uo,n._currentValue),n._currentValue=t}function mo(e){var t=uo.current;Sr(uo),e.type._context._currentValue=t}function vo(e){co=e,po=fo=null,e.firstContextDependency=null}function yo(e,t){return po!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(po=e,t=1073741823),t={context:e,observedBits:t,next:null},null===fo?(null===co&&l("277"),co.firstContextDependency=fo=t):fo=fo.next=t),e._currentValue}var go={},bo={current:go},wo={current:go},xo={current:go};function ko(e){return e===go&&l("174"),e}function Eo(e,t){_r(xo,t),_r(wo,e),_r(bo,go);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:rr(null,"");break;default:t=rr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Sr(bo),_r(bo,t)}function So(e){Sr(bo),Sr(wo),Sr(xo)}function _o(e){ko(xo.current);var t=ko(bo.current),n=rr(t,e.type);t!==n&&(_r(wo,e),_r(bo,n))}function Co(e){wo.current===e&&(Sr(bo),Sr(wo))}var To=(new r.Component).refs;function Po(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var Oo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===rn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=la(),o=Zr(r=Ai(r,e));o.payload=t,null!=n&&(o.callback=n),to(e,o),Ni(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=la(),o=Zr(r=Ai(r,e));o.tag=1,o.payload=t,null!=n&&(o.callback=n),to(e,o),Ni(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=la(),r=Zr(n=Ai(n,e));r.tag=2,null!=t&&(r.callback=t),to(e,r),Ni(e,n)}};function Ro(e,t,n,r,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,a):!(t.prototype&&t.prototype.isPureReactComponent&&nn(n,r)&&nn(o,i))}function jo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Oo.enqueueReplaceState(t,t.state,null)}function Io(e,t,n,r){var o=e.stateNode,i=jr(t)?Or:Tr.current;o.props=n,o.state=e.memoizedState,o.refs=To,o.context=Rr(e,i),null!==(i=e.updateQueue)&&(io(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(Po(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Oo.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(io(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var Mo=Array.isArray;function Ao(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(2!==n.tag&&3!==n.tag&&l("110"),r=n.stateNode),r||l("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===To&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&l("284"),n._owner||l("254",e)}return e}function No(e,t){"textarea"!==e.type&&l("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Do(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=$r(e,t,n)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function s(e,t,n,r){return null===t||8!==t.tag?((t=qr(n,e.mode,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function u(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=Ao(e,t,n),r.return=e,r):((r=Br(n,e.mode,r)).ref=Ao(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||6!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Kr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function f(e,t,n,r,i){return null===t||9!==t.tag?((t=Vr(n,e.mode,r,i)).return=e,t):((t=o(t,n,r)).return=e,t)}function p(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=qr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Ge:return(n=Br(t,e.mode,n)).ref=Ao(e,null,t),n.return=e,n;case Je:return(t=Kr(t,e.mode,n)).return=e,t}if(Mo(t)||st(t))return(t=Vr(t,e.mode,n,null)).return=e,t;No(e,t)}return null}function d(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Ge:return n.key===o?n.type===Ze?f(e,t,n.props.children,r,o):u(e,t,n,r):null;case Je:return n.key===o?c(e,t,n,r):null}if(Mo(n)||st(n))return null!==o?null:f(e,t,n,r,null);No(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Ge:return e=e.get(null===r.key?n:r.key)||null,r.type===Ze?f(t,e,r.props.children,o,r.key):u(t,e,r,o);case Je:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(Mo(r)||st(r))return f(t,e=e.get(n)||null,r,o,null);No(t,r)}return null}function m(o,a,l,s){for(var u=null,c=null,f=a,m=a=0,v=null;null!==f&&m<l.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=d(o,f,l[m],s);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),a=i(y,a,m),null===c?u=y:c.sibling=y,c=y,f=v}if(m===l.length)return n(o,f),u;if(null===f){for(;m<l.length;m++)(f=p(o,l[m],s))&&(a=i(f,a,m),null===c?u=f:c.sibling=f,c=f);return u}for(f=r(o,f);m<l.length;m++)(v=h(f,o,m,l[m],s))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),a=i(v,a,m),null===c?u=v:c.sibling=v,c=v);return e&&f.forEach((function(e){return t(o,e)})),u}function v(o,a,s,u){var c=st(s);"function"!=typeof c&&l("150"),null==(s=c.call(s))&&l("151");for(var f=c=null,m=a,v=a=0,y=null,g=s.next();null!==m&&!g.done;v++,g=s.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=d(o,m,g.value,u);if(null===b){m||(m=y);break}e&&m&&null===b.alternate&&t(o,m),a=i(b,a,v),null===f?c=b:f.sibling=b,f=b,m=y}if(g.done)return n(o,m),c;if(null===m){for(;!g.done;v++,g=s.next())null!==(g=p(o,g.value,u))&&(a=i(g,a,v),null===f?c=g:f.sibling=g,f=g);return c}for(m=r(o,m);!g.done;v++,g=s.next())null!==(g=h(m,o,v,g.value,u))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),a=i(g,a,v),null===f?c=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(o,e)})),c}return function(e,r,i,s){var u="object"==typeof i&&null!==i&&i.type===Ze&&null===i.key;u&&(i=i.props.children);var c="object"==typeof i&&null!==i;if(c)switch(i.$$typeof){case Ge:e:{for(c=i.key,u=r;null!==u;){if(u.key===c){if(9===u.tag?i.type===Ze:u.type===i.type){n(e,u.sibling),(r=o(u,i.type===Ze?i.props.children:i.props,s)).ref=Ao(e,u,i),r.return=e,e=r;break e}n(e,u);break}t(e,u),u=u.sibling}i.type===Ze?((r=Vr(i.props.children,e.mode,s,i.key)).return=e,e=r):((s=Br(i,e.mode,s)).ref=Ao(e,r,i),s.return=e,e=s)}return a(e);case Je:e:{for(u=i.key;null!==r;){if(r.key===u){if(6===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[],s)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Kr(i,e.mode,s)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&8===r.tag?(n(e,r.sibling),(r=o(r,i,s)).return=e,e=r):(n(e,r),(r=qr(i,e.mode,s)).return=e,e=r),a(e);if(Mo(i))return m(e,r,i,s);if(st(i))return v(e,r,i,s);if(c&&No(e,i),void 0===i&&!u)switch(e.tag){case 2:case 3:case 0:l("152",(s=e.type).displayName||s.name||"Component")}return n(e,r)}}var Lo=Do(!0),zo=Do(!1),Uo=null,Fo=null,Wo=!1;function Ho(e,t){var n=new Wr(7,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function $o(e,t){switch(e.tag){case 7:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 8:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function Bo(e){if(Wo){var t=Fo;if(t){var n=t;if(!$o(e,t)){if(!(t=wr(n))||!$o(e,t))return e.effectTag|=2,Wo=!1,void(Uo=e);Ho(Uo,n)}Uo=e,Fo=xr(t)}else e.effectTag|=2,Wo=!1,Uo=e}}function Vo(e){for(e=e.return;null!==e&&7!==e.tag&&5!==e.tag;)e=e.return;Uo=e}function qo(e){if(e!==Uo)return!1;if(!Wo)return Vo(e),Wo=!0,!1;var t=e.type;if(7!==e.tag||"head"!==t&&"body"!==t&&!br(t,e.memoizedProps))for(t=Fo;t;)Ho(e,t),t=wr(t);return Vo(e),Fo=Uo?wr(e.stateNode):null,!0}function Ko(){Fo=Uo=null,Wo=!1}var Qo,Yo,Xo=Qe.ReactCurrentOwner;function Go(e,t,n,r){t.child=null===e?zo(t,null,n,r):Lo(t,e.child,n,r)}function Jo(e,t,n,r,o){n=n.render;var i=t.ref;return Pr.current||t.memoizedProps!==r||i!==(null!==e?e.ref:null)?(Go(e,t,n=n(r,i),o),t.memoizedProps=r,t.child):ii(e,t,o)}function Zo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ei(e,t,n,r,o){var i=jr(n)?Or:Tr.current;return i=Rr(t,i),vo(t),n=n(r,i),t.effectTag|=1,Go(e,t,n,o),t.memoizedProps=r,t.child}function ti(e,t,n,r,o){if(jr(n)){var i=!0;Dr(t)}else i=!1;if(vo(t),null===e)if(null===t.stateNode){var a=jr(n)?Or:Tr.current,l=n.contextTypes,s=null!=l,u=new n(r,l=s?Rr(t,a):Cr);t.memoizedState=null!==u.state&&void 0!==u.state?u.state:null,u.updater=Oo,t.stateNode=u,u._reactInternalFiber=t,s&&((s=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,s.__reactInternalMemoizedMaskedChildContext=l),Io(t,n,r,o),r=!0}else{a=t.stateNode,l=t.memoizedProps,a.props=l;var c=a.context;s=Rr(t,s=jr(n)?Or:Tr.current);var f=n.getDerivedStateFromProps;(u="function"==typeof f||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||c!==s)&&jo(t,a,r,s),Xr=!1;var p=t.memoizedState;c=a.state=p;var d=t.updateQueue;null!==d&&(io(t,d,r,a,o),c=t.memoizedState),l!==r||p!==c||Pr.current||Xr?("function"==typeof f&&(Po(t,n,f,r),c=t.memoizedState),(l=Xr||Ro(t,n,l,r,p,c,s))?(u||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=c),a.props=r,a.state=c,a.context=s,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,l=t.memoizedProps,a.props=l,c=a.context,s=Rr(t,s=jr(n)?Or:Tr.current),(u="function"==typeof(f=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||c!==s)&&jo(t,a,r,s),Xr=!1,c=t.memoizedState,p=a.state=c,null!==(d=t.updateQueue)&&(io(t,d,r,a,o),p=t.memoizedState),l!==r||c!==p||Pr.current||Xr?("function"==typeof f&&(Po(t,n,f,r),p=t.memoizedState),(f=Xr||Ro(t,n,l,r,c,p,s))?(u||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,p,s),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,p,s)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=p),a.props=r,a.state=p,a.context=s,r=f):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),r=!1);return ni(e,t,n,r,i,o)}function ni(e,t,n,r,o,i){Zo(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return o&&Lr(t,n,!1),ii(e,t,i);r=t.stateNode,Xo.current=t;var l=a?null:r.render();return t.effectTag|=1,null!==e&&a&&(Go(e,t,null,i),t.child=null),Go(e,t,l,i),t.memoizedState=r.state,t.memoizedProps=r.props,o&&Lr(t,n,!0),t.child}function ri(e){var t=e.stateNode;t.pendingContext?Ar(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ar(0,t.context,!1),Eo(e,t.containerInfo)}function oi(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}function ii(e,t,n){null!==e&&(t.firstContextDependency=e.firstContextDependency);var r=t.childExpirationTime;if(0===r||r>n)return null;if(null!==e&&t.child!==e.child&&l("153"),null!==t.child){for(n=$r(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=$r(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function ai(e){e.effectTag|=4}function li(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ct(n)),null!==n&&ut(n.type),t=t.value,null!==e&&2===e.tag&&ut(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function si(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Mi(e,t)}else t.current=null}function ui(e){switch("function"==typeof Ur&&Ur(e),e.tag){case 2:case 3:si(e);var t=e.stateNode;if("function"==typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Mi(e,t)}break;case 7:si(e);break;case 6:pi(e)}}function ci(e){return 7===e.tag||5===e.tag||6===e.tag}function fi(e){e:{for(var t=e.return;null!==t;){if(ci(t)){var n=t;break e}t=t.return}l("160"),n=void 0}var r=t=void 0;switch(n.tag){case 7:t=n.stateNode,r=!1;break;case 5:case 6:t=n.stateNode.containerInfo,r=!0;break;default:l("161")}16&n.effectTag&&(lr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ci(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;7!==n.tag&&8!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||6===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(7===o.tag||8===o.tag)if(n)if(r){var i=t,a=o.stateNode,s=n;8===i.nodeType?i.parentNode.insertBefore(a,s):i.insertBefore(a,s)}else t.insertBefore(o.stateNode,n);else r?(i=t,a=o.stateNode,8===i.nodeType?(s=i.parentNode).insertBefore(a,i):(s=i).appendChild(a),null===s.onclick&&(s.onclick=mr)):t.appendChild(o.stateNode);else if(6!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function pi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&l("160"),n.tag){case 7:r=n.stateNode,o=!1;break e;case 5:case 6:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(7===t.tag||8===t.tag){e:for(var i=t,a=i;;)if(ui(a),null!==a.child&&6!==a.tag)a.child.return=a,a=a.child;else{if(a===i)break;for(;null===a.sibling;){if(null===a.return||a.return===i)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}o?(i=r,a=t.stateNode,8===i.nodeType?i.parentNode.removeChild(a):i.removeChild(a)):r.removeChild(t.stateNode)}else if(6===t.tag?(r=t.stateNode.containerInfo,o=!0):ui(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;6===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function di(e,t){switch(t.tag){case 2:case 3:break;case 7:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,o=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[z]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Et(n,r),dr(e,o),t=dr(e,r),o=0;o<i.length;o+=2){var a=i[o],s=i[o+1];"style"===a?cr(n,s):"dangerouslySetInnerHTML"===a?ar(n,s):"children"===a?lr(n,s):bt(n,a,s,t)}switch(e){case"input":St(n,r);break;case"textarea":Zn(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(i=r.value)?Xn(n,!!r.multiple,i,!1):e!==!!r.multiple&&(null!=r.defaultValue?Xn(n,!!r.multiple,r.defaultValue,!0):Xn(n,!!r.multiple,r.multiple?[]:"",!1))}}}break;case 8:null===t.stateNode&&l("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 5:case 15:case 16:break;default:l("163")}}function hi(e,t,n){(n=Zr(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){ha(r),li(e,t)},n}function mi(e,t,n){(n=Zr(n)).tag=3;var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){null===Pi?Pi=new Set([this]):Pi.add(this);var n=t.value,r=t.stack;li(e,t),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function vi(e){switch(e.tag){case 2:jr(e.type)&&Ir();var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return jr(e.type._reactResult)&&Ir(),1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 5:return So(),Mr(),0!=(64&(t=e.effectTag))&&l("285"),e.effectTag=-1025&t|64,e;case 7:return Co(e),null;case 16:return 1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 6:return So(),null;case 12:return mo(e),null;default:return null}}Qo=function(e,t,n,r,i){var a=e.memoizedProps;if(a!==r){var l=t.stateNode;switch(ko(bo.current),e=null,n){case"input":a=xt(l,a),r=xt(l,r),e=[];break;case"option":a=Yn(l,a),r=Yn(l,r),e=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":a=Gn(l,a),r=Gn(l,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(l.onclick=mr)}pr(n,r),l=n=void 0;var s=null;for(n in a)if(!r.hasOwnProperty(n)&&a.hasOwnProperty(n)&&null!=a[n])if("style"===n){var u=a[n];for(l in u)u.hasOwnProperty(l)&&(s||(s={}),s[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(x.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(u=null!=a?a[n]:void 0,r.hasOwnProperty(n)&&c!==u&&(null!=c||null!=u))if("style"===n)if(u){for(l in u)!u.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(s||(s={}),s[l]="");for(l in c)c.hasOwnProperty(l)&&u[l]!==c[l]&&(s||(s={}),s[l]=c[l])}else s||(e||(e=[]),e.push(n,s)),s=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,u=u?u.__html:void 0,null!=c&&u!==c&&(e=e||[]).push(n,""+c)):"children"===n?u===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(x.hasOwnProperty(n)?(null!=c&&hr(i,n),e||u===c||(e=[])):(e=e||[]).push(n,c))}s&&(e=e||[]).push("style",s),i=e,(t.updateQueue=i)&&ai(t)}},Yo=function(e,t,n,r){n!==r&&ai(t)};var yi={readContext:yo},gi=Qe.ReactCurrentOwner,bi=0,wi=0,xi=!1,ki=null,Ei=null,Si=0,_i=!1,Ci=null,Ti=!1,Pi=null;function Oi(){if(null!==ki)for(var e=ki.return;null!==e;){var t=e;switch(t.tag){case 2:var n=t.type.childContextTypes;null!=n&&Ir();break;case 3:null!=(n=t.type._reactResult.childContextTypes)&&Ir();break;case 5:So(),Mr();break;case 7:Co(t);break;case 6:So();break;case 12:mo(t)}e=e.return}Ei=null,Si=0,_i=!1,ki=null}function Ri(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){var i=t,a=(t=e).pendingProps;switch(t.tag){case 0:case 1:break;case 2:jr(t.type)&&Ir();break;case 3:jr(t.type._reactResult)&&Ir();break;case 5:So(),Mr(),(a=t.stateNode).pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==i&&null!==i.child||(qo(t),t.effectTag&=-3);break;case 7:Co(t);var s=ko(xo.current),u=t.type;if(null!==i&&null!=t.stateNode)Qo(i,t,u,a,s),i.ref!==t.ref&&(t.effectTag|=128);else if(a){var c=ko(bo.current);if(qo(t)){i=(a=t).stateNode;var f=a.type,p=a.memoizedProps,d=s;switch(i[L]=a,i[z]=p,u=void 0,s=f){case"iframe":case"object":Tn("load",i);break;case"video":case"audio":for(f=0;f<ie.length;f++)Tn(ie[f],i);break;case"source":Tn("error",i);break;case"img":case"image":case"link":Tn("error",i),Tn("load",i);break;case"form":Tn("reset",i),Tn("submit",i);break;case"details":Tn("toggle",i);break;case"input":kt(i,p),Tn("invalid",i),hr(d,"onChange");break;case"select":i._wrapperState={wasMultiple:!!p.multiple},Tn("invalid",i),hr(d,"onChange");break;case"textarea":Jn(i,p),Tn("invalid",i),hr(d,"onChange")}for(u in pr(s,p),f=null,p)p.hasOwnProperty(u)&&(c=p[u],"children"===u?"string"==typeof c?i.textContent!==c&&(f=["children",c]):"number"==typeof c&&i.textContent!==""+c&&(f=["children",""+c]):x.hasOwnProperty(u)&&null!=c&&hr(d,u));switch(s){case"input":qe(i),_t(i,p,!0);break;case"textarea":qe(i),er(i);break;case"select":case"option":break;default:"function"==typeof p.onClick&&(i.onclick=mr)}u=f,a.updateQueue=u,(a=null!==u)&&ai(t)}else{p=t,i=u,d=a,f=9===s.nodeType?s:s.ownerDocument,c===tr&&(c=nr(i)),c===tr?"script"===i?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof d.is?f=f.createElement(i,{is:d.is}):(f=f.createElement(i),"select"===i&&d.multiple&&(f.multiple=!0)):f=f.createElementNS(c,i),(i=f)[L]=p,i[z]=a;e:for(p=i,d=t,f=d.child;null!==f;){if(7===f.tag||8===f.tag)p.appendChild(f.stateNode);else if(6!==f.tag&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===d)break;for(;null===f.sibling;){if(null===f.return||f.return===d)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}d=i;var h=s,m=dr(f=u,p=a);switch(f){case"iframe":case"object":Tn("load",d),s=p;break;case"video":case"audio":for(s=0;s<ie.length;s++)Tn(ie[s],d);s=p;break;case"source":Tn("error",d),s=p;break;case"img":case"image":case"link":Tn("error",d),Tn("load",d),s=p;break;case"form":Tn("reset",d),Tn("submit",d),s=p;break;case"details":Tn("toggle",d),s=p;break;case"input":kt(d,p),s=xt(d,p),Tn("invalid",d),hr(h,"onChange");break;case"option":s=Yn(d,p);break;case"select":d._wrapperState={wasMultiple:!!p.multiple},s=o({},p,{value:void 0}),Tn("invalid",d),hr(h,"onChange");break;case"textarea":Jn(d,p),s=Gn(d,p),Tn("invalid",d),hr(h,"onChange");break;default:s=p}pr(f,s),c=void 0;var v=f,y=d,g=s;for(c in g)if(g.hasOwnProperty(c)){var b=g[c];"style"===c?cr(y,b):"dangerouslySetInnerHTML"===c?null!=(b=b?b.__html:void 0)&&ar(y,b):"children"===c?"string"==typeof b?("textarea"!==v||""!==b)&&lr(y,b):"number"==typeof b&&lr(y,""+b):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(x.hasOwnProperty(c)?null!=b&&hr(h,c):null!=b&&bt(y,c,b,m))}switch(f){case"input":qe(d),_t(d,p,!1);break;case"textarea":qe(d),er(d);break;case"option":null!=p.value&&d.setAttribute("value",""+wt(p.value));break;case"select":(s=d).multiple=!!p.multiple,null!=(d=p.value)?Xn(s,!!p.multiple,d,!1):null!=p.defaultValue&&Xn(s,!!p.multiple,p.defaultValue,!0);break;default:"function"==typeof s.onClick&&(d.onclick=mr)}(a=gr(u,a))&&ai(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&l("166");break;case 8:i&&null!=t.stateNode?Yo(0,t,i.memoizedProps,a):("string"!=typeof a&&null===t.stateNode&&l("166"),i=ko(xo.current),ko(bo.current),qo(t)?(u=(a=t).stateNode,i=a.memoizedProps,u[L]=a,(a=u.nodeValue!==i)&&ai(t)):(u=t,(a=(9===i.nodeType?i:i.ownerDocument).createTextNode(a))[L]=u,t.stateNode=a));break;case 13:case 14:case 16:case 9:case 10:case 15:break;case 6:So();break;case 12:mo(t);break;case 11:break;case 4:l("167");default:l("156")}if(t=ki=null,a=e,1073741823===Si||1073741823!==a.childExpirationTime){for(u=0,i=a.child;null!==i;)s=i.expirationTime,p=i.childExpirationTime,(0===u||0!==s&&s<u)&&(u=s),(0===u||0!==p&&p<u)&&(u=p),i=i.sibling;a.childExpirationTime=u}if(null!==t)return t;null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=vi(e)))return e.effectTag&=511,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512)}if(null!==r)return r;if(null===n)break;e=n}return null}function ji(e){var t=function(e,t,n){var r=t.expirationTime;if(!Pr.current&&(0===r||r>n)){switch(t.tag){case 5:ri(t),Ko();break;case 7:_o(t);break;case 2:jr(t.type)&&Dr(t);break;case 3:jr(t.type._reactResult)&&Dr(t);break;case 6:Eo(t,t.stateNode.containerInfo);break;case 12:ho(t,t.memoizedProps.value)}return ii(e,t,n)}switch(t.expirationTime=0,t.tag){case 4:return function(e,t,n,r){null!==e&&l("155");var o=t.pendingProps;if("object"==typeof n&&null!==n&&"function"==typeof n.then){var i=n=function(e){switch(e._reactStatus){case 1:return e._reactResult;case 2:throw e._reactResult;case 0:throw e;default:throw e._reactStatus=0,e.then((function(t){if(0===e._reactStatus){if(e._reactStatus=1,"object"==typeof t&&null!==t){var n=t.default;t=null!=n?n:t}e._reactResult=t}}),(function(t){0===e._reactStatus&&(e._reactStatus=2,e._reactResult=t)})),e}}(n);i="function"==typeof i?Hr(i)?3:1:null!=i&&i.$$typeof?14:4,i=t.tag=i;var a=oi(n,o);switch(i){case 1:return ei(e,t,n,a,r);case 3:return ti(e,t,n,a,r);case 14:return Jo(e,t,n,a,r);default:l("283",n)}}if(i=Rr(t,Tr.current),vo(t),i=n(o,i),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){t.tag=2,jr(n)?(a=!0,Dr(t)):a=!1,t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null;var s=n.getDerivedStateFromProps;return"function"==typeof s&&Po(t,n,s,o),i.updater=Oo,t.stateNode=i,i._reactInternalFiber=t,Io(t,n,o,r),ni(e,t,n,!0,a,r)}return t.tag=0,Go(e,t,i,r),t.memoizedProps=o,t.child}(e,t,t.type,n);case 0:return ei(e,t,t.type,t.pendingProps,n);case 1:var o=t.type._reactResult;return e=ei(e,t,o,oi(o,r=t.pendingProps),n),t.memoizedProps=r,e;case 2:return ti(e,t,t.type,t.pendingProps,n);case 3:return e=ti(e,t,o=t.type._reactResult,oi(o,r=t.pendingProps),n),t.memoizedProps=r,e;case 5:return ri(t),null===(r=t.updateQueue)&&l("282"),o=null!==(o=t.memoizedState)?o.element:null,io(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(Ko(),t=ii(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(Fo=xr(t.stateNode.containerInfo),Uo=t,o=Wo=!0),o?(t.effectTag|=2,t.child=zo(t,null,r,n)):(Go(e,t,r,n),Ko()),t=t.child),t;case 7:_o(t),null===e&&Bo(t),r=t.type,o=t.pendingProps;var i=null!==e?e.memoizedProps:null,a=o.children;return br(r,o)?a=null:null!==i&&br(r,i)&&(t.effectTag|=16),Zo(e,t),1073741823!==n&&1&t.mode&&o.hidden?(t.expirationTime=1073741823,t.memoizedProps=o,t=null):(Go(e,t,a,n),t.memoizedProps=o,t=t.child),t;case 8:return null===e&&Bo(t),t.memoizedProps=t.pendingProps,null;case 16:return null;case 6:return Eo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Lo(t,null,r,n):Go(e,t,r,n),t.memoizedProps=r,t.child;case 13:return Jo(e,t,t.type,t.pendingProps,n);case 14:return e=Jo(e,t,o=t.type._reactResult,oi(o,r=t.pendingProps),n),t.memoizedProps=r,e;case 9:return Go(e,t,r=t.pendingProps,n),t.memoizedProps=r,t.child;case 10:return Go(e,t,r=t.pendingProps.children,n),t.memoizedProps=r,t.child;case 15:return Go(e,t,(r=t.pendingProps).children,n),t.memoizedProps=r,t.child;case 12:e:{if(r=t.type._context,o=t.pendingProps,a=t.memoizedProps,i=o.value,t.memoizedProps=o,ho(t,i),null!==a){var s=a.value;if(0==(i=s===i&&(0!==s||1/s==1/i)||s!=s&&i!=i?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(s,i):1073741823))){if(a.children===o.children&&!Pr.current){t=ii(e,t,n);break e}}else for(null!==(a=t.child)&&(a.return=t);null!==a;){if(null!==(s=a.firstContextDependency))do{if(s.context===r&&0!=(s.observedBits&i)){if(2===a.tag||3===a.tag){var u=Zr(n);u.tag=2,to(a,u)}(0===a.expirationTime||a.expirationTime>n)&&(a.expirationTime=n),null!==(u=a.alternate)&&(0===u.expirationTime||u.expirationTime>n)&&(u.expirationTime=n);for(var c=a.return;null!==c;){if(u=c.alternate,0===c.childExpirationTime||c.childExpirationTime>n)c.childExpirationTime=n,null!==u&&(0===u.childExpirationTime||u.childExpirationTime>n)&&(u.childExpirationTime=n);else{if(null===u||!(0===u.childExpirationTime||u.childExpirationTime>n))break;u.childExpirationTime=n}c=c.return}}u=a.child,s=s.next}while(null!==s);else u=12===a.tag&&a.type===t.type?null:a.child;if(null!==u)u.return=a;else for(u=a;null!==u;){if(u===t){u=null;break}if(null!==(a=u.sibling)){a.return=u.return,u=a;break}u=u.return}a=u}}Go(e,t,o.children,n),t=t.child}return t;case 11:return i=t.type,o=(r=t.pendingProps).children,vo(t),o=o(i=yo(i,r.unstable_observedBits)),t.effectTag|=1,Go(e,t,o,n),t.memoizedProps=r,t.child;default:l("156")}}(e.alternate,e,Si);return null===t&&(t=Ri(e)),gi.current=null,t}function Ii(e,t,n){xi&&l("243"),xi=!0,gi.currentDispatcher=yi;var r=e.nextExpirationTimeToWorkOn;r===Si&&e===Ei&&null!==ki||(Oi(),Si=r,ki=$r((Ei=e).current,null,Si),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==ki&&!da();)ki=ji(ki);else for(;null!==ki;)ki=ji(ki)}catch(e){if(null===ki)o=!0,ha(e);else{null===ki&&l("271");var i=ki,a=i.return;if(null!==a){e:{var s=a,u=i,c=e;a=Si,u.effectTag|=512,u.firstEffect=u.lastEffect=null,_i=!0,c=so(c,u);do{switch(s.tag){case 5:s.effectTag|=1024,s.expirationTime=a,no(s,a=hi(s,c,a));break e;case 2:case 3:u=c;var f=s.stateNode;if(0==(64&s.effectTag)&&null!==f&&"function"==typeof f.componentDidCatch&&(null===Pi||!Pi.has(f))){s.effectTag|=1024,s.expirationTime=a,no(s,a=mi(s,u,a));break e}}s=s.return}while(null!==s)}ki=Ri(i);continue}o=!0,ha(e)}}break}if(xi=!1,po=fo=co=gi.currentDispatcher=null,o)Ei=null,e.finishedWork=null;else if(null!==ki)e.finishedWork=null;else{if(null===(t=e.current.alternate)&&l("281"),Ei=null,_i){if(o=e.latestPendingTime,i=e.latestSuspendedTime,a=e.latestPingedTime,0!==o&&o>r||0!==i&&i>r||0!==a&&a>r)return e.didError=!1,0!==(n=e.latestPingedTime)&&n<=r&&(e.latestPingedTime=0),n=e.earliestPendingTime,t=e.latestPendingTime,n===r?e.earliestPendingTime=t===r?e.latestPendingTime=0:t:t===r&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,t=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=r:n>r?e.earliestSuspendedTime=r:t<r&&(e.latestSuspendedTime=r),Yr(r,e),void(e.expirationTime=e.expirationTime);if(!e.didError&&!n)return e.didError=!0,e.nextExpirationTimeToWorkOn=r,r=e.expirationTime=1,void(e.expirationTime=r)}e.pendingCommitExpirationTime=r,e.finishedWork=t}}function Mi(e,t){var n;e:{for(xi&&!Ti&&l("263"),n=e.return;null!==n;){switch(n.tag){case 2:case 3:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromCatch||"function"==typeof r.componentDidCatch&&(null===Pi||!Pi.has(r))){to(n,e=mi(n,e=so(t,e),1)),Ni(n,1),n=void 0;break e}break;case 5:to(n,e=hi(n,e=so(t,e),1)),Ni(n,1),n=void 0;break e}n=n.return}5===e.tag&&(to(e,n=hi(e,n=so(t,e),1)),Ni(e,1)),n=void 0}return n}function Ai(e,t){return 0!==wi?e=wi:xi?e=Ti?1:Si:1&t.mode?(e=Gi?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)),null!==Ei&&e===Si&&(e+=1)):e=1,Gi&&(0===Bi||e>Bi)&&(Bi=e),e}function Ni(e,t){e:{(0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t);var n=e.alternate;null!==n&&(0===n.expirationTime||n.expirationTime>t)&&(n.expirationTime=t);var r=e.return;if(null===r&&5===e.tag)e=e.stateNode;else{for(;null!==r;){if(n=r.alternate,(0===r.childExpirationTime||r.childExpirationTime>t)&&(r.childExpirationTime=t),null!==n&&(0===n.childExpirationTime||n.childExpirationTime>t)&&(n.childExpirationTime=t),null===r.return&&5===r.tag){e=r.stateNode;break e}r=r.return}e=null}}null!==e&&(!xi&&0!==Si&&t<Si&&Oi(),Qr(e,t),xi&&!Ti&&Ei===e||(t=e,e=e.expirationTime,null===t.nextScheduledRoot?(t.expirationTime=e,null===zi?(Li=zi=t,t.nextScheduledRoot=t):(zi=zi.nextScheduledRoot=t).nextScheduledRoot=Li):(0===(n=t.expirationTime)||e<n)&&(t.expirationTime=e),Wi||(Yi?Xi&&(Hi=t,$i=1,fa(t,1,!0)):1===e?ca(1,null):aa(t,e))),ra>na&&(ra=0,l("185")))}function Di(e,t,n,r,o){var i=wi;wi=1;try{return e(t,n,r,o)}finally{wi=i}}var Li=null,zi=null,Ui=0,Fi=void 0,Wi=!1,Hi=null,$i=0,Bi=0,Vi=!1,qi=!1,Ki=null,Qi=null,Yi=!1,Xi=!1,Gi=!1,Ji=null,Zi=i.unstable_now(),ea=2+(Zi/10|0),ta=ea,na=50,ra=0,oa=null;function ia(){ea=2+((i.unstable_now()-Zi)/10|0)}function aa(e,t){if(0!==Ui){if(t>Ui)return;null!==Fi&&i.unstable_cancelScheduledWork(Fi)}Ui=t,e=i.unstable_now()-Zi,Fi=i.unstable_scheduleWork(ua,{timeout:10*(t-2)-e})}function la(){return Wi||(sa(),0!==$i&&1073741823!==$i||(ia(),ta=ea)),ta}function sa(){var e=0,t=null;if(null!==zi)for(var n=zi,r=Li;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===zi)&&l("244"),r===r.nextScheduledRoot){Li=zi=r.nextScheduledRoot=null;break}if(r===Li)Li=o=r.nextScheduledRoot,zi.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===zi){(zi=n).nextScheduledRoot=Li,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===zi)break;if(1===e)break;n=r,r=r.nextScheduledRoot}}Hi=t,$i=e}function ua(e){if(e.didTimeout&&null!==Li){ia();var t=Li;do{var n=t.expirationTime;0!==n&&ea>=n&&(t.nextExpirationTimeToWorkOn=ea),t=t.nextScheduledRoot}while(t!==Li)}ca(0,e)}function ca(e,t){if(Qi=t,sa(),null!==Qi)for(ia(),ta=ea;null!==Hi&&0!==$i&&(0===e||e>=$i)&&(!Vi||ea>=$i);)fa(Hi,$i,ea>=$i),sa(),ia(),ta=ea;else for(;null!==Hi&&0!==$i&&(0===e||e>=$i);)fa(Hi,$i,!0),sa();if(null!==Qi&&(Ui=0,Fi=null),0!==$i&&aa(Hi,$i),Qi=null,Vi=!1,ra=0,oa=null,null!==Ji)for(e=Ji,Ji=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){qi||(qi=!0,Ki=e)}}if(qi)throw e=Ki,Ki=null,qi=!1,e}function fa(e,t,n){if(Wi&&l("245"),Wi=!0,null===Qi||n){var r=e.finishedWork;null!==r?pa(e,r,t):(e.finishedWork=null,Ii(e,!1,n),null!==(r=e.finishedWork)&&pa(e,r,t))}else null!==(r=e.finishedWork)?pa(e,r,t):(e.finishedWork=null,Ii(e,!0,n),null!==(r=e.finishedWork)&&(da()?e.finishedWork=r:pa(e,r,t)));Wi=!1}function pa(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===Ji?Ji=[r]:Ji.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===oa?ra++:(oa=e,ra=0),Ti=xi=!0,e.current===t&&l("177"),0===(n=e.pendingCommitExpirationTime)&&l("261"),e.pendingCommitExpirationTime=0,r=t.expirationTime;var o=t.childExpirationTime;if(r=0===r||0!==o&&o<r?o:r,e.didError=!1,0===r?(e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0):(0!==(o=e.latestPendingTime)&&(o<r?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime<r&&(e.earliestPendingTime=e.latestPendingTime)),0===(o=e.earliestSuspendedTime)?Qr(e,r):r>e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Qr(e,r)):r<o&&Qr(e,r)),Yr(0,e),gi.current=null,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,vr=Cn,Fn(o=Un())){if("selectionStart"in o)var i={start:o.selectionStart,end:o.selectionEnd};else e:{var a=(i=(i=o.ownerDocument)&&i.defaultView||window).getSelection&&i.getSelection();if(a&&0!==a.rangeCount){i=a.anchorNode;var s=a.anchorOffset,u=a.focusNode;a=a.focusOffset;try{i.nodeType,u.nodeType}catch(e){i=null;break e}var c=0,f=-1,p=-1,d=0,h=0,m=o,v=null;t:for(;;){for(var y;m!==i||0!==s&&3!==m.nodeType||(f=c+s),m!==u||0!==a&&3!==m.nodeType||(p=c+a),3===m.nodeType&&(c+=m.nodeValue.length),null!==(y=m.firstChild);)v=m,m=y;for(;;){if(m===o)break t;if(v===i&&++d===s&&(f=c),v===u&&++h===a&&(p=c),null!==(y=m.nextSibling))break;v=(m=v).parentNode}m=y}i=-1===f||-1===p?null:{start:f,end:p}}else i=null}i=i||{start:0,end:0}}else i=null;for(yr={focusedElem:o,selectionRange:i},Cn=!1,Ci=r;null!==Ci;){o=!1,i=void 0;try{for(;null!==Ci;){if(256&Ci.effectTag){var g=Ci.alternate;e:switch(s=Ci,s.tag){case 2:case 3:if(256&s.effectTag&&null!==g){var b=g.memoizedProps,w=g.memoizedState,x=s.stateNode;x.props=s.memoizedProps,x.state=s.memoizedState;var k=x.getSnapshotBeforeUpdate(b,w);x.__reactInternalSnapshotBeforeUpdate=k}break e;case 5:case 7:case 8:case 6:break e;default:l("163")}}Ci=Ci.nextEffect}}catch(e){o=!0,i=e}o&&(null===Ci&&l("178"),Mi(Ci,i),null!==Ci&&(Ci=Ci.nextEffect))}for(Ci=r;null!==Ci;){g=!1,b=void 0;try{for(;null!==Ci;){var E=Ci.effectTag;if(16&E&&lr(Ci.stateNode,""),128&E){var S=Ci.alternate;if(null!==S){var _=S.ref;null!==_&&("function"==typeof _?_(null):_.current=null)}}switch(14&E){case 2:fi(Ci),Ci.effectTag&=-3;break;case 6:fi(Ci),Ci.effectTag&=-3,di(Ci.alternate,Ci);break;case 4:di(Ci.alternate,Ci);break;case 8:pi(w=Ci),w.return=null,w.child=null,w.alternate&&(w.alternate.child=null,w.alternate.return=null)}Ci=Ci.nextEffect}}catch(e){g=!0,b=e}g&&(null===Ci&&l("178"),Mi(Ci,b),null!==Ci&&(Ci=Ci.nextEffect))}if(_=yr,S=Un(),E=_.focusedElem,b=_.selectionRange,S!==E&&E&&E.ownerDocument&&zn(E.ownerDocument.documentElement,E)){null!==b&&Fn(E)&&(S=b.start,void 0===(_=b.end)&&(_=S),"selectionStart"in E?(E.selectionStart=S,E.selectionEnd=Math.min(_,E.value.length)):(S=((g=E.ownerDocument||document)&&g.defaultView||window).getSelection(),w=E.textContent.length,_=Math.min(b.start,w),b=void 0===b.end?_:Math.min(b.end,w),!S.extend&&_>b&&(w=b,b=_,_=w),w=Ln(E,_),x=Ln(E,b),w&&x&&(1!==S.rangeCount||S.anchorNode!==w.node||S.anchorOffset!==w.offset||S.focusNode!==x.node||S.focusOffset!==x.offset)&&((g=g.createRange()).setStart(w.node,w.offset),S.removeAllRanges(),_>b?(S.addRange(g),S.extend(x.node,x.offset)):(g.setEnd(x.node,x.offset),S.addRange(g))))),S=[];for(_=E;_=_.parentNode;)1===_.nodeType&&S.push({element:_,left:_.scrollLeft,top:_.scrollTop});for("function"==typeof E.focus&&E.focus(),E=0;E<S.length;E++)(_=S[E]).element.scrollLeft=_.left,_.element.scrollTop=_.top}for(yr=null,Cn=!!vr,vr=null,e.current=t,Ci=r;null!==Ci;){r=!1,E=void 0;try{for(S=n;null!==Ci;){var C=Ci.effectTag;if(36&C){var T=Ci.alternate;switch(g=S,(_=Ci).tag){case 2:case 3:var P=_.stateNode;if(4&_.effectTag)if(null===T)P.props=_.memoizedProps,P.state=_.memoizedState,P.componentDidMount();else{var O=T.memoizedProps,R=T.memoizedState;P.props=_.memoizedProps,P.state=_.memoizedState,P.componentDidUpdate(O,R,P.__reactInternalSnapshotBeforeUpdate)}var j=_.updateQueue;null!==j&&(P.props=_.memoizedProps,P.state=_.memoizedState,ao(0,j,P));break;case 5:var I=_.updateQueue;if(null!==I){if(b=null,null!==_.child)switch(_.child.tag){case 7:b=_.child.stateNode;break;case 2:case 3:b=_.child.stateNode}ao(0,I,b)}break;case 7:var M=_.stateNode;null===T&&4&_.effectTag&&gr(_.type,_.memoizedProps)&&M.focus();break;case 8:case 6:case 15:case 16:break;default:l("163")}}if(128&C){var A=Ci.ref;if(null!==A){var N=Ci.stateNode;switch(Ci.tag){case 7:var D=N;break;default:D=N}"function"==typeof A?A(D):A.current=D}}var L=Ci.nextEffect;Ci.nextEffect=null,Ci=L}}catch(e){r=!0,E=e}r&&(null===Ci&&l("178"),Mi(Ci,E),null!==Ci&&(Ci=Ci.nextEffect))}xi=Ti=!1,"function"==typeof zr&&zr(t.stateNode),C=t.expirationTime,t=t.childExpirationTime,0===(t=0===C||0!==t&&t<C?t:C)&&(Pi=null),e.expirationTime=t,e.finishedWork=null}function da(){return!!Vi||!(null===Qi||Qi.timeRemaining()>1)&&(Vi=!0)}function ha(e){null===Hi&&l("246"),Hi.expirationTime=0,qi||(qi=!0,Ki=e)}function ma(e,t){var n=Yi;Yi=!0;try{return e(t)}finally{(Yi=n)||Wi||ca(1,null)}}function va(e,t){if(Yi&&!Xi){Xi=!0;try{return e(t)}finally{Xi=!1}}return e(t)}function ya(e,t,n){if(Gi)return e(t,n);Yi||Wi||0===Bi||(ca(Bi,null),Bi=0);var r=Gi,o=Yi;Yi=Gi=!0;try{return e(t,n)}finally{Gi=r,(Yi=o)||Wi||ca(1,null)}}function ga(e,t,n,r,o){var i=t.current;return n=function(e){if(!e)return Cr;e:{(2!==rn(e=e._reactInternalFiber)||2!==e.tag&&3!==e.tag)&&l("170");var t=e;do{switch(t.tag){case 5:t=t.stateNode.context;break e;case 2:if(jr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}break;case 3:if(jr(t.type._reactResult)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);l("171"),t=void 0}if(2===e.tag){var n=e.type;if(jr(n))return Nr(e,n,t)}else if(3===e.tag&&jr(n=e.type._reactResult))return Nr(e,n,t);return t}(n),null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Zr(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),to(i,o),Ni(i,r),r}function ba(e,t,n,r){var o=t.current;return ga(e,t,n,o=Ai(la(),o),r)}function wa(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 7:default:return e.child.stateNode}}function xa(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Je,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function ka(e){var t=2+25*(1+((la()-2+500)/25|0));t<=bi&&(t=bi+1),this._expirationTime=bi=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Ea(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Sa(e,t,n){e={current:t=new Wr(5,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function _a(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ca(e,t,n,r,o){_a(n)||l("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=wa(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Sa(e,!1,t)}(n,r),"function"==typeof o){var s=o;o=function(){var e=wa(i._internalRoot);s.call(e)}}va((function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}))}return wa(i._internalRoot)}function Ta(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return _a(t)||l("200"),xa(e,t,null,n)}Re=function(e,t,n){switch(t){case"input":if(St(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=H(r);o||l("90"),Ke(r),St(r,o)}}}break;case"textarea":Zn(e,n);break;case"select":null!=(t=n.value)&&Xn(e,!!n.multiple,t,!1)}},ka.prototype.render=function(e){this._defer||l("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Ea;return ga(e,t,null,n,r._onCommit),r},ka.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},ka.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||l("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&l("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,t=n,Wi&&l("253"),Hi=e,$i=t,fa(e,t,!0),ca(1,null),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},ka.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Ea.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ea.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&l("191",n),n()}}},Sa.prototype.render=function(e,t){var n=this._internalRoot,r=new Ea;return null!==(t=void 0===t?null:t)&&r.then(t),ba(e,n,null,r._onCommit),r},Sa.prototype.unmount=function(e){var t=this._internalRoot,n=new Ea;return null!==(e=void 0===e?null:e)&&n.then(e),ba(null,t,null,n._onCommit),n},Sa.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Ea;return null!==(n=void 0===n?null:n)&&o.then(n),ba(t,r,e,o._onCommit),o},Sa.prototype.createBatch=function(){var e=new ka(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},De=ma,Le=ya,ze=function(){Wi||0===Bi||(ca(Bi,null),Bi=0)};var Pa={createPortal:Ta,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?l("188"):l("268",Object.keys(e))),null===(e=an(t))?null:e.stateNode},hydrate:function(e,t,n){return Ca(null,e,t,!0,n)},render:function(e,t,n){return Ca(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&l("38"),Ca(e,t,n,!1,r)},unmountComponentAtNode:function(e){return _a(e)||l("40"),!!e._reactRootContainer&&(va((function(){Ca(null,null,e,!1,(function(){e._reactRootContainer=null}))})),!0)},unstable_createPortal:function(){return Ta.apply(void 0,arguments)},unstable_batchedUpdates:ma,unstable_interactiveUpdates:ya,flushSync:function(e,t){Wi&&l("187");var n=Yi;Yi=!0;try{return Di(e,t)}finally{Yi=n,ca(1,null)}},unstable_flushControlled:function(e){var t=Yi;Yi=!0;try{Di(e)}finally{(Yi=t)||Wi||ca(1,null)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[F,W,H,M.injectEventPluginsByName,w,Q,function(e){P(e,K)},Ae,Ne,Rn,N]},unstable_createRoot:function(e,t){return _a(e)||l("278"),new Sa(e,!0,null!=t&&!0===t.hydrate)}};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);zr=Fr((function(e){return t.onCommitFiberRoot(n,e)})),Ur=Fr((function(e){return t.onCommitFiberUnmount(n,e)}))}catch(e){}}(o({},e,{findHostInstanceByFiber:function(e){return null===(e=an(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:U,bundleType:0,version:"16.5.2",rendererPackageName:"react-dom"});var Oa={default:Pa},Ra=Oa&&Pa||Oa;e.exports=Ra.default||Ra},3935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},6995:function(e,t,n){var r,o,i;o=[t,n(8532)],void 0===(i="function"==typeof(r=function(e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n,r=(n=t)&&n.__esModule?n:{default:n};e.default=r.default})?r.apply(t,o):r)||(e.exports=i)},8532:function(e,t,n){var r,o,i;o=[t,n(7294),n(5697)],void 0===(i="function"==typeof(r=function(e,t,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.setHasSupportToCaptureOption=f;var r=i(t),o=i(n);function i(e){return e&&e.__esModule?e:{default:e}}var a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();function u(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var c=!1;function f(e){c=e}try{addEventListener("test",null,Object.defineProperty({},"capture",{get:function(){f(!0)}}))}catch(e){}function p(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{capture:!0};return c?e:e.capture}function d(e){if("touches"in e){var t=e.touches[0];return{x:t.pageX,y:t.pageY}}return{x:e.screenX,y:e.screenY}}var h=function(e){function t(){var e;l(this,t);for(var n=arguments.length,r=Array(n),o=0;o<n;o++)r[o]=arguments[o];var i=u(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(r)));return i._handleSwipeStart=i._handleSwipeStart.bind(i),i._handleSwipeMove=i._handleSwipeMove.bind(i),i._handleSwipeEnd=i._handleSwipeEnd.bind(i),i._onMouseDown=i._onMouseDown.bind(i),i._onMouseMove=i._onMouseMove.bind(i),i._onMouseUp=i._onMouseUp.bind(i),i._setSwiperRef=i._setSwiperRef.bind(i),i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),s(t,[{key:"componentDidMount",value:function(){this.swiper&&this.swiper.addEventListener("touchmove",this._handleSwipeMove,p({capture:!0,passive:!1}))}},{key:"componentWillUnmount",value:function(){this.swiper&&this.swiper.removeEventListener("touchmove",this._handleSwipeMove,p({capture:!0,passive:!1}))}},{key:"_onMouseDown",value:function(e){this.props.allowMouseEvents&&(this.mouseDown=!0,document.addEventListener("mouseup",this._onMouseUp),document.addEventListener("mousemove",this._onMouseMove),this._handleSwipeStart(e))}},{key:"_onMouseMove",value:function(e){this.mouseDown&&this._handleSwipeMove(e)}},{key:"_onMouseUp",value:function(e){this.mouseDown=!1,document.removeEventListener("mouseup",this._onMouseUp),document.removeEventListener("mousemove",this._onMouseMove),this._handleSwipeEnd(e)}},{key:"_handleSwipeStart",value:function(e){var t=d(e),n=t.x,r=t.y;this.moveStart={x:n,y:r},this.props.onSwipeStart(e)}},{key:"_handleSwipeMove",value:function(e){if(this.moveStart){var t=d(e),n=t.x,r=t.y,o=n-this.moveStart.x,i=r-this.moveStart.y;this.moving=!0,this.props.onSwipeMove({x:o,y:i},e)&&e.cancelable&&e.preventDefault(),this.movePosition={deltaX:o,deltaY:i}}}},{key:"_handleSwipeEnd",value:function(e){this.props.onSwipeEnd(e);var t=this.props.tolerance;this.moving&&this.movePosition&&(this.movePosition.deltaX<-t?this.props.onSwipeLeft(1,e):this.movePosition.deltaX>t&&this.props.onSwipeRight(1,e),this.movePosition.deltaY<-t?this.props.onSwipeUp(1,e):this.movePosition.deltaY>t&&this.props.onSwipeDown(1,e)),this.moveStart=null,this.moving=!1,this.movePosition=null}},{key:"_setSwiperRef",value:function(e){this.swiper=e,this.props.innerRef(e)}},{key:"render",value:function(){var e=this.props,t=(e.tagName,e.className),n=e.style,o=e.children,i=(e.allowMouseEvents,e.onSwipeUp,e.onSwipeDown,e.onSwipeLeft,e.onSwipeRight,e.onSwipeStart,e.onSwipeMove,e.onSwipeEnd,e.innerRef,e.tolerance,function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(e,["tagName","className","style","children","allowMouseEvents","onSwipeUp","onSwipeDown","onSwipeLeft","onSwipeRight","onSwipeStart","onSwipeMove","onSwipeEnd","innerRef","tolerance"]));return r.default.createElement(this.props.tagName,a({ref:this._setSwiperRef,onMouseDown:this._onMouseDown,onTouchStart:this._handleSwipeStart,onTouchEnd:this._handleSwipeEnd,className:t,style:n},i),o)}}]),t}(t.Component);h.displayName="ReactSwipe",h.propTypes={tagName:o.default.string,className:o.default.string,style:o.default.object,children:o.default.node,allowMouseEvents:o.default.bool,onSwipeUp:o.default.func,onSwipeDown:o.default.func,onSwipeLeft:o.default.func,onSwipeRight:o.default.func,onSwipeStart:o.default.func,onSwipeMove:o.default.func,onSwipeEnd:o.default.func,innerRef:o.default.func,tolerance:o.default.number.isRequired},h.defaultProps={tagName:"div",allowMouseEvents:!1,onSwipeUp:function(){},onSwipeDown:function(){},onSwipeLeft:function(){},onSwipeRight:function(){},onSwipeStart:function(){},onSwipeMove:function(){},onSwipeEnd:function(){},innerRef:function(){},tolerance:0},e.default=h})?r.apply(t,o):r)||(e.exports=i)},7209:(e,t,n)=>{"use strict";var r,o=(r=n(7294))&&"object"==typeof r&&"default"in r?r.default:r;function i(e){return i.warnAboutHMRDisabled&&(i.warnAboutHMRDisabled=!0,console.error("React-Hot-Loader: misconfiguration detected, using production version in non-production environment."),console.error("React-Hot-Loader: Hot Module Replacement is not enabled.")),o.Children.only(e.children)}i.warnAboutHMRDisabled=!1;var a=function e(){return e.shouldWrapWithAppContainer?function(e){return function(t){return o.createElement(i,null,o.createElement(e,t))}}:function(e){return e}};a.shouldWrapWithAppContainer=!1,t.wU=a},9921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,o=n?Symbol.for("react.portal"):60106,i=n?Symbol.for("react.fragment"):60107,a=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,s=n?Symbol.for("react.provider"):60109,u=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,p=n?Symbol.for("react.forward_ref"):60112,d=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function x(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case f:case i:case l:case a:case d:return e;default:switch(e=e&&e.$$typeof){case u:case p:case v:case m:case s:return e;default:return t}}case o:return t}}}function k(e){return x(e)===f}t.AsyncMode=c,t.ConcurrentMode=f,t.ContextConsumer=u,t.ContextProvider=s,t.Element=r,t.ForwardRef=p,t.Fragment=i,t.Lazy=v,t.Memo=m,t.Portal=o,t.Profiler=l,t.StrictMode=a,t.Suspense=d,t.isAsyncMode=function(e){return k(e)||x(e)===c},t.isConcurrentMode=k,t.isContextConsumer=function(e){return x(e)===u},t.isContextProvider=function(e){return x(e)===s},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return x(e)===p},t.isFragment=function(e){return x(e)===i},t.isLazy=function(e){return x(e)===v},t.isMemo=function(e){return x(e)===m},t.isPortal=function(e){return x(e)===o},t.isProfiler=function(e){return x(e)===l},t.isStrictMode=function(e){return x(e)===a},t.isSuspense=function(e){return x(e)===d},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===f||e===l||e===a||e===d||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===s||e.$$typeof===u||e.$$typeof===p||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=x},9864:(e,t,n)=>{"use strict";e.exports=n(9921)},2751:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,t.default=function(e,t,n){var r=0===e?e:e+t;return"translate3d("+("horizontal"===n?[r,0,0]:[0,r,0]).join(",")+")"}},6632:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==d(e)&&"function"!=typeof e)return{default:e};var t=p();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=r?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}return n.default=e,t&&t.set(e,n),n}(n(7294)),o=f(n(3935)),i=f(n(6995)),a=f(n(5702)),l=f(n(2751)),s=f(n(5040)),u=f(n(6513)),c=f(n(885));function f(e){return e&&e.__esModule?e:{default:e}}function p(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return p=function(){return e},e}function d(e){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function m(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?h(Object(n),!0).forEach((function(t){k(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):h(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function v(){return(v=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t){return(g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){return!t||"object"!==d(t)&&"function"!=typeof t?w(e):t}function w(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function x(e){return(x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function k(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var E=function(){},S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&g(e,t)}(h,e);var t,n,f,p,d=(f=h,p=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(f);if(p){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function h(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,h),k(w(t=d.call(this,e)),"thumbsRef",void 0),k(w(t),"carouselWrapperRef",void 0),k(w(t),"listRef",void 0),k(w(t),"itemsRef",void 0),k(w(t),"timer",void 0),k(w(t),"setThumbsRef",(function(e){t.thumbsRef=e})),k(w(t),"setCarouselWrapperRef",(function(e){t.carouselWrapperRef=e})),k(w(t),"setListRef",(function(e){t.listRef=e})),k(w(t),"setItemsRef",(function(e,n){t.itemsRef||(t.itemsRef=[]),t.itemsRef[n]=e})),k(w(t),"autoPlay",(function(){r.Children.count(t.props.children)<=1||(t.clearAutoPlay(),t.timer=setTimeout((function(){t.increment()}),t.props.interval))})),k(w(t),"clearAutoPlay",(function(){t.timer&&clearTimeout(t.timer)})),k(w(t),"resetAutoPlay",(function(){t.clearAutoPlay(),t.autoPlay()})),k(w(t),"stopOnHover",(function(){t.setState({isMouseEntered:!0},t.clearAutoPlay)})),k(w(t),"startOnLeave",(function(){t.setState({isMouseEntered:!1},t.autoPlay)})),k(w(t),"isFocusWithinTheCarousel",(function(){return!(!t.carouselWrapperRef||(0,u.default)().activeElement!==t.carouselWrapperRef&&!t.carouselWrapperRef.contains((0,u.default)().activeElement))})),k(w(t),"navigateWithKeyboard",(function(e){if(t.isFocusWithinTheCarousel()){var n="horizontal"===t.props.axis,r=n?37:38;(n?39:40)===e.keyCode?t.increment():r===e.keyCode&&t.decrement()}})),k(w(t),"updateSizes",(function(){if(t.state.initialized&&t.itemsRef&&0!==t.itemsRef.length){var e="horizontal"===t.props.axis,n=t.itemsRef[0];if(n){var r=e?n.clientWidth:n.clientHeight;t.setState({itemSize:r}),t.thumbsRef&&t.thumbsRef.updateSizes()}}})),k(w(t),"setMountState",(function(){t.setState({hasMount:!0}),t.updateSizes()})),k(w(t),"handleClickItem",(function(e,n){0!==r.Children.count(t.props.children)&&(t.state.cancelClick?t.setState({cancelClick:!1}):(t.props.onClickItem(e,n),e!==t.state.selectedItem&&t.setState({selectedItem:e})))})),k(w(t),"handleOnChange",(function(e,n){r.Children.count(t.props.children)<=1||t.props.onChange(e,n)})),k(w(t),"handleClickThumb",(function(e,n){t.props.onClickThumb(e,n),t.moveTo(e)})),k(w(t),"onSwipeStart",(function(e){t.setState({swiping:!0}),t.props.onSwipeStart(e),t.clearAutoPlay()})),k(w(t),"onSwipeEnd",(function(e){t.setState({swiping:!1,cancelClick:!1,swipeMovementStarted:!1}),t.props.onSwipeEnd(e),t.autoPlay()})),k(w(t),"onSwipeMove",(function(e,n){t.props.onSwipeMove(n);var o="horizontal"===t.props.axis,i=r.Children.count(t.props.children),a=t.getPosition(t.state.selectedItem),l=t.props.infiniteLoop?t.getPosition(i-1)-100:t.getPosition(i-1),s=o?e.x:e.y,u=s;0===a&&s>0&&(u=0),a===l&&s<0&&(u=0);var c=a+100/(t.state.itemSize/u),f=Math.abs(s)>t.props.swipeScrollTolerance;return t.props.infiniteLoop&&f&&(0===t.state.selectedItem&&c>-100?c-=100*i:t.state.selectedItem===i-1&&c<100*-i&&(c+=100*i)),(!t.props.preventMovementUntilSwipeScrollTolerance||f||t.state.swipeMovementStarted)&&(t.state.swipeMovementStarted||t.setState({swipeMovementStarted:!0}),t.setPosition(c)),f&&!t.state.cancelClick&&t.setState({cancelClick:!0}),f})),k(w(t),"setPosition",(function(e,n){var r=o.default.findDOMNode(t.listRef);r instanceof HTMLElement&&(["WebkitTransform","MozTransform","MsTransform","OTransform","transform","msTransform"].forEach((function(n){r.style[n]=(0,l.default)(e,"%",t.props.axis)})),n&&r.offsetLeft)})),k(w(t),"resetPosition",(function(){var e=t.getPosition(t.state.selectedItem);t.setPosition(e)})),k(w(t),"decrement",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];t.moveTo(t.state.selectedItem-("number"==typeof e?e:1),n)})),k(w(t),"increment",(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1];t.moveTo(t.state.selectedItem+("number"==typeof e?e:1),n)})),k(w(t),"moveTo",(function(e,n){if("number"==typeof e){var o=r.Children.count(t.props.children)-1,i=t.props.infiniteLoop&&!n&&(e<0||e>o),a=e;e<0&&(e=t.props.infiniteLoop?o:0),e>o&&(e=t.props.infiniteLoop?0:o),i?t.setState({swiping:!0},(function(){a<0?t.props.centerMode&&t.props.centerSlidePercentage&&"horizontal"===t.props.axis?t.setPosition(-(o+2)*t.props.centerSlidePercentage-(100-t.props.centerSlidePercentage)/2,!0):t.setPosition(100*-(o+2),!0):a>o&&t.setPosition(0,!0),t.selectItem({selectedItem:e,swiping:!1})})):t.selectItem({selectedItem:e}),t.state.autoPlay&&!1===t.state.isMouseEntered&&t.resetAutoPlay()}})),k(w(t),"onClickNext",(function(){t.increment(1,!1)})),k(w(t),"onClickPrev",(function(){t.decrement(1,!1)})),k(w(t),"onSwipeForward",(function(){t.increment(1,!0),t.props.emulateTouch&&t.setState({cancelClick:!0})})),k(w(t),"onSwipeBackwards",(function(){t.decrement(1,!0),t.props.emulateTouch&&t.setState({cancelClick:!0})})),k(w(t),"changeItem",(function(e){return function(n){(function(e){return!!e&&e.hasOwnProperty("key")})(n)&&"Enter"!==n.key||t.moveTo(e)}})),k(w(t),"selectItem",(function(e,n){t.setState(e,n),t.handleOnChange(e.selectedItem,r.Children.toArray(t.props.children)[e.selectedItem])})),k(w(t),"getInitialImage",(function(){var e=t.props.selectedItem,n=t.itemsRef&&t.itemsRef[e];return(n&&n.getElementsByTagName("img")||[])[0]})),k(w(t),"getVariableItemHeight",(function(e){var n=t.itemsRef&&t.itemsRef[e];if(t.state.hasMount&&n&&n.children.length){var r=n.children[0].getElementsByTagName("img")||[];if(r.length>0){var o=r[0];o.complete||o.addEventListener("load",(function e(){t.forceUpdate(),o.removeEventListener("load",e)}))}var i=(r[0]||n.children[0]).clientHeight;return i>0?i:null}return null})),t.state={initialized:!1,selectedItem:e.selectedItem,hasMount:!1,isMouseEntered:!1,autoPlay:e.autoPlay,swiping:!1,swipeMovementStarted:!1,cancelClick:!1,itemSize:1},t}return t=h,(n=[{key:"componentDidMount",value:function(){this.props.children&&this.setupCarousel()}},{key:"componentDidUpdate",value:function(e,t){e.children||!this.props.children||this.state.initialized||this.setupCarousel(),!e.autoFocus&&this.props.autoFocus&&this.forceFocus(),t.swiping&&!this.state.swiping&&this.resetPosition(),e.selectedItem===this.props.selectedItem&&e.centerMode===this.props.centerMode||(this.updateSizes(),this.moveTo(this.props.selectedItem)),e.autoPlay!==this.props.autoPlay&&(this.props.autoPlay?this.setupAutoPlay():this.destroyAutoPlay(),this.setState({autoPlay:this.props.autoPlay}))}},{key:"componentWillUnmount",value:function(){this.destroyCarousel()}},{key:"setupCarousel",value:function(){var e=this;this.bindEvents(),this.state.autoPlay&&r.Children.count(this.props.children)>1&&this.setupAutoPlay(),this.props.autoFocus&&this.forceFocus(),this.setState({initialized:!0},(function(){var t=e.getInitialImage();t&&!t.complete?t.addEventListener("load",e.setMountState):e.setMountState()}))}},{key:"destroyCarousel",value:function(){this.state.initialized&&(this.unbindEvents(),this.destroyAutoPlay())}},{key:"setupAutoPlay",value:function(){this.autoPlay();var e=this.carouselWrapperRef;this.props.stopOnHover&&e&&(e.addEventListener("mouseenter",this.stopOnHover),e.addEventListener("mouseleave",this.startOnLeave))}},{key:"destroyAutoPlay",value:function(){this.clearAutoPlay();var e=this.carouselWrapperRef;this.props.stopOnHover&&e&&(e.removeEventListener("mouseenter",this.stopOnHover),e.removeEventListener("mouseleave",this.startOnLeave))}},{key:"bindEvents",value:function(){(0,c.default)().addEventListener("resize",this.updateSizes),(0,c.default)().addEventListener("DOMContentLoaded",this.updateSizes),this.props.useKeyboardArrows&&(0,u.default)().addEventListener("keydown",this.navigateWithKeyboard)}},{key:"unbindEvents",value:function(){(0,c.default)().removeEventListener("resize",this.updateSizes),(0,c.default)().removeEventListener("DOMContentLoaded",this.updateSizes);var e=this.getInitialImage();e&&e.removeEventListener("load",this.setMountState),this.props.useKeyboardArrows&&(0,u.default)().removeEventListener("keydown",this.navigateWithKeyboard)}},{key:"forceFocus",value:function(){var e;null===(e=this.carouselWrapperRef)||void 0===e||e.focus()}},{key:"getPosition",value:function(e){if(this.props.infiniteLoop&&++e,0===e)return 0;var t=r.Children.count(this.props.children);if(this.props.centerMode&&"horizontal"===this.props.axis){var n=-e*this.props.centerSlidePercentage,o=t-1;return e&&(e!==o||this.props.infiniteLoop)?n+=(100-this.props.centerSlidePercentage)/2:e===o&&(n+=100-this.props.centerSlidePercentage),n}return 100*-e}},{key:"renderItems",value:function(e){var t=this;return this.props.children?r.Children.map(this.props.children,(function(n,o){var i={ref:function(e){return t.setItemsRef(e,o)},key:"itemKey"+o+(e?"clone":""),className:a.default.ITEM(!0,o===t.state.selectedItem),onClick:t.handleClickItem.bind(t,o,n)},l={};return t.props.centerMode&&"horizontal"===t.props.axis&&(l.style={minWidth:t.props.centerSlidePercentage+"%"}),r.default.createElement("li",v({},i,l),t.props.renderItem(n,{isSelected:o===t.state.selectedItem}))})):[]}},{key:"renderControls",value:function(){var e=this,t=this.props,n=t.showIndicators,o=t.labels,i=t.renderIndicator,a=t.children;return n?r.default.createElement("ul",{className:"control-dots"},r.Children.map(a,(function(t,n){return i&&i(e.changeItem(n),n===e.state.selectedItem,n,o.item)}))):null}},{key:"renderStatus",value:function(){return this.props.showStatus?r.default.createElement("p",{className:"carousel-status"},this.props.statusFormatter(this.state.selectedItem+1,r.Children.count(this.props.children))):null}},{key:"renderThumbs",value:function(){return this.props.showThumbs&&this.props.children&&0!==r.Children.count(this.props.children)?r.default.createElement(s.default,{ref:this.setThumbsRef,onSelectItem:this.handleClickThumb,selectedItem:this.state.selectedItem,transitionTime:this.props.transitionTime,thumbWidth:this.props.thumbWidth,labels:this.props.labels},this.props.renderThumbs(this.props.children)):null}},{key:"render",value:function(){var e=this;if(!this.props.children||0===r.Children.count(this.props.children))return null;var t=this.props.swipeable&&r.Children.count(this.props.children)>1,n="horizontal"===this.props.axis,o=this.props.showArrows&&r.Children.count(this.props.children)>1,s=o&&(this.state.selectedItem>0||this.props.infiniteLoop)||!1,u=o&&(this.state.selectedItem<r.Children.count(this.props.children)-1||this.props.infiniteLoop)||!1,c={},f=this.getPosition(this.state.selectedItem),p=(0,l.default)(f,"%",this.props.axis),d=this.props.transitionTime+"ms";c={WebkitTransform:p,MozTransform:p,MsTransform:p,OTransform:p,transform:p,msTransform:p},this.state.swiping||(c=m(m({},c),{},{WebkitTransitionDuration:d,MozTransitionDuration:d,MsTransitionDuration:d,OTransitionDuration:d,transitionDuration:d,msTransitionDuration:d}));var h=this.renderItems(!0),y=h.shift(),g=h.pop(),b={className:a.default.SLIDER(!0,this.state.swiping),onSwipeMove:this.onSwipeMove,onSwipeStart:this.onSwipeStart,onSwipeEnd:this.onSwipeEnd,style:c,tolerance:this.props.swipeScrollTolerance},w={};if(n){if(b.onSwipeLeft=this.onSwipeForward,b.onSwipeRight=this.onSwipeBackwards,this.props.dynamicHeight){var x=this.getVariableItemHeight(this.state.selectedItem);b.style.height=x||"auto",w.height=x||"auto"}}else b.onSwipeUp="natural"===this.props.verticalSwipe?this.onSwipeBackwards:this.onSwipeForward,b.onSwipeDown="natural"===this.props.verticalSwipe?this.onSwipeForward:this.onSwipeBackwards,b.style.height=this.state.itemSize,w.height=this.state.itemSize;return r.default.createElement("div",{className:a.default.ROOT(this.props.className),ref:this.setCarouselWrapperRef,tabIndex:0},r.default.createElement("div",{className:a.default.CAROUSEL(!0),style:{width:this.props.width}},this.renderControls(),this.props.renderArrowPrev(this.onClickPrev,s,this.props.labels.leftArrow),r.default.createElement("div",{className:a.default.WRAPPER(!0,this.props.axis),style:w},t?r.default.createElement(i.default,v({tagName:"ul",innerRef:this.setListRef},b,{allowMouseEvents:this.props.emulateTouch}),this.props.infiniteLoop&&g,this.renderItems(),this.props.infiniteLoop&&y):r.default.createElement("ul",{className:a.default.SLIDER(!0,this.state.swiping),ref:function(t){return e.setListRef(t)},style:c},this.props.infiniteLoop&&g,this.renderItems(),this.props.infiniteLoop&&y)),this.props.renderArrowNext(this.onClickNext,u,this.props.labels.rightArrow),this.renderStatus()),this.renderThumbs())}}])&&y(t.prototype,n),h}(r.default.Component);t.default=S,k(S,"displayName","Carousel"),k(S,"defaultProps",{axis:"horizontal",centerSlidePercentage:80,interval:3e3,labels:{leftArrow:"previous slide / item",rightArrow:"next slide / item",item:"slide item"},onClickItem:E,onClickThumb:E,onChange:E,onSwipeStart:function(){},onSwipeEnd:function(){},onSwipeMove:function(){return!1},preventMovementUntilSwipeScrollTolerance:!1,renderArrowPrev:function(e,t,n){return r.default.createElement("button",{type:"button","aria-label":n,className:a.default.ARROW_PREV(!t),onClick:e})},renderArrowNext:function(e,t,n){return r.default.createElement("button",{type:"button","aria-label":n,className:a.default.ARROW_NEXT(!t),onClick:e})},renderIndicator:function(e,t,n,o){return r.default.createElement("li",{className:a.default.DOT(t),onClick:e,onKeyDown:e,value:n,key:n,role:"button",tabIndex:0,"aria-label":"".concat(o," ").concat(n+1)})},renderItem:function(e){return e},renderThumbs:function(e){var t=r.Children.map(e,(function(e){var t=e;if("img"!==e.type&&(t=r.Children.toArray(e.props.children).find((function(e){return"img"===e.type}))),t)return t}));return 0===t.filter((function(e){return e})).length?(console.warn("No images found! Can't build the thumb list without images. If you don't need thumbs, set showThumbs={false} in the Carousel. Note that it's not possible to get images rendered inside custom components. More info at https://github.com/leandrowd/react-responsive-carousel/blob/master/TROUBLESHOOTING.md"),[]):t},statusFormatter:function(e,t){return"".concat(e," of ").concat(t)},selectedItem:0,showArrows:!0,showIndicators:!0,showStatus:!0,showThumbs:!0,stopOnHover:!0,swipeScrollTolerance:5,swipeable:!0,transitionTime:350,verticalSwipe:"standard",width:"100%"})},5040:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==f(e)&&"function"!=typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var i=r?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}return n.default=e,t&&t.set(e,n),n}(n(7294)),o=u(n(5702)),i=n(4528),a=u(n(2751)),l=u(n(6995)),s=u(n(885));function u(e){return e&&e.__esModule?e:{default:e}}function c(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function f(e){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e,t){return!t||"object"!==f(t)&&"function"!=typeof t?v(e):t}function v(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function g(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(b,e);var t,n,u,c,f=(u=b,c=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(u);if(c){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return m(this,e)});function b(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,b),g(v(t=f.call(this,e)),"itemsWrapperRef",void 0),g(v(t),"itemsListRef",void 0),g(v(t),"thumbsRef",void 0),g(v(t),"setItemsWrapperRef",(function(e){t.itemsWrapperRef=e})),g(v(t),"setItemsListRef",(function(e){t.itemsListRef=e})),g(v(t),"setThumbsRef",(function(e,n){t.thumbsRef||(t.thumbsRef=[]),t.thumbsRef[n]=e})),g(v(t),"updateSizes",(function(){if(t.props.children&&t.itemsWrapperRef&&t.thumbsRef){var e=r.Children.count(t.props.children),n=t.itemsWrapperRef.clientWidth,o=t.props.thumbWidth?t.props.thumbWidth:(0,i.outerWidth)(t.thumbsRef[0]),a=Math.floor(n/o),l=e-a,s=a<e;t.setState((function(e,n){return{itemSize:o,visibleItems:a,firstItem:s?t.getFirstItem(n.selectedItem):0,lastPosition:l,showArrows:s}}))}})),g(v(t),"handleClickItem",(function(e,n,r){if(!function(e){return e.hasOwnProperty("key")}(r)||"Enter"===r.key){var o=t.props.onSelectItem;"function"==typeof o&&o(e,n)}})),g(v(t),"onSwipeStart",(function(){t.setState({swiping:!0})})),g(v(t),"onSwipeEnd",(function(){t.setState({swiping:!1})})),g(v(t),"onSwipeMove",(function(e){var n=e.x;if(!t.state.itemSize||!t.itemsWrapperRef)return!1;var r=-t.state.firstItem*t.state.itemSize;0===r&&n>0&&(n=0),r===-t.state.visibleItems*t.state.itemSize&&n<0&&(n=0);var o=r+100/(t.itemsWrapperRef.clientWidth/n);return t.itemsListRef&&["WebkitTransform","MozTransform","MsTransform","OTransform","transform","msTransform"].forEach((function(e){t.itemsListRef.style[e]=(0,a.default)(o,"%",t.props.axis)})),!0})),g(v(t),"slideRight",(function(e){t.moveTo(t.state.firstItem-("number"==typeof e?e:1))})),g(v(t),"slideLeft",(function(e){t.moveTo(t.state.firstItem+("number"==typeof e?e:1))})),g(v(t),"moveTo",(function(e){e=(e=e<0?0:e)>=t.state.lastPosition?t.state.lastPosition:e,t.setState({firstItem:e})})),t.state={selectedItem:e.selectedItem,swiping:!1,showArrows:!1,firstItem:0,visibleItems:0,lastPosition:0},t}return t=b,(n=[{key:"componentDidMount",value:function(){this.setupThumbs()}},{key:"UNSAFE_componentWillReceiveProps",value:function(e){e.selectedItem!==this.state.selectedItem&&this.setState({selectedItem:e.selectedItem,firstItem:this.getFirstItem(e.selectedItem)})}},{key:"componentDidUpdate",value:function(e){this.props.children!==e.children&&this.updateSizes()}},{key:"componentWillUnmount",value:function(){this.destroyThumbs()}},{key:"setupThumbs",value:function(){(0,s.default)().addEventListener("resize",this.updateSizes),(0,s.default)().addEventListener("DOMContentLoaded",this.updateSizes),this.updateSizes()}},{key:"destroyThumbs",value:function(){(0,s.default)().removeEventListener("resize",this.updateSizes),(0,s.default)().removeEventListener("DOMContentLoaded",this.updateSizes)}},{key:"getFirstItem",value:function(e){var t=e;return e>=this.state.lastPosition&&(t=this.state.lastPosition),e<this.state.firstItem+this.state.visibleItems&&(t=this.state.firstItem),e<this.state.firstItem&&(t=e),t}},{key:"renderItems",value:function(){var e=this;return this.props.children.map((function(t,n){var i=o.default.ITEM(!1,n===e.state.selectedItem),a={key:n,ref:function(t){return e.setThumbsRef(t,n)},className:i,onClick:e.handleClickItem.bind(e,n,e.props.children[n]),onKeyDown:e.handleClickItem.bind(e,n,e.props.children[n]),"aria-label":"".concat(e.props.labels.item," ").concat(n+1),style:{width:e.props.thumbWidth}};return r.default.createElement("li",p({},a,{role:"button",tabIndex:0}),t)}))}},{key:"render",value:function(){var e=this;if(!this.props.children)return null;var t,n=r.Children.count(this.props.children)>1,i=this.state.showArrows&&this.state.firstItem>0,s=this.state.showArrows&&this.state.firstItem<this.state.lastPosition,u=-this.state.firstItem*(this.state.itemSize||0),c=(0,a.default)(u,"px",this.props.axis),f=this.props.transitionTime+"ms";return t={WebkitTransform:c,MozTransform:c,MsTransform:c,OTransform:c,transform:c,msTransform:c,WebkitTransitionDuration:f,MozTransitionDuration:f,MsTransitionDuration:f,OTransitionDuration:f,transitionDuration:f,msTransitionDuration:f},r.default.createElement("div",{className:o.default.CAROUSEL(!1)},r.default.createElement("div",{className:o.default.WRAPPER(!1),ref:this.setItemsWrapperRef},r.default.createElement("button",{type:"button",className:o.default.ARROW_PREV(!i),onClick:function(){return e.slideRight()},"aria-label":this.props.labels.leftArrow}),n?r.default.createElement(l.default,{tagName:"ul",className:o.default.SLIDER(!1,this.state.swiping),onSwipeLeft:this.slideLeft,onSwipeRight:this.slideRight,onSwipeMove:this.onSwipeMove,onSwipeStart:this.onSwipeStart,onSwipeEnd:this.onSwipeEnd,style:t,innerRef:this.setItemsListRef},this.renderItems()):r.default.createElement("ul",{className:o.default.SLIDER(!1,this.state.swiping),ref:function(t){return e.setItemsListRef(t)},style:t},this.renderItems()),r.default.createElement("button",{type:"button",className:o.default.ARROW_NEXT(!s),onClick:function(){return e.slideLeft()},"aria-label":this.props.labels.rightArrow})))}}])&&d(t.prototype,n),b}(r.Component);t.default=b,g(b,"displayName","Thumbs"),g(b,"defaultProps",{axis:"horizontal",labels:{leftArrow:"previous slide / item",rightArrow:"next slide / item",item:"slide item"},selectedItem:0,thumbWidth:80,transitionTime:350})},5702:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r,o=(r=n(4184))&&r.__esModule?r:{default:r},i={ROOT:function(e){return(0,o.default)(function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({"carousel-root":!0},e||"",!!e))},CAROUSEL:function(e){return(0,o.default)({carousel:!0,"carousel-slider":e})},WRAPPER:function(e,t){return(0,o.default)({"thumbs-wrapper":!e,"slider-wrapper":e,"axis-horizontal":"horizontal"===t,"axis-vertical":"horizontal"!==t})},SLIDER:function(e,t){return(0,o.default)({thumbs:!e,slider:e,animated:!t})},ITEM:function(e,t,n){return(0,o.default)({thumb:!e,slide:e,selected:t,previous:n})},ARROW_PREV:function(e){return(0,o.default)({"control-arrow control-prev":!0,"control-disabled":e})},ARROW_NEXT:function(e){return(0,o.default)({"control-arrow control-next":!0,"control-disabled":e})},DOT:function(e){return(0,o.default)({dot:!0,selected:e})}};t.default=i},4528:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.outerWidth=void 0,t.outerWidth=function(e){var t=e.offsetWidth,n=getComputedStyle(e);return t+(parseInt(n.marginLeft)+parseInt(n.marginRight))}},615:(e,t,n)=>{"use strict";Object.defineProperty(t,"lr",{enumerable:!0,get:function(){return r.default}});var r=o(n(6632));o(n(5040));function o(e){return e&&e.__esModule?e:{default:e}}},6513:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,t.default=function(){return document}},885:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0,t.default=function(){return window}},8420:(e,t,n)=>{"use strict";var r=n(9864),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function s(e){return r.isMemo(e)?a:l[e.$$typeof]||o}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var u=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,p=Object.getOwnPropertyDescriptor,d=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var o=d(n);o&&o!==h&&e(t,o,r)}var a=c(n);f&&(a=a.concat(f(n)));for(var l=s(t),m=s(n),v=0;v<a.length;++v){var y=a[v];if(!(i[y]||r&&r[y]||m&&m[y]||l&&l[y])){var g=p(n,y);try{u(t,y,g)}catch(e){}}}}return t}},6585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},9658:(e,t,n)=>{var r=n(6585);e.exports=function e(t,n,o){return r(n)||(o=n||o,n=[]),o=o||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(t,n):r(t)?function(t,n,r){for(var o=[],i=0;i<t.length;i++)o.push(e(t[i],n,r).source);return c(new RegExp("(?:"+o.join("|")+")",f(r)),n)}(t,n,o):function(e,t,n){return p(i(e,n),t,n)}(t,n,o)},e.exports.parse=i,e.exports.compile=function(e,t){return l(i(e,t),t)},e.exports.tokensToFunction=l,e.exports.tokensToRegExp=p;var o=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function i(e,t){for(var n,r=[],i=0,a=0,l="",c=t&&t.delimiter||"/";null!=(n=o.exec(e));){var f=n[0],p=n[1],d=n.index;if(l+=e.slice(a,d),a=d+f.length,p)l+=p[1];else{var h=e[a],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];l&&(r.push(l),l="");var x=null!=m&&null!=h&&h!==m,k="+"===b||"*"===b,E="?"===b||"*"===b,S=n[2]||c,_=y||g;r.push({name:v||i++,prefix:m||"",delimiter:S,optional:E,repeat:k,partial:x,asterisk:!!w,pattern:_?u(_):w?".*":"[^"+s(S)+"]+?"})}}return a<e.length&&(l+=e.substr(a)),l&&r.push(l),r}function a(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function l(e,t){for(var n=new Array(e.length),o=0;o<e.length;o++)"object"==typeof e[o]&&(n[o]=new RegExp("^(?:"+e[o].pattern+")$",f(t)));return function(t,o){for(var i="",l=t||{},s=(o||{}).pretty?a:encodeURIComponent,u=0;u<e.length;u++){var c=e[u];if("string"!=typeof c){var f,p=l[c.name];if(null==p){if(c.optional){c.partial&&(i+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(p)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var d=0;d<p.length;d++){if(f=s(p[d]),!n[u].test(f))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(f)+"`");i+=(0===d?c.prefix:c.delimiter)+f}}else{if(f=c.asterisk?encodeURI(p).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):s(p),!n[u].test(f))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+f+'"');i+=c.prefix+f}}else i+=c}return i}}function s(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function u(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function p(e,t,n){r(t)||(n=t||n,t=[]);for(var o=(n=n||{}).strict,i=!1!==n.end,a="",l=0;l<e.length;l++){var u=e[l];if("string"==typeof u)a+=s(u);else{var p=s(u.prefix),d="(?:"+u.pattern+")";t.push(u),u.repeat&&(d+="(?:"+p+d+")*"),a+=d=u.optional?u.partial?p+"("+d+")?":"(?:"+p+"("+d+"))?":p+"("+d+")"}}var h=s(n.delimiter||"/"),m=a.slice(-h.length)===h;return o||(a=(m?a.slice(0,-h.length):a)+"(?:"+h+"(?=$))?"),a+=i?"$":o&&m?"":"(?="+h+"|$)",c(new RegExp("^"+a,f(n)),t)}},2408:(e,t,n)=>{"use strict";var r=n(7418),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,s=o?Symbol.for("react.strict_mode"):60108,u=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,p=o?Symbol.for("react.async_mode"):60111,d=o?Symbol.for("react.forward_ref"):60112;o&&Symbol.for("react.placeholder");var h="function"==typeof Symbol&&Symbol.iterator;function m(e,t,n,r,o,i,a,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,o,i,a,l],u=0;(e=Error(t.replace(/%s/g,(function(){return s[u++]})))).name="Invariant Violation"}throw e.framesToPop=1,e}}function v(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);m(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||y}function w(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||y}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&v("85"),this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=b.prototype;var k=x.prototype=new w;k.constructor=x,r(k,b.prototype),k.isPureReactComponent=!0;var E={current:null,currentDispatcher:null},S=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var r=void 0,o={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)S.call(t,r)&&!_.hasOwnProperty(r)&&(o[r]=t[r]);var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];o.children=u}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===o[r]&&(o[r]=s[r]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:E.current}}function T(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var P=/\/+/g,O=[];function R(e,t,n,r){if(O.length){var o=O.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function j(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>O.length&&O.push(e)}function I(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case i:case a:l=!0}}if(l)return n(r,e,""===t?"."+A(e,0):t),1;if(l=0,t=""===t?".":t+":",Array.isArray(e))for(var s=0;s<e.length;s++){var u=t+A(o=e[s],s);l+=I(o,u,n,r)}else if("function"==typeof(u=null===e||"object"!=typeof e?null:"function"==typeof(u=h&&e[h]||e["@@iterator"])?u:null))for(e=u.call(e),s=0;!(o=e.next()).done;)l+=I(o=o.value,u=t+A(o,s++),n,r);else"object"===o&&v("31","[object Object]"==(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return l}function M(e,t,n){return null==e?0:I(e,"",t,n)}function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function N(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,(function(e){return e})):null!=e&&(T(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(P,"$&/")+"/"),M(e,D,t=R(t,i,r,o)),j(t)}function z(e,t){var n=E.currentDispatcher;return null===n&&v("277"),n.readContext(e,t)}var U={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;M(e,N,t=R(null,null,t,n)),j(t)},count:function(e){return M(e,(function(){return null}),null)},toArray:function(e){var t=[];return L(e,t,null,(function(e){return e})),t},only:function(e){return T(e)||v("143"),e}},createRef:function(){return{current:null}},Component:b,PureComponent:x,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,Provider:null,Consumer:null,unstable_read:null}).Provider={$$typeof:c,_context:e},e.Consumer=e,e.unstable_read=z.bind(null,e),e},forwardRef:function(e){return{$$typeof:d,render:e}},Fragment:l,StrictMode:s,unstable_AsyncMode:p,unstable_Profiler:u,createElement:C,cloneElement:function(e,t,n){null==e&&v("267",e);var o=void 0,a=r({},e.props),l=e.key,s=e.ref,u=e._owner;if(null!=t){void 0!==t.ref&&(s=t.ref,u=E.current),void 0!==t.key&&(l=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)S.call(t,o)&&!_.hasOwnProperty(o)&&(a[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1==(o=arguments.length-2))a.children=n;else if(1<o){c=Array(o);for(var f=0;f<o;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:i,type:e.type,key:l,ref:s,props:a,_owner:u}},createFactory:function(e){var t=C.bind(null,e);return t.type=e,t},isValidElement:T,version:"16.5.2",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:E,assign:r}},F={default:U},W=F&&U||F;e.exports=W.default||W},7294:(e,t,n)=>{"use strict";e.exports=n(2408)},490:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=!1,i="object"==typeof performance&&"function"==typeof performance.now,a={timeRemaining:i?function(){var e=h()-performance.now();return 0<e?e:0}:function(){var e=h()-Date.now();return 0<e?e:0},didTimeout:!1};function l(){if(!r){var e=n.timesOutAt;o?d():o=!0,p(u,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,(e=e.callback)(a)}function u(e){r=!0,a.didTimeout=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.timesOutAt<=i))break;do{s()}while(null!==n&&n.timesOutAt<=i)}else if(null!==n)do{s()}while(null!==n&&0<h()-t.unstable_now())}finally{r=!1,null!==n?l():o=!1}}var c,f,p,d,h,m=Date,v="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,g="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,b="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){c=g((function(t){y(f),e(t)})),f=v((function(){b(c),e(t.unstable_now())}),100)}if(i){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return m.now()};if("undefined"==typeof window){var k=-1;p=function(e){k=setTimeout(e,0,!0)},d=function(){clearTimeout(k)},h=function(){return 0}}else if(window._schedMock){var E=window._schedMock;p=E[0],d=E[1],h=E[2]}else{"undefined"!=typeof console&&("function"!=typeof g&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var S=null,_=!1,C=-1,T=!1,P=!1,O=0,R=33,j=33;h=function(){return O};var I="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",(function(e){if(e.source===window&&e.data===I){_=!1;var n=t.unstable_now();if(e=!1,0>=O-n){if(!(-1!==C&&C<=n))return void(T||(T=!0,w(M)));e=!0}if(C=-1,n=S,S=null,null!==n){P=!0;try{n(e)}finally{P=!1}}}}),!1);var M=function(e){T=!1;var t=e-O+j;t<j&&R<j?(8>t&&(t=8),j=t<R?R:t):R=t,O=e+j,_||(_=!0,window.postMessage(I,"*"))};p=function(e,t){S=e,C=t,P?window.postMessage(I,"*"):T||(T=!0,w(M))},d=function(){S=null,_=!1,C=-1}}t.unstable_scheduleWork=function(e,r){var o=t.unstable_now();if(e={callback:e,timesOutAt:r=null!=r&&null!==r.timeout&&void 0!==r.timeout?o+r.timeout:o+5e3,next:null,previous:null},null===n)n=e.next=e.previous=e,l();else{o=null;var i=n;do{if(i.timesOutAt>r){o=i;break}i=i.next}while(i!==n);null===o?o=n:o===n&&(n=e,l()),(r=o.previous).next=o.previous=e,e.next=o,e.previous=r}return e},t.unstable_cancelScheduledWork=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}}},297:(e,t,n)=>{"use strict";e.exports=n(490)},5456:(e,t,n)=>{var r=n(6704);"string"==typeof r&&(r=[[e.id,r,""]]);var o=n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0});r.locals&&(e.exports=r.locals),e.hot.accept(6704,(function(){var t=n(6704);if("string"==typeof t&&(t=[[e.id,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)})),e.hot.dispose((function(){o()}))},6176:(e,t,n)=>{var r=n(514);"string"==typeof r&&(r=[[e.id,r,""]]);var o=n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0});r.locals&&(e.exports=r.locals),e.hot.accept(514,(function(){var t=n(514);if("string"==typeof t&&(t=[[e.id,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)})),e.hot.dispose((function(){o()}))},2251:(e,t,n)=>{var r=n(6486);"string"==typeof r&&(r=[[e.id,r,""]]);var o=n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0});r.locals&&(e.exports=r.locals),e.hot.accept(6486,(function(){var t=n(6486);if("string"==typeof t&&(t=[[e.id,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)})),e.hot.dispose((function(){o()}))},7825:(e,t,n)=>{var r=n(5912);"string"==typeof r&&(r=[[e.id,r,""]]);var o=n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0});r.locals&&(e.exports=r.locals),e.hot.accept(5912,(function(){var t=n(5912);if("string"==typeof t&&(t=[[e.id,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)})),e.hot.dispose((function(){o()}))},5587:(e,t,n)=>{var r=n(7342);"string"==typeof r&&(r=[[e.id,r,""]]);var o=n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0});r.locals&&(e.exports=r.locals),e.hot.accept(7342,(function(){var t=n(7342);if("string"==typeof t&&(t=[[e.id,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)})),e.hot.dispose((function(){o()}))},5450:(e,t,n)=>{var r=n(5374);"string"==typeof r&&(r=[[e.id,r,""]]);var o=n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0});r.locals&&(e.exports=r.locals),e.hot.accept(5374,(function(){var t=n(5374);if("string"==typeof t&&(t=[[e.id,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)})),e.hot.dispose((function(){o()}))},6442:(e,t,n)=>{var r=n(3746);"string"==typeof r&&(r=[[e.id,r,""]]);var o=n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0});r.locals&&(e.exports=r.locals),e.hot.accept(3746,(function(){var t=n(3746);if("string"==typeof t&&(t=[[e.id,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)})),e.hot.dispose((function(){o()}))},9127:(e,t,n)=>{var r=n(9203);"string"==typeof r&&(r=[[e.id,r,""]]);var o=n(6723)(r,{hmr:!0,transform:void 0,insertInto:void 0});r.locals&&(e.exports=r.locals),e.hot.accept(9203,(function(){var t=n(9203);if("string"==typeof t&&(t=[[e.id,t,""]]),!function(e,t){var n,r=0;for(n in e){if(!t||e[n]!==t[n])return!1;r++}for(n in t)r--;return 0===r}(r.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");o(t)})),e.hot.dispose((function(){o()}))},6723:(e,t,n)=>{var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e,t){return t?t.querySelector(e):document.querySelector(e)},s=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=l.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),u=null,c=0,f=[],p=n(1947);function d(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(b(r.parts[a],t))}else{var l=[];for(a=0;a<r.parts.length;a++)l.push(b(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:l}}}}function h(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],l={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(l):n.push(r[a]={id:a,parts:[l]})}return n}function m(e,t){var n=s(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=f[f.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),f.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=s(e.insertAt.before,n);n.insertBefore(t,o)}}function v(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=f.indexOf(e);t>=0&&f.splice(t,1)}function y(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=n.nc;r&&(e.attrs.nonce=r)}return g(t,e.attrs),m(e,t),t}function g(e,t){Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])}))}function b(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var a=c++;n=u||(u=y(t)),r=k.bind(null,n,a,!1),o=k.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",g(t,e.attrs),m(e,t),t}(t),r=S.bind(null,n,t),o=function(){v(n),n.href&&URL.revokeObjectURL(n.href)}):(n=y(t),r=E.bind(null,n),o=function(){v(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=h(e,t);return d(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var a=n[o];(l=i[a.id]).refs--,r.push(l)}for(e&&d(h(e,t),t),o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var s=0;s<l.parts.length;s++)l.parts[s]();delete i[l.id]}}}};var w,x=(w=[],function(e,t){return w[e]=t,w.filter(Boolean).join("\n")});function k(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=x(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function E(e,t){var n=t.css,r=t.media;if(r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function S(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=p(r)),o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(a),l&&URL.revokeObjectURL(l)}},1947:e=>{e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,(function(e,t){return t})).replace(/^'(.*)'$/,(function(e,t){return t}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")}))}},7394:(e,t,n)=>{"use strict";e.exports=n.p+"2a331b22df9eab29ff67.ttf"},5785:(e,t,n)=>{"use strict";e.exports=n.p+"e6c3001fba7fe2925001.jpg"},4510:(e,t,n)=>{"use strict";e.exports=n.p+"dc38201f59ff0f409aed.jpg"},7311:(e,t,n)=>{"use strict";e.exports=n.p+"724a5f1ff9a8fa330cdf.jpg"},2914:(e,t,n)=>{"use strict";e.exports=n.p+"6ba6efcf19c4b857e630.jpg"},8428:(e,t,n)=>{"use strict";e.exports=n.p+"0721b031e4db3c2008c0.jpg"},9573:(e,t,n)=>{"use strict";e.exports=n.p+"de6f487f4dc6fbf737c0.jpg"},3570:(e,t,n)=>{"use strict";e.exports=n.p+"e19b3ccc56310905b8b2.jpg"},1701:(e,t,n)=>{"use strict";e.exports=n.p+"ee7a10fa55f4cb9ca206.jpg"},8004:(e,t,n)=>{"use strict";e.exports=n.p+"6efdcf7dae894124e54d.jpg"},7583:(e,t,n)=>{"use strict";e.exports=n.p+"ec57b148acd728fa467a.jpg"},4624:(e,t,n)=>{"use strict";e.exports=n.p+"d2ab233375a92b4e9eb4.jpg"},9840:(e,t,n)=>{"use strict";e.exports=n.p+"cfb541b7334a8d67aa9a.jpg"},6600:(e,t,n)=>{"use strict";e.exports=n.p+"e18c9ca0bbec773f76f4.jpg"},7234:(e,t,n)=>{"use strict";e.exports=n.p+"e6f7070829fc61dc569f.jpg"},7843:(e,t,n)=>{"use strict";e.exports=n.p+"7bfef016877bacb720b1.jpg"},6842:(e,t,n)=>{"use strict";e.exports=n.p+"abd7a079b4f82dd78b68.jpg"},1168:(e,t,n)=>{var r={"./carousel-1.jpg":7234,"./carousel-2.jpg":7843,"./carousel-3.jpg":6842};function o(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=i,e.exports=o,o.id=1168},6641:(e,t,n)=>{"use strict";e.exports=n.p+"b83a4fdb3c365eb57a6f.jpg"},4928:(e,t,n)=>{"use strict";e.exports=n.p+"b11215c8d0315b259aef.jpg"},8570:(e,t,n)=>{"use strict";e.exports=n.p+"75ed50af4bfe343596bf.jpg"},2332:(e,t,n)=>{"use strict";e.exports=n.p+"6e074ed89bf92bfa50f3.jpg"},211:(e,t,n)=>{"use strict";e.exports=n.p+"fdd109a68b079109f6da.jpg"},4930:(e,t,n)=>{"use strict";e.exports=n.p+"6ddf8f5c37521d8b8207.jpg"},6261:(e,t,n)=>{"use strict";e.exports=n.p+"df70fa4bf1456a075c85.jpg"},9694:(e,t,n)=>{"use strict";e.exports=n.p+"cb707331976bfdda94fa.jpg"},120:(e,t,n)=>{"use strict";e.exports=n.p+"3c3bc3f5ff40f0d5cd7c.jpg"},1700:(e,t,n)=>{"use strict";e.exports=n.p+"904b81647cfe0a36718c.jpg"},3496:(e,t,n)=>{"use strict";e.exports=n.p+"649ad99a1eab6737d61e.jpg"},6061:(e,t,n)=>{"use strict";e.exports=n.p+"ab7ce6e80205205da0a4.jpg"},990:(e,t,n)=>{var r={"./games/asteroids.jpg":5785,"./games/fishing-enterprises.jpg":4510,"./games/overseer.jpg":7311,"./portfolio/cyntrasafe.jpg":2914,"./portfolio/fanlite-engineering.jpg":8428,"./portfolio/iota-online.jpg":9573,"./portfolio/lovelotus.jpg":3570,"./portfolio/opinionated.jpg":1701,"./portfolio/sinestats.jpg":8004,"./portfolio/sudo-news.jpg":7583,"./profile/headshot.jpg":4624,"./visuals/abstract-squares.jpg":9840,"./visuals/bouncing-laser.jpg":6600,"./visuals/carousel/carousel-1.jpg":7234,"./visuals/carousel/carousel-2.jpg":7843,"./visuals/carousel/carousel-3.jpg":6842,"./visuals/cubic-audio-visualizer.jpg":6641,"./visuals/falling-lights.jpg":4928,"./visuals/falling-text.jpg":8570,"./visuals/futuristic-audio-visualizer.jpg":2332,"./visuals/geometric-constellations.jpg":211,"./visuals/gradient-circuit.jpg":4930,"./visuals/meteor-shower.jpg":6261,"./visuals/rainbow-black-hole.jpg":9694,"./visuals/raindrops.jpg":120,"./visuals/random-walkers.jpg":1700,"./visuals/reaching-arms.jpg":3496,"./visuals/rotating-spiral.jpg":6061};function o(e){var t=i(e);return n(t)}function i(e){if(!n.o(r,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=i,e.exports=o,o.id=990}},r={};function o(e){var t=r[e];if(void 0!==t){if(void 0!==t.error)throw t.error;return t.exports}var i=r[e]={id:e,loaded:!1,exports:{}};try{var a={id:e,module:i,factory:n[e],require:o};o.i.forEach((function(e){e(a)})),i=a.module,a.factory.call(i.exports,i,i.exports,a.require)}catch(e){throw i.error=e,e}return i.loaded=!0,i.exports}o.m=n,o.c=r,o.i=[],o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.hu=e=>e+"."+o.h()+".hot-update.js",o.hmrF=()=>"main."+o.h()+".hot-update.json",o.h=()=>"159434623c1eba053a8c",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.hmd=e=>((e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="mrsperry.github.io:",o.l=(n,r,i,a)=>{if(e[n])e[n].push(r);else{var l,s;if(void 0!==i)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var f=u[c];if(f.getAttribute("src")==n||f.getAttribute("data-webpack")==t+i){l=f;break}}l||(s=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,o.nc&&l.setAttribute("nonce",o.nc),l.setAttribute("data-webpack",t+i),l.src=n),e[n]=[r];var p=(t,r)=>{l.onerror=l.onload=null,clearTimeout(d);var o=e[n];if(delete e[n],l.parentNode&&l.parentNode.removeChild(l),o&&o.forEach((e=>e(r))),t)return t(r)},d=setTimeout(p.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=p.bind(null,l.onerror),l.onload=p.bind(null,l.onload),s&&document.head.appendChild(l)}},(()=>{var e,t,n,r,i={},a=o.c,l=[],s=[],u="idle";function c(e){u=e;for(var t=0;t<s.length;t++)s[t].call(null,e)}function f(e){if(0===t.length)return e();var n=t;return t=[],Promise.all(n).then((function(){return f(e)}))}function p(e){if("idle"!==u)throw new Error("check() is only allowed in idle status");return c("check"),o.hmrM().then((function(r){if(!r)return c(m()?"ready":"idle"),null;c("prepare");var i=[];return t=[],n=[],Promise.all(Object.keys(o.hmrC).reduce((function(e,t){return o.hmrC[t](r.c,r.r,r.m,e,n,i),e}),[])).then((function(){return f((function(){return e?h(e):(c("ready"),i)}))}))}))}function d(e){return"ready"!==u?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status")})):h(e)}function h(e){e=e||{},m();var t=n.map((function(t){return t(e)}));n=void 0;var o,i=t.map((function(e){return e.error})).filter(Boolean);if(i.length>0)return c("abort"),Promise.resolve().then((function(){throw i[0]}));c("dispose"),t.forEach((function(e){e.dispose&&e.dispose()})),c("apply");var a=function(e){o||(o=e)},l=[];return t.forEach((function(e){if(e.apply){var t=e.apply(a);if(t)for(var n=0;n<t.length;n++)l.push(t[n])}})),o?(c("fail"),Promise.resolve().then((function(){throw o}))):r?h(e).then((function(e){return l.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e})):(c("idle"),Promise.resolve(l))}function m(){if(r)return n||(n=[]),Object.keys(o.hmrI).forEach((function(e){r.forEach((function(t){o.hmrI[e](t,n)}))})),r=void 0,!0}o.hmrD=i,o.i.push((function(h){var m,v,y,g,b=h.module,w=function(n,r){var o=a[r];if(!o)return n;var i=function(t){if(o.hot.active){if(a[t]){var i=a[t].parents;-1===i.indexOf(r)&&i.push(r)}else l=[r],e=t;-1===o.children.indexOf(t)&&o.children.push(t)}else console.warn("[HMR] unexpected require("+t+") from disposed module "+r),l=[];return n(t)},s=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(t){n[e]=t}}};for(var p in n)Object.prototype.hasOwnProperty.call(n,p)&&"e"!==p&&Object.defineProperty(i,p,s(p));return i.e=function(e){return function(e){switch(u){case"ready":return c("prepare"),t.push(e),f((function(){c("ready")})),e;case"prepare":return t.push(e),e;default:return e}}(n.e(e))},i}(h.require,h.id);b.hot=(m=h.id,v=b,g={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:y=e!==m,_requireSelf:function(){l=v.parents.slice(),e=y?void 0:m,o(m)},active:!0,accept:function(e,t,n){if(void 0===e)g._selfAccepted=!0;else if("function"==typeof e)g._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var r=0;r<e.length;r++)g._acceptedDependencies[e[r]]=t||function(){},g._acceptedErrorHandlers[e[r]]=n;else g._acceptedDependencies[e]=t||function(){},g._acceptedErrorHandlers[e]=n},decline:function(e){if(void 0===e)g._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var t=0;t<e.length;t++)g._declinedDependencies[e[t]]=!0;else g._declinedDependencies[e]=!0},dispose:function(e){g._disposeHandlers.push(e)},addDisposeHandler:function(e){g._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=g._disposeHandlers.indexOf(e);t>=0&&g._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,u){case"idle":n=[],Object.keys(o.hmrI).forEach((function(e){o.hmrI[e](m,n)})),c("ready");break;case"ready":Object.keys(o.hmrI).forEach((function(e){o.hmrI[e](m,n)}));break;case"prepare":case"check":case"dispose":case"apply":(r=r||[]).push(m)}},check:p,apply:d,status:function(e){if(!e)return u;s.push(e)},addStatusHandler:function(e){s.push(e)},removeStatusHandler:function(e){var t=s.indexOf(e);t>=0&&s.splice(t,1)},data:i[m]},e=void 0,g),b.parents=l,b.children=[],l=[],h.require=w})),o.hmrC={},o.hmrI={}})(),o.p="/",(()=>{var e,t,n,r,i={179:0},a={};function l(e){return new Promise(((t,n)=>{a[e]=t;var r=o.p+o.hu(e),i=new Error;o.l(r,(t=>{if(a[e]){a[e]=void 0;var r=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;i.message="Loading hot update chunk "+e+" failed.\n("+r+": "+o+")",i.name="ChunkLoadError",i.type=r,i.request=o,n(i)}}))}))}function s(a){function l(e){for(var t=[e],n={},r=t.map((function(e){return{chain:[e],id:e}}));r.length>0;){var i=r.pop(),a=i.id,l=i.chain,u=o.c[a];if(u&&(!u.hot._selfAccepted||u.hot._selfInvalidated)){if(u.hot._selfDeclined)return{type:"self-declined",chain:l,moduleId:a};if(u.hot._main)return{type:"unaccepted",chain:l,moduleId:a};for(var c=0;c<u.parents.length;c++){var f=u.parents[c],p=o.c[f];if(p){if(p.hot._declinedDependencies[a])return{type:"declined",chain:l.concat([f]),moduleId:a,parentId:f};-1===t.indexOf(f)&&(p.hot._acceptedDependencies[a]?(n[f]||(n[f]=[]),s(n[f],[a])):(delete n[f],t.push(f),r.push({chain:l.concat([f]),id:f})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];-1===e.indexOf(r)&&e.push(r)}}o.f&&delete o.f.jsonpHmr,e=void 0;var u={},c=[],f={},p=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var d in t)if(o.o(t,d)){var h,m=t[d],v=!1,y=!1,g=!1,b="";switch((h=m?l(d):{type:"disposed",moduleId:d}).chain&&(b="\nUpdate propagation: "+h.chain.join(" -> ")),h.type){case"self-declined":a.onDeclined&&a.onDeclined(h),a.ignoreDeclined||(v=new Error("Aborted because of self decline: "+h.moduleId+b));break;case"declined":a.onDeclined&&a.onDeclined(h),a.ignoreDeclined||(v=new Error("Aborted because of declined dependency: "+h.moduleId+" in "+h.parentId+b));break;case"unaccepted":a.onUnaccepted&&a.onUnaccepted(h),a.ignoreUnaccepted||(v=new Error("Aborted because "+d+" is not accepted"+b));break;case"accepted":a.onAccepted&&a.onAccepted(h),y=!0;break;case"disposed":a.onDisposed&&a.onDisposed(h),g=!0;break;default:throw new Error("Unexception type "+h.type)}if(v)return{error:v};if(y)for(d in f[d]=m,s(c,h.outdatedModules),h.outdatedDependencies)o.o(h.outdatedDependencies,d)&&(u[d]||(u[d]=[]),s(u[d],h.outdatedDependencies[d]));g&&(s(c,[h.moduleId]),f[d]=p)}t=void 0;for(var w,x=[],k=0;k<c.length;k++){var E=c[k],S=o.c[E];S&&(S.hot._selfAccepted||S.hot._main)&&f[E]!==p&&!S.hot._selfInvalidated&&x.push({module:E,require:S.hot._requireSelf,errorHandler:S.hot._selfAccepted})}return{dispose:function(){var e;n.forEach((function(e){delete i[e]})),n=void 0;for(var t,r=c.slice();r.length>0;){var a=r.pop(),l=o.c[a];if(l){var s={},f=l.hot._disposeHandlers;for(k=0;k<f.length;k++)f[k].call(null,s);for(o.hmrD[a]=s,l.hot.active=!1,delete o.c[a],delete u[a],k=0;k<l.children.length;k++){var p=o.c[l.children[k]];p&&(e=p.parents.indexOf(a))>=0&&p.parents.splice(e,1)}}}for(var d in u)if(o.o(u,d)&&(l=o.c[d]))for(w=u[d],k=0;k<w.length;k++)t=w[k],(e=l.children.indexOf(t))>=0&&l.children.splice(e,1)},apply:function(e){for(var t in f)o.o(f,t)&&(o.m[t]=f[t]);for(var n=0;n<r.length;n++)r[n](o);for(var i in u)if(o.o(u,i)){var l=o.c[i];if(l){w=u[i];for(var s=[],p=[],d=[],h=0;h<w.length;h++){var m=w[h],v=l.hot._acceptedDependencies[m],y=l.hot._acceptedErrorHandlers[m];if(v){if(-1!==s.indexOf(v))continue;s.push(v),p.push(y),d.push(m)}}for(var g=0;g<s.length;g++)try{s[g].call(null,w)}catch(t){if("function"==typeof p[g])try{p[g](t,{moduleId:i,dependencyId:d[g]})}catch(n){a.onErrored&&a.onErrored({type:"accept-error-handler-errored",moduleId:i,dependencyId:d[g],error:n,originalError:t}),a.ignoreErrored||(e(n),e(t))}else a.onErrored&&a.onErrored({type:"accept-errored",moduleId:i,dependencyId:d[g],error:t}),a.ignoreErrored||e(t)}}}for(var b=0;b<x.length;b++){var k=x[b],E=k.module;try{k.require(E)}catch(t){if("function"==typeof k.errorHandler)try{k.errorHandler(t,{moduleId:E,module:o.c[E]})}catch(n){a.onErrored&&a.onErrored({type:"self-accept-error-handler-errored",moduleId:E,error:n,originalError:t}),a.ignoreErrored||(e(n),e(t))}else a.onErrored&&a.onErrored({type:"self-accept-errored",moduleId:E,error:t}),a.ignoreErrored||e(t)}}return c}}}self.webpackHotUpdatemrsperry_github_io=(e,n,i)=>{for(var l in n)o.o(n,l)&&(t[l]=n[l]);i&&r.push(i),a[e]&&(a[e](),a[e]=void 0)},o.hmrI.jsonp=function(e,i){t||(t={},r=[],n=[],i.push(s)),o.o(t,e)||(t[e]=o.m[e])},o.hmrC.jsonp=function(a,u,c,f,p,d){p.push(s),e={},n=u,t=c.reduce((function(e,t){return e[t]=!1,e}),{}),r=[],a.forEach((function(t){o.o(i,t)&&void 0!==i[t]&&(f.push(l(t)),e[t]=!0)})),o.f&&(o.f.jsonpHmr=function(t,n){e&&!o.o(e,t)&&o.o(i,t)&&void 0!==i[t]&&(n.push(l(t)),e[t]=!0)})},o.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(o.p+o.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),o(4323)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vd2VicGFjay9ydW50aW1lL2xvYWQgc2NyaXB0Iiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1wYXRobmFtZS9lc20vcmVzb2x2ZS1wYXRobmFtZS5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL2hpc3RvcnkvZXNtL2hpc3RvcnkuanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQvZGlzdC9lc20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9lc20vcmVhY3Qtcm91dGVyLmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXItZG9tL2VzbS9yZWFjdC1yb3V0ZXItZG9tLmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL3NyYy9jb21wb25lbnRzL3Byb2ZpbGUvUHJvZmlsZS50c3giLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL1Byb2plY3REaXNwbGF5LnRzeCIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9zcmMvY29tcG9uZW50cy9jb21tb24vTmF2aWdhdGlvbi50c3giLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvcG9ydGZvbGlvL1BvcnRmb2xpby50c3giLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvZ2FtZXMvR2FtZXMudHN4Iiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL3NyYy9jb21wb25lbnRzL3Zpc3VhbHMvVmlzdWFscy50c3giLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvQXBwLnRzeCIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9zcmMvY29tcG9uZW50cy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlc3BvbnNpdmUtY2Fyb3VzZWwvbGliL3N0eWxlcy9jYXJvdXNlbC5taW4uY3NzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL3NyYy9jb21wb25lbnRzL0FwcC5zY3NzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9OYXZpZ2F0aW9uLnNjc3MiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL1Byb2plY3REaXNwbGF5LnNjc3MiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvcHJvZmlsZS9Qcm9maWxlLnNjc3MiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvdmlzdWFscy9WaXN1YWxzLnNjc3MiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL3Nhc3MvYmFzZS5zY3NzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL3NyYy9zYXNzL3Jlc2V0LnNjc3MiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi91cmwvZXNjYXBlLmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWVhc3ktc3dpcGUvbGliL2luZGV4LmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9yZWFjdC1lYXN5LXN3aXBlL2xpYi9yZWFjdC1zd2lwZS5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaG90LWxvYWRlci9kaXN0L3JlYWN0LWhvdC1sb2FkZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlc3BvbnNpdmUtY2Fyb3VzZWwvbGliL2pzL0NTU1RyYW5zbGF0ZS5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVzcG9uc2l2ZS1jYXJvdXNlbC9saWIvanMvY29tcG9uZW50cy9DYXJvdXNlbC5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVzcG9uc2l2ZS1jYXJvdXNlbC9saWIvanMvY29tcG9uZW50cy9UaHVtYnMuanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlc3BvbnNpdmUtY2Fyb3VzZWwvbGliL2pzL2Nzc0NsYXNzZXMuanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlc3BvbnNpdmUtY2Fyb3VzZWwvbGliL2pzL2RpbWVuc2lvbnMuanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlc3BvbnNpdmUtY2Fyb3VzZWwvbGliL2pzL2luZGV4LmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZXNwb25zaXZlLWNhcm91c2VsL2xpYi9qcy9zaGltcy9kb2N1bWVudC5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVzcG9uc2l2ZS1jYXJvdXNlbC9saWIvanMvc2hpbXMvd2luZG93LmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9yZWFjdC1yb3V0ZXIvbm9kZV9tb2R1bGVzL2lzYXJyYXkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJvdXRlci9ub2RlX21vZHVsZXMvcGF0aC10by1yZWdleHAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlL2Nqcy9zY2hlZHVsZS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlc3BvbnNpdmUtY2Fyb3VzZWwvbGliL3N0eWxlcy9jYXJvdXNlbC5taW4uY3NzP2RmMGEiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvQXBwLnNjc3M/YzE0YSIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9zcmMvY29tcG9uZW50cy9jb21tb24vTmF2aWdhdGlvbi5zY3NzPzg1MWMiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL1Byb2plY3REaXNwbGF5LnNjc3M/YTU2NSIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9zcmMvY29tcG9uZW50cy9wcm9maWxlL1Byb2ZpbGUuc2Nzcz9kMWRkIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL3NyYy9jb21wb25lbnRzL3Zpc3VhbHMvVmlzdWFscy5zY3NzP2U4OGYiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL3Nhc3MvYmFzZS5zY3NzPzQ3NDkiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL3Nhc3MvcmVzZXQuc2Nzcz9hYjg4Iiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qcyIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby8uL3NyYy9hc3NldHMvaW1hZ2VzL3Zpc3VhbHMvY2Fyb3VzZWx8c3luY3wvXi9jYXJvdXNlbC8tLiovLmpwZyQiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvLy4vc3JjL2Fzc2V0cy9pbWFnZXN8c3luY3wvXi8uKiQiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby93ZWJwYWNrL3J1bnRpbWUvZ2V0IGphdmFzY3JpcHQgdXBkYXRlIGNodW5rIGZpbGVuYW1lIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby93ZWJwYWNrL3J1bnRpbWUvZ2V0IHVwZGF0ZSBtYW5pZmVzdCBmaWxlbmFtZSIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby93ZWJwYWNrL3J1bnRpbWUvaGFybW9ueSBtb2R1bGUgZGVjb3JhdG9yIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby93ZWJwYWNrL3J1bnRpbWUvaG90IG1vZHVsZSByZXBsYWNlbWVudCIsIndlYnBhY2s6Ly9tcnNwZXJyeS5naXRodWIuaW8vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vbXJzcGVycnkuZ2l0aHViLmlvL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL21yc3BlcnJ5LmdpdGh1Yi5pby93ZWJwYWNrL3N0YXJ0dXAiXSwibmFtZXMiOlsiaW5Qcm9ncmVzcyIsImRhdGFXZWJwYWNrUHJlZml4IiwiX3NldFByb3RvdHlwZU9mIiwibyIsInAiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0c0xvb3NlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwicHJvdG90eXBlIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJhc3NpZ24iLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiYXBwbHkiLCJ0aGlzIiwiaXNBYnNvbHV0ZSIsInBhdGhuYW1lIiwiY2hhckF0Iiwic3BsaWNlT25lIiwibGlzdCIsImluZGV4IiwiayIsIm4iLCJwb3AiLCJjb25kaXRpb24iLCJtZXNzYWdlIiwiRXJyb3IiLCJhZGRMZWFkaW5nU2xhc2giLCJwYXRoIiwic3RyaXBMZWFkaW5nU2xhc2giLCJzdWJzdHIiLCJzdHJpcEJhc2VuYW1lIiwicHJlZml4IiwidG9Mb3dlckNhc2UiLCJpbmRleE9mIiwiaGFzQmFzZW5hbWUiLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJzbGljZSIsImNyZWF0ZVBhdGgiLCJsb2NhdGlvbiIsInNlYXJjaCIsImhhc2giLCJzdGF0ZSIsImN1cnJlbnRMb2NhdGlvbiIsImhhc2hJbmRleCIsInNlYXJjaEluZGV4IiwicGFyc2VQYXRoIiwidW5kZWZpbmVkIiwiZGVjb2RlVVJJIiwiZSIsIlVSSUVycm9yIiwidG8iLCJmcm9tIiwiaGFzVHJhaWxpbmdTbGFzaCIsInRvUGFydHMiLCJzcGxpdCIsImZyb21QYXJ0cyIsImlzVG9BYnMiLCJpc0Zyb21BYnMiLCJtdXN0RW5kQWJzIiwiY29uY2F0IiwibGFzdCIsInVwIiwicGFydCIsInVuc2hpZnQiLCJyZXN1bHQiLCJqb2luIiwiY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIiLCJwcm9tcHQiLCJsaXN0ZW5lcnMiLCJzZXRQcm9tcHQiLCJuZXh0UHJvbXB0IiwiY29uZmlybVRyYW5zaXRpb25UbyIsImFjdGlvbiIsImdldFVzZXJDb25maXJtYXRpb24iLCJjYWxsYmFjayIsImFwcGVuZExpc3RlbmVyIiwiZm4iLCJpc0FjdGl2ZSIsImxpc3RlbmVyIiwicHVzaCIsImZpbHRlciIsIml0ZW0iLCJub3RpZnlMaXN0ZW5lcnMiLCJfbGVuIiwiYXJncyIsIkFycmF5IiwiX2tleSIsImZvckVhY2giLCJjYW5Vc2VET00iLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJnZXRDb25maXJtYXRpb24iLCJjb25maXJtIiwiSGFzaENoYW5nZUV2ZW50JDEiLCJIYXNoUGF0aENvZGVycyIsImhhc2hiYW5nIiwiZW5jb2RlUGF0aCIsImRlY29kZVBhdGgiLCJub3NsYXNoIiwic2xhc2giLCJzdHJpcEhhc2giLCJ1cmwiLCJnZXRIYXNoUGF0aCIsImhyZWYiLCJzdWJzdHJpbmciLCJyZXBsYWNlSGFzaFBhdGgiLCJyZXBsYWNlIiwiY3JlYXRlSGFzaEhpc3RvcnkiLCJwcm9wcyIsImdsb2JhbEhpc3RvcnkiLCJoaXN0b3J5IiwiX3Byb3BzIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiX3Byb3BzJGdldFVzZXJDb25maXJtIiwiX3Byb3BzJGhhc2hUeXBlIiwiaGFzaFR5cGUiLCJiYXNlbmFtZSIsIl9IYXNoUGF0aENvZGVycyRoYXNoVCIsImdldERPTUxvY2F0aW9uIiwidHJhbnNpdGlvbk1hbmFnZXIiLCJzZXRTdGF0ZSIsIm5leHRTdGF0ZSIsImZvcmNlTmV4dFBvcCIsImlnbm9yZVBhdGgiLCJoYW5kbGVIYXNoQ2hhbmdlIiwiYSIsImIiLCJlbmNvZGVkUGF0aCIsInByZXZMb2NhdGlvbiIsIm9rIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsInRvSW5kZXgiLCJhbGxQYXRocyIsImxhc3RJbmRleE9mIiwiZnJvbUluZGV4IiwiZGVsdGEiLCJnbyIsInJldmVydFBvcCIsImhhbmRsZVBvcCIsImluaXRpYWxMb2NhdGlvbiIsImxpc3RlbmVyQ291bnQiLCJjaGVja0RPTUxpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaXNCbG9ja2VkIiwiY3JlYXRlSHJlZiIsImJhc2VUYWciLCJxdWVyeVNlbGVjdG9yIiwiZ2V0QXR0cmlidXRlIiwicHVzaEhhc2hQYXRoIiwicHJldkluZGV4IiwibmV4dFBhdGhzIiwiZ29CYWNrIiwiZ29Gb3J3YXJkIiwiYmxvY2siLCJ1bmJsb2NrIiwibGlzdGVuIiwidW5saXN0ZW4iLCJNQVhfU0lHTkVEXzMxX0JJVF9JTlQiLCJjb21tb25qc0dsb2JhbCIsImdsb2JhbFRoaXMiLCJnIiwiY3JlYXRlRXZlbnRFbWl0dGVyIiwidmFsdWUiLCJoYW5kbGVycyIsIm9uIiwiaGFuZGxlciIsIm9mZiIsImgiLCJnZXQiLCJzZXQiLCJuZXdWYWx1ZSIsImNoYW5nZWRCaXRzIiwiZGVmYXVsdFZhbHVlIiwiY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfUHJvdmlkZXIkY2hpbGRDb250ZXgiLCJfQ29uc3VtZXIkY29udGV4dFR5cGUiLCJjb250ZXh0UHJvcCIsIlByb3ZpZGVyIiwiX0NvbXBvbmVudCIsIl90aGlzIiwiZW1pdHRlciIsIl9wcm90byIsImdldENoaWxkQ29udGV4dCIsIl9yZWYiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwibmV4dFByb3BzIiwib2xkVmFsdWUiLCJ4IiwieSIsInJlbmRlciIsImNoaWxkcmVuIiwiQ29tcG9uZW50IiwiY2hpbGRDb250ZXh0VHlwZXMiLCJDb25zdW1lciIsIl9Db21wb25lbnQyIiwiX3RoaXMyIiwiZ2V0VmFsdWUiLCJvblVwZGF0ZSIsIm9ic2VydmVkQml0cyIsIl9wcm90bzIiLCJjb21wb25lbnREaWRNb3VudCIsImNvbnRleHQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImlzQXJyYXkiLCJjb250ZXh0VHlwZXMiLCJleGNsdWRlZCIsInNvdXJjZUtleXMiLCJrZXlzIiwiaGlzdG9yeUNvbnRleHQiLCJuYW1lIiwiZGlzcGxheU5hbWUiLCJjcmVhdGVOYW1lZENvbnRleHQiLCJjcmVhdGVOYW1lZENvbnRleHQkMSIsIlJvdXRlciIsIl9SZWFjdCRDb21wb25lbnQiLCJfaXNNb3VudGVkIiwiX3BlbmRpbmdMb2NhdGlvbiIsInN0YXRpY0NvbnRleHQiLCJjb21wdXRlUm9vdE1hdGNoIiwicGFyYW1zIiwiaXNFeGFjdCIsIm1hdGNoIiwiY2FjaGUkMSIsImNhY2hlQ291bnQkMSIsIm1hdGNoUGF0aCIsIm9wdGlvbnMiLCJfb3B0aW9ucyIsIl9vcHRpb25zJGV4YWN0IiwiZXhhY3QiLCJfb3B0aW9ucyRzdHJpY3QiLCJzdHJpY3QiLCJfb3B0aW9ucyRzZW5zaXRpdmUiLCJzZW5zaXRpdmUiLCJyZWR1Y2UiLCJtYXRjaGVkIiwiX2NvbXBpbGVQYXRoIiwiY2FjaGVLZXkiLCJlbmQiLCJwYXRoQ2FjaGUiLCJyZWdleHAiLCJjb21waWxlUGF0aCQxIiwiZXhlYyIsInZhbHVlcyIsIm1lbW8iLCJSb3V0ZSIsImNvbnRleHQkMSIsImNvbXB1dGVkTWF0Y2giLCJfdGhpcyRwcm9wcyIsImNvbXBvbmVudCIsIlN3aXRjaCIsImVsZW1lbnQiLCJjaGlsZCIsIkhhc2hSb3V0ZXIiLCJyZXNvbHZlVG9Mb2NhdGlvbiIsIm5vcm1hbGl6ZVRvTG9jYXRpb24iLCJmb3J3YXJkUmVmU2hpbSIsIkMiLCJmb3J3YXJkUmVmIiwiTGlua0FuY2hvciIsImZvcndhcmRlZFJlZiIsImlubmVyUmVmIiwibmF2aWdhdGUiLCJfb25DbGljayIsIm9uQ2xpY2siLCJyZXN0IiwiZXZlbnQiLCJleCIsInByZXZlbnREZWZhdWx0IiwiZGVmYXVsdFByZXZlbnRlZCIsImJ1dHRvbiIsIm1ldGFLZXkiLCJhbHRLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJpc01vZGlmaWVkRXZlbnQiLCJyZWYiLCJMaW5rIiwiX3JlZjIiLCJfcmVmMiRjb21wb25lbnQiLCJmb3J3YXJkUmVmU2hpbSQxIiwiZm9yd2FyZFJlZiQxIiwiX3JlZiRhcmlhQ3VycmVudCIsImFyaWFDdXJyZW50IiwiX3JlZiRhY3RpdmVDbGFzc05hbWUiLCJhY3RpdmVDbGFzc05hbWUiLCJhY3RpdmVTdHlsZSIsImNsYXNzTmFtZVByb3AiLCJjbGFzc05hbWUiLCJpc0FjdGl2ZVByb3AiLCJsb2NhdGlvblByb3AiLCJzdHlsZVByb3AiLCJzdHlsZSIsImVzY2FwZWRQYXRoIiwiY2xhc3NuYW1lcyIsImpvaW5DbGFzc25hbWVzIiwiYWx0Iiwic3JjIiwidGl0bGUiLCJyZWwiLCJmaWd1cmVzIiwiZGF0YSIsImRlc2NyaXB0aW9uIiwiaWQiLCJhc3NldEZvbGRlciIsImltYWdlIiwidXJsUHJlZml4IiwiaXRlbXMiLCJuYXZJdGVtcyIsImxpbmsiLCJ2aWV3IiwiY2Fyb3VzZWxEYXRhIiwicHJvamVjdERhdGEiLCJhdXRvUGxheSIsImludGVydmFsIiwiaW5maW5pdGVMb29wIiwic2hvd0luZGljYXRvcnMiLCJzaG93U3RhdHVzIiwic2hvd1RodW1icyIsInRyYW5zaXRpb25UaW1lIiwibWFwIiwicHJvamVjdCIsInRhYkluZGV4IiwidXBkYXRlSGFzaCIsIm1vZHVsZSIsImdldEVsZW1lbnRCeUlkIiwiaGFzT3duIiwiY2xhc3NOYW1lcyIsImNsYXNzZXMiLCJhcmciLCJhcmdUeXBlIiwiaW5uZXIiLCJ0b1N0cmluZyIsImV4cG9ydHMiLCJkZWZhdWx0IiwiZXNjYXBlIiwidXNlU291cmNlTWFwIiwiY29udGVudCIsInNvdXJjZU1hcCIsImNzc01hcHBpbmciLCJidG9hIiwic291cmNlTWFwcGluZyIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtb2R1bGVzIiwibWVkaWFRdWVyeSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJ0ZXN0IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9PYmplY3QiLCJ2YWwiLCJUeXBlRXJyb3IiLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwic3ltYm9scyIsInMiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsImVtcHR5RnVuY3Rpb24iLCJlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0IiwicmVzZXRXYXJuaW5nQ2FjaGUiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsImZ1bmMiLCJudW1iZXIiLCJvYmplY3QiLCJzdHJpbmciLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwibm9kZSIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImNoZWNrUHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYWEiLCJiYSIsImNhIiwiYyIsImQiLCJmIiwibCIsImZyYW1lc1RvUG9wIiwidCIsImRhIiwibSIsIm9uRXJyb3IiLCJlYSIsImZhIiwiaGEiLCJpYSIsImphIiwia2EiLCJtYSIsIm5hIiwib2EiLCJwYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicWEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInJhIiwicmVnaXN0cmF0aW9uTmFtZSIsInNhIiwidGEiLCJkZXBlbmRlbmNpZXMiLCJ1YSIsInZhIiwid2EiLCJ4YSIsInR5cGUiLCJjdXJyZW50VGFyZ2V0IiwibGEiLCJ5YSIsInphIiwiQWEiLCJCYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkNhIiwiRGEiLCJFYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJGYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiR2EiLCJIYSIsIk1hdGgiLCJyYW5kb20iLCJJYSIsIkphIiwiS2EiLCJwYXJlbnROb2RlIiwidGFnIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJyZXR1cm4iLCJQYSIsImRpc3BhdGNoQ29uZmlnIiwiUWEiLCJfdGFyZ2V0SW5zdCIsIlJhIiwiVGEiLCJVYSIsIlZhIiwiV2EiLCJZYSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlphIiwiJGEiLCJhYiIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJiYiIsImNiIiwiZGIiLCJlYiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJ6IiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsIm5iIiwiZXZlbnRQb29sIiwib2IiLCJkZXN0cnVjdG9yIiwibWIiLCJnZXRQb29sZWQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsInBiIiwicWIiLCJyYiIsInNiIiwidGIiLCJkb2N1bWVudE1vZGUiLCJ1YiIsInZiIiwid2IiLCJ4YiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJ5YiIsInpiIiwia2V5Q29kZSIsIkFiIiwiZGV0YWlsIiwiQmIiLCJFYiIsImxvY2FsZSIsIndoaWNoIiwiQ2IiLCJjaGFyIiwiRGIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwidGVsIiwidGV4dCIsInRpbWUiLCJ3ZWVrIiwiUmIiLCJub2RlTmFtZSIsIlNiIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwibm9kZVR5cGUiLCJUYiIsInNldEF0dHJpYnV0ZSIsIlViIiwiV2IiLCJfdmFsdWVUcmFja2VyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJWYiIsIlhiIiwiY2hlY2tlZCIsIlliIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJaYiIsIlN5bWJvbCIsImZvciIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJpdGVyYXRvciIsImtjIiwibGMiLCIkJHR5cGVvZiIsInRoZW4iLCJfcmVhY3RTdGF0dXMiLCJfcmVhY3RSZXN1bHQiLCJtYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwibmMiLCJwYyIsInFjIiwicmMiLCJEIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsIkUiLCJ2YyIsIndjIiwidG9VcHBlckNhc2UiLCJ4YyIsInRjIiwiaXNOYU4iLCJ1YyIsInNjIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ5YyIsInpjIiwiZGVmYXVsdENoZWNrZWQiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJCYyIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiR2MiLCJjaGFuZ2UiLCJIYyIsIkljIiwiSmMiLCJLYyIsIkxjIiwiTWMiLCJOYyIsIk9jIiwiZGV0YWNoRXZlbnQiLCJQYyIsIlFjIiwiYXR0YWNoRXZlbnQiLCJSYyIsIlNjIiwiVGMiLCJVYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJWYyIsIldjIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsIlhjIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsIlljIiwiWmMiLCIkYyIsImFkIiwiYmQiLCJjZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsImRkIiwicG9pbnRlcklkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiZWQiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImZkIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJhbHRlcm5hdGUiLCJnZCIsImhkIiwiamQiLCJlZmZlY3RUYWciLCJrZCIsIm1kIiwic2libGluZyIsImN1cnJlbnQiLCJsZCIsIm5kIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIm9kIiwiY2xpcGJvYXJkRGF0YSIsInBkIiwicWQiLCJjaGFyQ29kZSIsInJkIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsInNkIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsInRkIiwicmVwZWF0IiwidWQiLCJkYXRhVHJhbnNmZXIiLCJ2ZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJ3ZCIsInhkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJ5ZCIsInpkIiwiQWQiLCJCZCIsImlzSW50ZXJhY3RpdmUiLCJDZCIsImlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSIsIkRkIiwiRWQiLCJGZCIsInRhcmdldEluc3QiLCJhbmNlc3RvcnMiLCJjb250YWluZXJJbmZvIiwidG9wTGV2ZWxUeXBlIiwiR2QiLCJGIiwiSGQiLCJJZCIsImJpbmQiLCJKZCIsIktkIiwiTGQiLCJNZCIsIk5kIiwiT2QiLCJib2R5IiwiUWQiLCJmaXJzdENoaWxkIiwiUmQiLCJvZmZzZXQiLCJuZXh0U2libGluZyIsIlNkIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsIlRkIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJVZCIsImNvbnRlbnRFZGl0YWJsZSIsIlZkIiwiV2QiLCJzZWxlY3QiLCJYZCIsIllkIiwiWmQiLCIkZCIsImFlIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsImFuY2hvck5vZGUiLCJnZXRTZWxlY3Rpb24iLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImJlIiwib25TZWxlY3QiLCJkZSIsIkNoaWxkcmVuIiwiY2UiLCJlZSIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZmUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImdlIiwiaGUiLCJpZSIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJqZSIsImtlIiwibGUiLCJtZSIsIm5lIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJvZSIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsInBlIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJxZSIsInJlIiwidHJpbSIsInNldFByb3BlcnR5Iiwic2UiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInRlIiwidWUiLCJpcyIsInZlIiwiYmx1ciIsImZvY3VzIiwid2UiLCJ4ZSIsInllIiwiemUiLCJhdXRvRm9jdXMiLCJBZSIsIl9faHRtbCIsIkJlIiwiQ2UiLCJTZXQiLCJEZSIsIkVlIiwiRyIsIkgiLCJGZSIsIkkiLCJKIiwiR2UiLCJIZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIksiLCJJZSIsIkplIiwiS2UiLCJMZSIsIk1lIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJOZSIsIk9lIiwiUGUiLCJRZSIsIlNlIiwicGVuZGluZ1Byb3BzIiwiZmlyc3RDb250ZXh0RGVwZW5kZW5jeSIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJtb2RlIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJleHBpcmF0aW9uVGltZSIsIlRlIiwiaXNSZWFjdENvbXBvbmVudCIsIlVlIiwiVmUiLCJXZSIsIlhlIiwiWWUiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsIlplIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCIkZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RQaW5nZWRUaW1lIiwibmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT24iLCJhZiIsImJmIiwiYmFzZVN0YXRlIiwiZmlyc3RVcGRhdGUiLCJsYXN0VXBkYXRlIiwiZmlyc3RDYXB0dXJlZFVwZGF0ZSIsImxhc3RDYXB0dXJlZFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRFZmZlY3QiLCJsYXN0Q2FwdHVyZWRFZmZlY3QiLCJjZiIsImRmIiwicGF5bG9hZCIsIm5leHQiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImpmIiwia2YiLCJyIiwibGYiLCJtZiIsIm5mIiwic3RhY2siLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwiX2NvbnRleHQiLCJfY3VycmVudFZhbHVlIiwidGYiLCJ1ZiIsInZmIiwid2YiLCJMIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJkb2N1bWVudEVsZW1lbnQiLCJ0YWdOYW1lIiwiQmYiLCJDZiIsIkRmIiwiRWYiLCJyZWZzIiwiRmYiLCJKZiIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJlbnF1ZXVlU2V0U3RhdGUiLCJHZiIsIkhmIiwiSWYiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiS2YiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIkxmIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJNZiIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsIk5mIiwiT2YiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiUGYiLCJRZiIsIk1hcCIsIkEiLCJTIiwiQiIsInUiLCJxIiwidiIsImRlbGV0ZSIsIlAiLCJkb25lIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsInNnIiwidGciLCJjZyIsIlJlYWN0Q3VycmVudE93bmVyIiwiTSIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJ1cGRhdGVyIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwiaWciLCJqZyIsInBlbmRpbmdDb250ZXh0IiwibmciLCJkZWZhdWx0UHJvcHMiLCJxZyIsInVnIiwiY29uc29sZSIsImVycm9yIiwic2V0VGltZW91dCIsInZnIiwid2ciLCJ4ZyIsInlnIiwiemciLCJBZyIsImluc2VydEJlZm9yZSIsIm9uY2xpY2siLCJCZyIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJDZyIsIkRnIiwiRWciLCJjb21wb25lbnREaWRDYXRjaCIsIkZnIiwiYWRkIiwiY29tcG9uZW50U3RhY2siLCJHZyIsIkhnIiwicmVhZENvbnRleHQiLCJJZyIsIkpnIiwiS2ciLCJMZyIsIk4iLCJNZyIsIk8iLCJOZyIsIlEiLCJPZyIsIlBnIiwiUWciLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsIlJnIiwiYmciLCJvZyIsImh5ZHJhdGUiLCJoaWRkZW4iLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJwZyIsIlNnIiwiY3VycmVudERpc3BhdGNoZXIiLCJwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWUiLCJUZyIsImhhcyIsImZpbmlzaGVkV29yayIsImdldERlcml2ZWRTdGF0ZUZyb21DYXRjaCIsIlVnIiwiVmciLCJuZXh0U2NoZWR1bGVkUm9vdCIsIlQiLCJVIiwiViIsIlciLCJXZyIsIlkiLCJaIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiY2giLCJkaCIsImVoIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsInVuc3RhYmxlX25vdyIsImtoIiwibGgiLCJtaCIsIm9oIiwidW5zdGFibGVfY2FuY2VsU2NoZWR1bGVkV29yayIsInVuc3RhYmxlX3NjaGVkdWxlV29yayIsInBoIiwidGltZW91dCIsInFoIiwiZGlkVGltZW91dCIsIl9vbkNvbXBsZXRlIiwicmgiLCJmaXJzdEJhdGNoIiwiX2V4cGlyYXRpb25UaW1lIiwiX2RlZmVyIiwicmFuZ2VDb3VudCIsIlhhIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlIiLCJ5aCIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwidyIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiU2EiLCJvYyIsIlgiLCJJaCIsIkpoIiwia2ciLCJsZyIsIktoIiwiQWMiLCJtZyIsIlBkIiwiTGgiLCJ0aW1lUmVtYWluaW5nIiwic2giLCJ0aCIsInVoIiwid2giLCJ2aCIsInhoIiwiemgiLCJBaCIsIkJoIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJDaCIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJEaCIsInRpbWVvdXRIYW5kbGUiLCJfaW50ZXJuYWxSb290IiwiRWgiLCJHaCIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJsZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJoYXNBdHRyaWJ1dGUiLCJGaCIsIkhoIiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJNaCIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJSZSIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiYnVuZGxlVHlwZSIsInZlcnNpb24iLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiTmgiLCJPaCIsImNoZWNrRENFIiwiX3JlYWN0U3dpcGUiLCJvYmoiLCJfcmVhY3RTd2lwZTIiLCJfX2VzTW9kdWxlIiwiX3JlYWN0IiwiX3Byb3BUeXBlcyIsInNldEhhc1N1cHBvcnRUb0NhcHR1cmVPcHRpb24iLCJfcmVhY3QyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9wcm9wVHlwZXMyIiwiX2V4dGVuZHMiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiX2NyZWF0ZUNsYXNzIiwiZGVmaW5lUHJvcGVydGllcyIsImRlc2NyaXB0b3IiLCJ3cml0YWJsZSIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwic3VwcG9ydHNDYXB0dXJlT3B0aW9uIiwiaGFzU3VwcG9ydCIsImdldFNhZmVFdmVudEhhbmRsZXJPcHRzIiwiY2FwdHVyZSIsImdldFBvc2l0aW9uIiwiX2V2ZW50JHRvdWNoZXMkIiwiUmVhY3RTd2lwZSIsImdldFByb3RvdHlwZU9mIiwiX2hhbmRsZVN3aXBlU3RhcnQiLCJfaGFuZGxlU3dpcGVNb3ZlIiwiX2hhbmRsZVN3aXBlRW5kIiwiX29uTW91c2VEb3duIiwiX29uTW91c2VNb3ZlIiwiX29uTW91c2VVcCIsIl9zZXRTd2lwZXJSZWYiLCJfaW5oZXJpdHMiLCJzd2lwZXIiLCJwYXNzaXZlIiwiYWxsb3dNb3VzZUV2ZW50cyIsIm1vdXNlRG93biIsIl9nZXRQb3NpdGlvbiIsIm1vdmVTdGFydCIsIm9uU3dpcGVTdGFydCIsIl9nZXRQb3NpdGlvbjIiLCJtb3ZpbmciLCJvblN3aXBlTW92ZSIsIm1vdmVQb3NpdGlvbiIsIm9uU3dpcGVFbmQiLCJ0b2xlcmFuY2UiLCJvblN3aXBlTGVmdCIsIm9uU3dpcGVSaWdodCIsIm9uU3dpcGVVcCIsIm9uU3dpcGVEb3duIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwib25Nb3VzZURvd24iLCJvblRvdWNoU3RhcnQiLCJvblRvdWNoRW5kIiwicHJvcFR5cGVzIiwiUmVhY3QiLCJBcHBDb250YWluZXIiLCJ3YXJuQWJvdXRITVJEaXNhYmxlZCIsIm9ubHkiLCJob3QiLCJzaG91bGRXcmFwV2l0aEFwcENvbnRhaW5lciIsIkFzeW5jTW9kZSIsIkNvbmN1cnJlbnRNb2RlIiwiQ29udGV4dENvbnN1bWVyIiwiQ29udGV4dFByb3ZpZGVyIiwiRWxlbWVudCIsIkZvcndhcmRSZWYiLCJGcmFnbWVudCIsIkxhenkiLCJNZW1vIiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzTWVtbyIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJwb3NpdGlvbiIsIm1ldHJpYyIsImF4aXMiLCJwb3NpdGlvblBlcmNlbnQiLCJfdHlwZW9mIiwiY2FjaGUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJkZXNjIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfcmVhY3REb20iLCJfcmVhY3RFYXN5U3dpcGUiLCJfY3NzQ2xhc3NlcyIsIl9DU1NUcmFuc2xhdGUiLCJfVGh1bWJzIiwiX2RvY3VtZW50IiwiX3dpbmRvdyIsIldlYWtNYXAiLCJvd25LZXlzIiwiZW51bWVyYWJsZU9ubHkiLCJzeW0iLCJfb2JqZWN0U3ByZWFkIiwiX2RlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsIl9nZXRQcm90b3R5cGVPZiIsIm5vb3AiLCJDYXJvdXNlbCIsIkRlcml2ZWQiLCJoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX3N1cGVyIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsInNoYW0iLCJQcm94eSIsIl9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJTdXBlciIsIk5ld1RhcmdldCIsInRodW1ic1JlZiIsImNhcm91c2VsV3JhcHBlclJlZiIsImxpc3RSZWYiLCJpdGVtc1JlZiIsImNvdW50IiwiY2xlYXJBdXRvUGxheSIsInRpbWVyIiwiaW5jcmVtZW50IiwiY2xlYXJUaW1lb3V0IiwiaXNNb3VzZUVudGVyZWQiLCJpc0ZvY3VzV2l0aGluVGhlQ2Fyb3VzZWwiLCJpc0hvcml6b250YWwiLCJwcmV2S2V5IiwiZGVjcmVtZW50IiwiaW5pdGlhbGl6ZWQiLCJmaXJzdEl0ZW0iLCJpdGVtU2l6ZSIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwidXBkYXRlU2l6ZXMiLCJoYXNNb3VudCIsImNhbmNlbENsaWNrIiwib25DbGlja0l0ZW0iLCJzZWxlY3RlZEl0ZW0iLCJvbkNoYW5nZSIsIm9uQ2xpY2tUaHVtYiIsIm1vdmVUbyIsInN3aXBpbmciLCJzd2lwZU1vdmVtZW50U3RhcnRlZCIsImNoaWxkcmVuTGVuZ3RoIiwiY3VycmVudFBvc2l0aW9uIiwiZmluYWxCb3VuZHJ5IiwiYXhpc0RlbHRhIiwiaGFuZGxlZERlbHRhIiwiaGFzTW92ZWQiLCJhYnMiLCJzd2lwZVNjcm9sbFRvbGVyYW5jZSIsInByZXZlbnRNb3ZlbWVudFVudGlsU3dpcGVTY3JvbGxUb2xlcmFuY2UiLCJzZXRQb3NpdGlvbiIsImZvcmNlUmVmbG93IiwiSFRNTEVsZW1lbnQiLCJwcm9wIiwib2Zmc2V0TGVmdCIsInBvc2l0aW9ucyIsImZyb21Td2lwZSIsImxhc3RQb3NpdGlvbiIsIm5lZWRDbG9uZWRTbGlkZSIsIm9sZFBvc2l0aW9uIiwiY2VudGVyTW9kZSIsImNlbnRlclNsaWRlUGVyY2VudGFnZSIsInNlbGVjdEl0ZW0iLCJyZXNldEF1dG9QbGF5IiwiZW11bGF0ZVRvdWNoIiwibmV3SW5kZXgiLCJpc0tleWJvYXJkRXZlbnQiLCJoYW5kbGVPbkNoYW5nZSIsInRvQXJyYXkiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInNsaWRlSW1hZ2VzIiwiY29tcGxldGUiLCJvbkltYWdlTG9hZCIsImZvcmNlVXBkYXRlIiwic2V0dXBDYXJvdXNlbCIsInByZXZQcm9wcyIsInByZXZTdGF0ZSIsImZvcmNlRm9jdXMiLCJyZXNldFBvc2l0aW9uIiwic2V0dXBBdXRvUGxheSIsImRlc3Ryb3lBdXRvUGxheSIsImRlc3Ryb3lDYXJvdXNlbCIsImJpbmRFdmVudHMiLCJpbml0aWFsSW1hZ2UiLCJnZXRJbml0aWFsSW1hZ2UiLCJzZXRNb3VudFN0YXRlIiwidW5iaW5kRXZlbnRzIiwiY2Fyb3VzZWxXcmFwcGVyIiwic3RvcE9uSG92ZXIiLCJzdGFydE9uTGVhdmUiLCJ1c2VLZXlib2FyZEFycm93cyIsIm5hdmlnYXRlV2l0aEtleWJvYXJkIiwiX3RoaXMkY2Fyb3VzZWxXcmFwcGVyIiwiaXNDbG9uZSIsIl90aGlzMyIsInNsaWRlUHJvcHMiLCJzZXRJdGVtc1JlZiIsIklURU0iLCJoYW5kbGVDbGlja0l0ZW0iLCJleHRyYVByb3BzIiwibWluV2lkdGgiLCJyZW5kZXJJdGVtIiwiaXNTZWxlY3RlZCIsIl90aGlzNCIsImxhYmVscyIsInJlbmRlckluZGljYXRvciIsIl8iLCJjaGFuZ2VJdGVtIiwic3RhdHVzRm9ybWF0dGVyIiwic2V0VGh1bWJzUmVmIiwib25TZWxlY3RJdGVtIiwiaGFuZGxlQ2xpY2tUaHVtYiIsInRodW1iV2lkdGgiLCJyZW5kZXJUaHVtYnMiLCJfdGhpczUiLCJpc1N3aXBlYWJsZSIsInN3aXBlYWJsZSIsImNhblNob3dBcnJvd3MiLCJzaG93QXJyb3dzIiwiaGFzUHJldiIsImhhc05leHQiLCJpdGVtTGlzdFN0eWxlcyIsInRyYW5zZm9ybVByb3AiLCJXZWJraXRUcmFuc2Zvcm0iLCJNb3pUcmFuc2Zvcm0iLCJNc1RyYW5zZm9ybSIsIk9UcmFuc2Zvcm0iLCJ0cmFuc2Zvcm0iLCJtc1RyYW5zZm9ybSIsIldlYmtpdFRyYW5zaXRpb25EdXJhdGlvbiIsIk1velRyYW5zaXRpb25EdXJhdGlvbiIsIk1zVHJhbnNpdGlvbkR1cmF0aW9uIiwiT1RyYW5zaXRpb25EdXJhdGlvbiIsInRyYW5zaXRpb25EdXJhdGlvbiIsIm1zVHJhbnNpdGlvbkR1cmF0aW9uIiwiaXRlbXNDbG9uZSIsInJlbmRlckl0ZW1zIiwiZmlyc3RDbG9uZSIsInNoaWZ0IiwibGFzdENsb25lIiwic3dpcGVyUHJvcHMiLCJTTElERVIiLCJjb250YWluZXJTdHlsZXMiLCJvblN3aXBlRm9yd2FyZCIsIm9uU3dpcGVCYWNrd2FyZHMiLCJkeW5hbWljSGVpZ2h0IiwiaXRlbUhlaWdodCIsImdldFZhcmlhYmxlSXRlbUhlaWdodCIsInZlcnRpY2FsU3dpcGUiLCJST09UIiwic2V0Q2Fyb3VzZWxXcmFwcGVyUmVmIiwiQ0FST1VTRUwiLCJyZW5kZXJDb250cm9scyIsInJlbmRlckFycm93UHJldiIsIm9uQ2xpY2tQcmV2IiwibGVmdEFycm93IiwiV1JBUFBFUiIsInNldExpc3RSZWYiLCJyZW5kZXJBcnJvd05leHQiLCJvbkNsaWNrTmV4dCIsInJpZ2h0QXJyb3ciLCJyZW5kZXJTdGF0dXMiLCJvbkNsaWNrSGFuZGxlciIsImxhYmVsIiwiQVJST1dfUFJFViIsIkFSUk9XX05FWFQiLCJET1QiLCJvbktleURvd24iLCJyb2xlIiwiaW1hZ2VzIiwiZmluZCIsIndhcm4iLCJ0b3RhbCIsIl9kaW1lbnNpb25zIiwiVGh1bWJzIiwiaXRlbXNXcmFwcGVyUmVmIiwiaXRlbXNMaXN0UmVmIiwid3JhcHBlclNpemUiLCJvdXRlcldpZHRoIiwidmlzaWJsZUl0ZW1zIiwiZmxvb3IiLCJfc3RhdGUiLCJnZXRGaXJzdEl0ZW0iLCJzZXR1cFRodW1icyIsImRlc3Ryb3lUaHVtYnMiLCJpdGVtQ2xhc3MiLCJ0aHVtYlByb3BzIiwic2V0SXRlbXNXcmFwcGVyUmVmIiwic2xpZGVSaWdodCIsInNsaWRlTGVmdCIsInNldEl0ZW1zTGlzdFJlZiIsIl9jbGFzc25hbWVzIiwiX2RlZmF1bHQiLCJjdXN0b21DbGFzc05hbWUiLCJpc1NsaWRlciIsImNhcm91c2VsIiwiaXNTd2lwaW5nIiwidGh1bWJzIiwic2xpZGVyIiwiYW5pbWF0ZWQiLCJwcmV2aW91cyIsInRodW1iIiwic2xpZGUiLCJkb3QiLCJlbCIsIm9mZnNldFdpZHRoIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInBhcnNlSW50IiwibWFyZ2luTGVmdCIsIm1hcmdpblJpZ2h0IiwiX0Nhcm91c2VsIiwicmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjb250ZXh0VHlwZSIsImdldERlZmF1bHRQcm9wcyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsIm1peGlucyIsIktOT1dOX1NUQVRJQ1MiLCJjYWxsZXIiLCJjYWxsZWUiLCJhcml0eSIsIk1FTU9fU1RBVElDUyIsImNvbXBhcmUiLCJUWVBFX1NUQVRJQ1MiLCJnZXRTdGF0aWNzIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJ0YXJnZXRTdGF0aWNzIiwic291cmNlU3RhdGljcyIsImFyciIsImlzYXJyYXkiLCJwYXRoVG9SZWdleHAiLCJSZWdFeHAiLCJncm91cHMiLCJkZWxpbWl0ZXIiLCJvcHRpb25hbCIsInBhcnRpYWwiLCJhc3RlcmlzayIsInBhdHRlcm4iLCJhdHRhY2hLZXlzIiwicmVnZXhwVG9SZWdleHAiLCJwYXJ0cyIsImZsYWdzIiwiYXJyYXlUb1JlZ2V4cCIsInRva2Vuc1RvUmVnRXhwIiwicGFyc2UiLCJzdHJpbmdUb1JlZ2V4cCIsImNvbXBpbGUiLCJzdHIiLCJ0b2tlbnNUb0Z1bmN0aW9uIiwiUEFUSF9SRUdFWFAiLCJyZXMiLCJ0b2tlbnMiLCJkZWZhdWx0RGVsaW1pdGVyIiwiZXNjYXBlZCIsImdyb3VwIiwibW9kaWZpZXIiLCJlc2NhcGVHcm91cCIsImVzY2FwZVN0cmluZyIsImVuY29kZVVSSUNvbXBvbmVudFByZXR0eSIsImVuY29kZVVSSSIsImNoYXJDb2RlQXQiLCJtYXRjaGVzIiwib3B0cyIsImVuY29kZSIsInByZXR0eSIsInRva2VuIiwic2VnbWVudCIsImoiLCJyb3V0ZSIsImVuZHNXaXRoRGVsaW1pdGVyIiwiX19zZWxmIiwiX19zb3VyY2UiLCJrZXlQcmVmaXgiLCJjcmVhdGVSZWYiLCJQdXJlQ29tcG9uZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwidW5zdGFibGVfcmVhZCIsInVuc3RhYmxlX0FzeW5jTW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwicGVyZm9ybWFuY2UiLCJ0aW1lc091dEF0IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJfc2NoZWRNb2NrIiwicG9zdE1lc3NhZ2UiLCJ1cGRhdGUiLCJsb2NhbHMiLCJhY2NlcHQiLCJuZXdDb250ZW50IiwiaWR4IiwiZGlzcG9zZSIsInN0eWxlc0luRG9tIiwiaXNPbGRJRSIsImFsbCIsImF0b2IiLCJnZXRUYXJnZXQiLCJwYXJlbnQiLCJnZXRFbGVtZW50Iiwic3R5bGVUYXJnZXQiLCJoZWFkIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInN0eWxlc0luc2VydGVkQXRUb3AiLCJmaXhVcmxzIiwiYWRkU3R5bGVzVG9Eb20iLCJzdHlsZXMiLCJkb21TdHlsZSIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiY3NzIiwibWVkaWEiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJpbnNlcnRJbnRvIiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsImJlZm9yZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInNwbGljZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImF0dHJzIiwibm9uY2UiLCJhZGRBdHRycyIsInJlbW92ZSIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsImNyZWF0ZUxpbmtFbGVtZW50IiwidXBkYXRlTGluayIsImFwcGx5VG9UYWciLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiQm9vbGVhbiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJhdXRvRml4VXJscyIsImNvbnZlcnRUb0Fic29sdXRlVXJscyIsImJsb2IiLCJvbGRTcmMiLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCIkMSIsIndlYnBhY2tDb250ZXh0IiwicmVxIiwid2VicGFja0NvbnRleHRSZXNvbHZlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImNvZGUiLCJyZXNvbHZlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJsb2FkZWQiLCJleGVjT3B0aW9ucyIsImZhY3RvcnkiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwicmVxdWlyZSIsImdldHRlciIsImRlZmluaXRpb24iLCJodSIsImNodW5rSWQiLCJobXJGIiwiRnVuY3Rpb24iLCJobWQiLCJzY3JpcHQiLCJuZWVkQXR0YWNoIiwic2NyaXB0cyIsImNoYXJzZXQiLCJvblNjcmlwdENvbXBsZXRlIiwicHJldiIsIm9uZXJyb3IiLCJvbmxvYWQiLCJkb25lRm5zIiwiY3VycmVudENoaWxkTW9kdWxlIiwiYmxvY2tpbmdQcm9taXNlcyIsImN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzIiwicXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzIiwiY3VycmVudE1vZHVsZURhdGEiLCJpbnN0YWxsZWRNb2R1bGVzIiwiY3VycmVudFBhcmVudHMiLCJyZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMiLCJjdXJyZW50U3RhdHVzIiwic2V0U3RhdHVzIiwibmV3U3RhdHVzIiwid2FpdEZvckJsb2NraW5nUHJvbWlzZXMiLCJibG9ja2VyIiwiUHJvbWlzZSIsImhvdENoZWNrIiwiYXBwbHlPblVwZGF0ZSIsImhtck0iLCJhcHBseUludmFsaWRhdGVkTW9kdWxlcyIsInVwZGF0ZWRNb2R1bGVzIiwiaG1yQyIsInByb21pc2VzIiwiaW50ZXJuYWxBcHBseSIsImhvdEFwcGx5IiwicmVzdWx0cyIsImVycm9ycyIsInJlcG9ydEVycm9yIiwib3V0ZGF0ZWRNb2R1bGVzIiwiaG1ySSIsImhtckQiLCJfbWFpbiIsInJlcXVlc3QiLCJhY3RpdmUiLCJwYXJlbnRzIiwiY3JlYXRlUHJvcGVydHlEZXNjcmlwdG9yIiwicHJvbWlzZSIsInRyYWNrQmxvY2tpbmdQcm9taXNlIiwiY3JlYXRlUmVxdWlyZSIsIl9hY2NlcHRlZERlcGVuZGVuY2llcyIsIl9hY2NlcHRlZEVycm9ySGFuZGxlcnMiLCJfZGVjbGluZWREZXBlbmRlbmNpZXMiLCJfc2VsZkFjY2VwdGVkIiwiX3NlbGZEZWNsaW5lZCIsIl9zZWxmSW52YWxpZGF0ZWQiLCJfZGlzcG9zZUhhbmRsZXJzIiwiX3JlcXVpcmVTZWxmIiwiZGVwIiwiZXJyb3JIYW5kbGVyIiwiZGVjbGluZSIsImFkZERpc3Bvc2VIYW5kbGVyIiwicmVtb3ZlRGlzcG9zZUhhbmRsZXIiLCJpbnZhbGlkYXRlIiwiY2hlY2siLCJzdGF0dXMiLCJhZGRTdGF0dXNIYW5kbGVyIiwicmVtb3ZlU3RhdHVzSGFuZGxlciIsImN1cnJlbnRVcGRhdGVDaHVua3MiLCJjdXJyZW50VXBkYXRlIiwiY3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MiLCJjdXJyZW50VXBkYXRlUnVudGltZSIsImluc3RhbGxlZENodW5rcyIsIjE3OSIsIndhaXRpbmdVcGRhdGVSZXNvbHZlcyIsImxvYWRVcGRhdGVDaHVuayIsInJlamVjdCIsImVycm9yVHlwZSIsInJlYWxTcmMiLCJhcHBseUhhbmRsZXIiLCJnZXRBZmZlY3RlZE1vZHVsZUVmZmVjdHMiLCJ1cGRhdGVNb2R1bGVJZCIsIm91dGRhdGVkRGVwZW5kZW5jaWVzIiwicXVldWUiLCJjaGFpbiIsInF1ZXVlSXRlbSIsInBhcmVudElkIiwiYWRkQWxsVG9TZXQiLCJqc29ucEhtciIsImFwcGxpZWRVcGRhdGUiLCJ3YXJuVW5leHBlY3RlZFJlcXVpcmUiLCJuZXdNb2R1bGVGYWN0b3J5IiwiYWJvcnRFcnJvciIsImRvQXBwbHkiLCJkb0Rpc3Bvc2UiLCJjaGFpbkluZm8iLCJvbkRlY2xpbmVkIiwiaWdub3JlRGVjbGluZWQiLCJvblVuYWNjZXB0ZWQiLCJpZ25vcmVVbmFjY2VwdGVkIiwib25BY2NlcHRlZCIsIm9uRGlzcG9zZWQiLCJtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyIsIm91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyIsIm91dGRhdGVkTW9kdWxlSWQiLCJkZXBlbmRlbmN5IiwiZGlzcG9zZUhhbmRsZXJzIiwiY2FsbGJhY2tzIiwiZXJyb3JIYW5kbGVycyIsImRlcGVuZGVuY2llc0ZvckNhbGxiYWNrcyIsImFjY2VwdENhbGxiYWNrIiwiZGVwZW5kZW5jeUlkIiwiZXJyMiIsIm9uRXJyb3JlZCIsIm9yaWdpbmFsRXJyb3IiLCJpZ25vcmVFcnJvcmVkIiwibW9yZU1vZHVsZXMiLCJydW50aW1lIiwianNvbnAiLCJhcHBseUhhbmRsZXJzIiwiY2h1bmtJZHMiLCJyZW1vdmVkQ2h1bmtzIiwicmVtb3ZlZE1vZHVsZXMiLCJ1cGRhdGVkTW9kdWxlc0xpc3QiLCJmZXRjaCIsInJlc3BvbnNlIiwic3RhdHVzVGV4dCIsImpzb24iXSwibWFwcGluZ3MiOiI7VUFBSUEsRUFDQUMsRSxpRkNEVyxTQUFTQyxFQUFnQkMsRUFBR0MsR0FNekMsT0FMQUYsRUFBa0JHLE9BQU9DLGdCQUFrQixTQUF5QkgsRUFBR0MsR0FFckUsT0FEQUQsRUFBRUksVUFBWUgsRUFDUEQsSUFHY0EsRUFBR0MsR0NMYixTQUFTSSxFQUFlQyxFQUFVQyxHQUMvQ0QsRUFBU0UsVUFBWU4sT0FBT08sT0FBT0YsRUFBV0MsV0FDOUNGLEVBQVNFLFVBQVVFLFlBQWNKLEVBQ2pDLEVBQWVBLEVBQVVDLEcsdUJDSlosU0FBUyxJQWV0QixPQWRBLEVBQVdMLE9BQU9TLFFBQVUsU0FBVUMsR0FDcEMsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlDLFVBQVVDLE9BQVFGLElBQUssQ0FDekMsSUFBSUcsRUFBU0YsVUFBVUQsR0FFdkIsSUFBSyxJQUFJSSxLQUFPRCxFQUNWZCxPQUFPTSxVQUFVVSxlQUFlQyxLQUFLSCxFQUFRQyxLQUMvQ0wsRUFBT0ssR0FBT0QsRUFBT0MsSUFLM0IsT0FBT0wsSUFHT1EsTUFBTUMsS0FBTVAsV0NmOUIsU0FBU1EsRUFBV0MsR0FDbEIsTUFBOEIsTUFBdkJBLEVBQVNDLE9BQU8sR0FJekIsU0FBU0MsRUFBVUMsRUFBTUMsR0FDdkIsSUFBSyxJQUFJZCxFQUFJYyxFQUFPQyxFQUFJZixFQUFJLEVBQUdnQixFQUFJSCxFQUFLWCxPQUFRYSxFQUFJQyxFQUFHaEIsR0FBSyxFQUFHZSxHQUFLLEVBQ2xFRixFQUFLYixHQUFLYSxFQUFLRSxHQUdqQkYsRUFBS0ksTUNFUCxRQVZBLFNBQW1CQyxFQUFXQyxHQUMxQixJQUFJRCxFQUlBLE1BQU0sSUFBSUUsTUFOTCxxQkNLYixTQUFTQyxFQUFnQkMsR0FDdkIsTUFBMEIsTUFBbkJBLEVBQUtYLE9BQU8sR0FBYVcsRUFBTyxJQUFN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RUFBb0IsTyIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaW5Qcm9ncmVzcyA9IHt9O1xudmFyIGRhdGFXZWJwYWNrUHJlZml4ID0gXCJtcnNwZXJyeS5naXRodWIuaW86XCI7XG4vLyBsb2FkU2NyaXB0IGZ1bmN0aW9uIHRvIGxvYWQgYSBzY3JpcHQgdmlhIHNjcmlwdCB0YWdcbl9fd2VicGFja19yZXF1aXJlX18ubCA9ICh1cmwsIGRvbmUsIGtleSwgY2h1bmtJZCkgPT4ge1xuXHRpZihpblByb2dyZXNzW3VybF0pIHsgaW5Qcm9ncmVzc1t1cmxdLnB1c2goZG9uZSk7IHJldHVybjsgfVxuXHR2YXIgc2NyaXB0LCBuZWVkQXR0YWNoO1xuXHRpZihrZXkgIT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNjcmlwdHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBzID0gc2NyaXB0c1tpXTtcblx0XHRcdGlmKHMuZ2V0QXR0cmlidXRlKFwic3JjXCIpID09IHVybCB8fCBzLmdldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiKSA9PSBkYXRhV2VicGFja1ByZWZpeCArIGtleSkgeyBzY3JpcHQgPSBzOyBicmVhazsgfVxuXHRcdH1cblx0fVxuXHRpZighc2NyaXB0KSB7XG5cdFx0bmVlZEF0dGFjaCA9IHRydWU7XG5cdFx0c2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG5cblx0XHRzY3JpcHQuY2hhcnNldCA9ICd1dGYtOCc7XG5cdFx0c2NyaXB0LnRpbWVvdXQgPSAxMjA7XG5cdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubmMpIHtcblx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKTtcblx0XHR9XG5cdFx0c2NyaXB0LnNldEF0dHJpYnV0ZShcImRhdGEtd2VicGFja1wiLCBkYXRhV2VicGFja1ByZWZpeCArIGtleSk7XG5cdFx0c2NyaXB0LnNyYyA9IHVybDtcblx0fVxuXHRpblByb2dyZXNzW3VybF0gPSBbZG9uZV07XG5cdHZhciBvblNjcmlwdENvbXBsZXRlID0gKHByZXYsIGV2ZW50KSA9PiB7XG5cdFx0Ly8gYXZvaWQgbWVtIGxlYWtzIGluIElFLlxuXHRcdHNjcmlwdC5vbmVycm9yID0gc2NyaXB0Lm9ubG9hZCA9IG51bGw7XG5cdFx0Y2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuXHRcdHZhciBkb25lRm5zID0gaW5Qcm9ncmVzc1t1cmxdO1xuXHRcdGRlbGV0ZSBpblByb2dyZXNzW3VybF07XG5cdFx0c2NyaXB0LnBhcmVudE5vZGUgJiYgc2NyaXB0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcblx0XHRkb25lRm5zICYmIGRvbmVGbnMuZm9yRWFjaCgoZm4pID0+IChmbihldmVudCkpKTtcblx0XHRpZihwcmV2KSByZXR1cm4gcHJldihldmVudCk7XG5cdH1cblx0O1xuXHR2YXIgdGltZW91dCA9IHNldFRpbWVvdXQob25TY3JpcHRDb21wbGV0ZS5iaW5kKG51bGwsIHVuZGVmaW5lZCwgeyB0eXBlOiAndGltZW91dCcsIHRhcmdldDogc2NyaXB0IH0pLCAxMjAwMDApO1xuXHRzY3JpcHQub25lcnJvciA9IG9uU2NyaXB0Q29tcGxldGUuYmluZChudWxsLCBzY3JpcHQub25lcnJvcik7XG5cdHNjcmlwdC5vbmxvYWQgPSBvblNjcmlwdENvbXBsZXRlLmJpbmQobnVsbCwgc2NyaXB0Lm9ubG9hZCk7XG5cdG5lZWRBdHRhY2ggJiYgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpO1xufTsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn0iLCJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vc2V0UHJvdG90eXBlT2YuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59IiwiZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRobmFtZSkge1xuICByZXR1cm4gcGF0aG5hbWUuY2hhckF0KDApID09PSAnLyc7XG59XG5cbi8vIEFib3V0IDEuNXggZmFzdGVyIHRoYW4gdGhlIHR3by1hcmcgdmVyc2lvbiBvZiBBcnJheSNzcGxpY2UoKVxuZnVuY3Rpb24gc3BsaWNlT25lKGxpc3QsIGluZGV4KSB7XG4gIGZvciAodmFyIGkgPSBpbmRleCwgayA9IGkgKyAxLCBuID0gbGlzdC5sZW5ndGg7IGsgPCBuOyBpICs9IDEsIGsgKz0gMSkge1xuICAgIGxpc3RbaV0gPSBsaXN0W2tdO1xuICB9XG5cbiAgbGlzdC5wb3AoKTtcbn1cblxuLy8gVGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBiYXNlZCBoZWF2aWx5IG9uIG5vZGUncyB1cmwucGFyc2VcbmZ1bmN0aW9uIHJlc29sdmVQYXRobmFtZSh0bywgZnJvbSkge1xuICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkKSBmcm9tID0gJyc7XG5cbiAgdmFyIHRvUGFydHMgPSAodG8gJiYgdG8uc3BsaXQoJy8nKSkgfHwgW107XG4gIHZhciBmcm9tUGFydHMgPSAoZnJvbSAmJiBmcm9tLnNwbGl0KCcvJykpIHx8IFtdO1xuXG4gIHZhciBpc1RvQWJzID0gdG8gJiYgaXNBYnNvbHV0ZSh0byk7XG4gIHZhciBpc0Zyb21BYnMgPSBmcm9tICYmIGlzQWJzb2x1dGUoZnJvbSk7XG4gIHZhciBtdXN0RW5kQWJzID0gaXNUb0FicyB8fCBpc0Zyb21BYnM7XG5cbiAgaWYgKHRvICYmIGlzQWJzb2x1dGUodG8pKSB7XG4gICAgLy8gdG8gaXMgYWJzb2x1dGVcbiAgICBmcm9tUGFydHMgPSB0b1BhcnRzO1xuICB9IGVsc2UgaWYgKHRvUGFydHMubGVuZ3RoKSB7XG4gICAgLy8gdG8gaXMgcmVsYXRpdmUsIGRyb3AgdGhlIGZpbGVuYW1lXG4gICAgZnJvbVBhcnRzLnBvcCgpO1xuICAgIGZyb21QYXJ0cyA9IGZyb21QYXJ0cy5jb25jYXQodG9QYXJ0cyk7XG4gIH1cblxuICBpZiAoIWZyb21QYXJ0cy5sZW5ndGgpIHJldHVybiAnLyc7XG5cbiAgdmFyIGhhc1RyYWlsaW5nU2xhc2g7XG4gIGlmIChmcm9tUGFydHMubGVuZ3RoKSB7XG4gICAgdmFyIGxhc3QgPSBmcm9tUGFydHNbZnJvbVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgIGhhc1RyYWlsaW5nU2xhc2ggPSBsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJyB8fCBsYXN0ID09PSAnJztcbiAgfSBlbHNlIHtcbiAgICBoYXNUcmFpbGluZ1NsYXNoID0gZmFsc2U7XG4gIH1cblxuICB2YXIgdXAgPSAwO1xuICBmb3IgKHZhciBpID0gZnJvbVBhcnRzLmxlbmd0aDsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcGFydCA9IGZyb21QYXJ0c1tpXTtcblxuICAgIGlmIChwYXJ0ID09PSAnLicpIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgIH0gZWxzZSBpZiAocGFydCA9PT0gJy4uJykge1xuICAgICAgc3BsaWNlT25lKGZyb21QYXJ0cywgaSk7XG4gICAgICB1cCsrO1xuICAgIH0gZWxzZSBpZiAodXApIHtcbiAgICAgIHNwbGljZU9uZShmcm9tUGFydHMsIGkpO1xuICAgICAgdXAtLTtcbiAgICB9XG4gIH1cblxuICBpZiAoIW11c3RFbmRBYnMpIGZvciAoOyB1cC0tOyB1cCkgZnJvbVBhcnRzLnVuc2hpZnQoJy4uJyk7XG5cbiAgaWYgKFxuICAgIG11c3RFbmRBYnMgJiZcbiAgICBmcm9tUGFydHNbMF0gIT09ICcnICYmXG4gICAgKCFmcm9tUGFydHNbMF0gfHwgIWlzQWJzb2x1dGUoZnJvbVBhcnRzWzBdKSlcbiAgKVxuICAgIGZyb21QYXJ0cy51bnNoaWZ0KCcnKTtcblxuICB2YXIgcmVzdWx0ID0gZnJvbVBhcnRzLmpvaW4oJy8nKTtcblxuICBpZiAoaGFzVHJhaWxpbmdTbGFzaCAmJiByZXN1bHQuc3Vic3RyKC0xKSAhPT0gJy8nKSByZXN1bHQgKz0gJy8nO1xuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlc29sdmVQYXRobmFtZTtcbiIsInZhciBpc1Byb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nO1xudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICBpZiAoY29uZGl0aW9uKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGlzUHJvZHVjdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKHByZWZpeCArIFwiOiBcIiArIChtZXNzYWdlIHx8ICcnKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbiIsImltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCByZXNvbHZlUGF0aG5hbWUgZnJvbSAncmVzb2x2ZS1wYXRobmFtZSc7XG5pbXBvcnQgdmFsdWVFcXVhbCBmcm9tICd2YWx1ZS1lcXVhbCc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5cbmZ1bmN0aW9uIGFkZExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aCA6ICcvJyArIHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcExlYWRpbmdTbGFzaChwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZW5hbWUocGF0aCwgcHJlZml4KSB7XG4gIHJldHVybiBwYXRoLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihwcmVmaXgudG9Mb3dlckNhc2UoKSkgPT09IDAgJiYgJy8/IycuaW5kZXhPZihwYXRoLmNoYXJBdChwcmVmaXgubGVuZ3RoKSkgIT09IC0xO1xufVxuZnVuY3Rpb24gc3RyaXBCYXNlbmFtZShwYXRoLCBwcmVmaXgpIHtcbiAgcmV0dXJuIGhhc0Jhc2VuYW1lKHBhdGgsIHByZWZpeCkgPyBwYXRoLnN1YnN0cihwcmVmaXgubGVuZ3RoKSA6IHBhdGg7XG59XG5mdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQocGF0aC5sZW5ndGggLSAxKSA9PT0gJy8nID8gcGF0aC5zbGljZSgwLCAtMSkgOiBwYXRoO1xufVxuZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgdmFyIHBhdGhuYW1lID0gcGF0aCB8fCAnLyc7XG4gIHZhciBzZWFyY2ggPSAnJztcbiAgdmFyIGhhc2ggPSAnJztcbiAgdmFyIGhhc2hJbmRleCA9IHBhdGhuYW1lLmluZGV4T2YoJyMnKTtcblxuICBpZiAoaGFzaEluZGV4ICE9PSAtMSkge1xuICAgIGhhc2ggPSBwYXRobmFtZS5zdWJzdHIoaGFzaEluZGV4KTtcbiAgICBwYXRobmFtZSA9IHBhdGhuYW1lLnN1YnN0cigwLCBoYXNoSW5kZXgpO1xuICB9XG5cbiAgdmFyIHNlYXJjaEluZGV4ID0gcGF0aG5hbWUuaW5kZXhPZignPycpO1xuXG4gIGlmIChzZWFyY2hJbmRleCAhPT0gLTEpIHtcbiAgICBzZWFyY2ggPSBwYXRobmFtZS5zdWJzdHIoc2VhcmNoSW5kZXgpO1xuICAgIHBhdGhuYW1lID0gcGF0aG5hbWUuc3Vic3RyKDAsIHNlYXJjaEluZGV4KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgIHNlYXJjaDogc2VhcmNoID09PSAnPycgPyAnJyA6IHNlYXJjaCxcbiAgICBoYXNoOiBoYXNoID09PSAnIycgPyAnJyA6IGhhc2hcbiAgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBhdGgobG9jYXRpb24pIHtcbiAgdmFyIHBhdGhuYW1lID0gbG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBzZWFyY2ggPSBsb2NhdGlvbi5zZWFyY2gsXG4gICAgICBoYXNoID0gbG9jYXRpb24uaGFzaDtcbiAgdmFyIHBhdGggPSBwYXRobmFtZSB8fCAnLyc7XG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoICE9PSAnPycpIHBhdGggKz0gc2VhcmNoLmNoYXJBdCgwKSA9PT0gJz8nID8gc2VhcmNoIDogXCI/XCIgKyBzZWFyY2g7XG4gIGlmIChoYXNoICYmIGhhc2ggIT09ICcjJykgcGF0aCArPSBoYXNoLmNoYXJBdCgwKSA9PT0gJyMnID8gaGFzaCA6IFwiI1wiICsgaGFzaDtcbiAgcmV0dXJuIHBhdGg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBrZXksIGN1cnJlbnRMb2NhdGlvbikge1xuICB2YXIgbG9jYXRpb247XG5cbiAgaWYgKHR5cGVvZiBwYXRoID09PSAnc3RyaW5nJykge1xuICAgIC8vIFR3by1hcmcgZm9ybTogcHVzaChwYXRoLCBzdGF0ZSlcbiAgICBsb2NhdGlvbiA9IHBhcnNlUGF0aChwYXRoKTtcbiAgICBsb2NhdGlvbi5zdGF0ZSA9IHN0YXRlO1xuICB9IGVsc2Uge1xuICAgIC8vIE9uZS1hcmcgZm9ybTogcHVzaChsb2NhdGlvbilcbiAgICBsb2NhdGlvbiA9IF9leHRlbmRzKHt9LCBwYXRoKTtcbiAgICBpZiAobG9jYXRpb24ucGF0aG5hbWUgPT09IHVuZGVmaW5lZCkgbG9jYXRpb24ucGF0aG5hbWUgPSAnJztcblxuICAgIGlmIChsb2NhdGlvbi5zZWFyY2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5zZWFyY2guY2hhckF0KDApICE9PSAnPycpIGxvY2F0aW9uLnNlYXJjaCA9ICc/JyArIGxvY2F0aW9uLnNlYXJjaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uc2VhcmNoID0gJyc7XG4gICAgfVxuXG4gICAgaWYgKGxvY2F0aW9uLmhhc2gpIHtcbiAgICAgIGlmIChsb2NhdGlvbi5oYXNoLmNoYXJBdCgwKSAhPT0gJyMnKSBsb2NhdGlvbi5oYXNoID0gJyMnICsgbG9jYXRpb24uaGFzaDtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9jYXRpb24uaGFzaCA9ICcnO1xuICAgIH1cblxuICAgIGlmIChzdGF0ZSAhPT0gdW5kZWZpbmVkICYmIGxvY2F0aW9uLnN0YXRlID09PSB1bmRlZmluZWQpIGxvY2F0aW9uLnN0YXRlID0gc3RhdGU7XG4gIH1cblxuICB0cnkge1xuICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gZGVjb2RlVVJJKGxvY2F0aW9uLnBhdGhuYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgVVJJRXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBVUklFcnJvcignUGF0aG5hbWUgXCInICsgbG9jYXRpb24ucGF0aG5hbWUgKyAnXCIgY291bGQgbm90IGJlIGRlY29kZWQuICcgKyAnVGhpcyBpcyBsaWtlbHkgY2F1c2VkIGJ5IGFuIGludmFsaWQgcGVyY2VudC1lbmNvZGluZy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG4gIH1cblxuICBpZiAoa2V5KSBsb2NhdGlvbi5rZXkgPSBrZXk7XG5cbiAgaWYgKGN1cnJlbnRMb2NhdGlvbikge1xuICAgIC8vIFJlc29sdmUgaW5jb21wbGV0ZS9yZWxhdGl2ZSBwYXRobmFtZSByZWxhdGl2ZSB0byBjdXJyZW50IGxvY2F0aW9uLlxuICAgIGlmICghbG9jYXRpb24ucGF0aG5hbWUpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gY3VycmVudExvY2F0aW9uLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAobG9jYXRpb24ucGF0aG5hbWUuY2hhckF0KDApICE9PSAnLycpIHtcbiAgICAgIGxvY2F0aW9uLnBhdGhuYW1lID0gcmVzb2x2ZVBhdGhuYW1lKGxvY2F0aW9uLnBhdGhuYW1lLCBjdXJyZW50TG9jYXRpb24ucGF0aG5hbWUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBXaGVuIHRoZXJlIGlzIG5vIHByaW9yIGxvY2F0aW9uIGFuZCBwYXRobmFtZSBpcyBlbXB0eSwgc2V0IGl0IHRvIC9cbiAgICBpZiAoIWxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICBsb2NhdGlvbi5wYXRobmFtZSA9ICcvJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbG9jYXRpb247XG59XG5mdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbChhLCBiKSB7XG4gIHJldHVybiBhLnBhdGhuYW1lID09PSBiLnBhdGhuYW1lICYmIGEuc2VhcmNoID09PSBiLnNlYXJjaCAmJiBhLmhhc2ggPT09IGIuaGFzaCAmJiBhLmtleSA9PT0gYi5rZXkgJiYgdmFsdWVFcXVhbChhLnN0YXRlLCBiLnN0YXRlKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHJhbnNpdGlvbk1hbmFnZXIoKSB7XG4gIHZhciBwcm9tcHQgPSBudWxsO1xuXG4gIGZ1bmN0aW9uIHNldFByb21wdChuZXh0UHJvbXB0KSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhwcm9tcHQgPT0gbnVsbCwgJ0EgaGlzdG9yeSBzdXBwb3J0cyBvbmx5IG9uZSBwcm9tcHQgYXQgYSB0aW1lJykgOiB2b2lkIDA7XG4gICAgcHJvbXB0ID0gbmV4dFByb21wdDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHByb21wdCA9PT0gbmV4dFByb21wdCkgcHJvbXB0ID0gbnVsbDtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBjYWxsYmFjaykge1xuICAgIC8vIFRPRE86IElmIGFub3RoZXIgdHJhbnNpdGlvbiBzdGFydHMgd2hpbGUgd2UncmUgc3RpbGwgY29uZmlybWluZ1xuICAgIC8vIHRoZSBwcmV2aW91cyBvbmUsIHdlIG1heSBlbmQgdXAgaW4gYSB3ZWlyZCBzdGF0ZS4gRmlndXJlIG91dCB0aGVcbiAgICAvLyBiZXN0IHdheSB0byBoYW5kbGUgdGhpcy5cbiAgICBpZiAocHJvbXB0ICE9IG51bGwpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0eXBlb2YgcHJvbXB0ID09PSAnZnVuY3Rpb24nID8gcHJvbXB0KGxvY2F0aW9uLCBhY3Rpb24pIDogcHJvbXB0O1xuXG4gICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBnZXRVc2VyQ29uZmlybWF0aW9uID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgZ2V0VXNlckNvbmZpcm1hdGlvbihyZXN1bHQsIGNhbGxiYWNrKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnQSBoaXN0b3J5IG5lZWRzIGEgZ2V0VXNlckNvbmZpcm1hdGlvbiBmdW5jdGlvbiBpbiBvcmRlciB0byB1c2UgYSBwcm9tcHQgbWVzc2FnZScpIDogdm9pZCAwO1xuICAgICAgICAgIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBSZXR1cm4gZmFsc2UgZnJvbSBhIHRyYW5zaXRpb24gaG9vayB0byBjYW5jZWwgdGhlIHRyYW5zaXRpb24uXG4gICAgICAgIGNhbGxiYWNrKHJlc3VsdCAhPT0gZmFsc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjYWxsYmFjayh0cnVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgbGlzdGVuZXJzID0gW107XG5cbiAgZnVuY3Rpb24gYXBwZW5kTGlzdGVuZXIoZm4pIHtcbiAgICB2YXIgaXNBY3RpdmUgPSB0cnVlO1xuXG4gICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICBpZiAoaXNBY3RpdmUpIGZuLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQWN0aXZlID0gZmFsc2U7XG4gICAgICBsaXN0ZW5lcnMgPSBsaXN0ZW5lcnMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtICE9PSBsaXN0ZW5lcjtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlMaXN0ZW5lcnMoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uIChsaXN0ZW5lcikge1xuICAgICAgcmV0dXJuIGxpc3RlbmVyLmFwcGx5KHZvaWQgMCwgYXJncyk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNldFByb21wdDogc2V0UHJvbXB0LFxuICAgIGNvbmZpcm1UcmFuc2l0aW9uVG86IGNvbmZpcm1UcmFuc2l0aW9uVG8sXG4gICAgYXBwZW5kTGlzdGVuZXI6IGFwcGVuZExpc3RlbmVyLFxuICAgIG5vdGlmeUxpc3RlbmVyczogbm90aWZ5TGlzdGVuZXJzXG4gIH07XG59XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuZnVuY3Rpb24gZ2V0Q29uZmlybWF0aW9uKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKHdpbmRvdy5jb25maXJtKG1lc3NhZ2UpKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1hbGVydFxufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIGlzIHN1cHBvcnRlZC4gVGFrZW4gZnJvbSBNb2Rlcm5penIuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogaHR0cHM6Ly9naXRodWIuY29tL01vZGVybml6ci9Nb2Rlcm5penIvYmxvYi9tYXN0ZXIvZmVhdHVyZS1kZXRlY3RzL2hpc3RvcnkuanNcbiAqIGNoYW5nZWQgdG8gYXZvaWQgZmFsc2UgbmVnYXRpdmVzIGZvciBXaW5kb3dzIFBob25lczogaHR0cHM6Ly9naXRodWIuY29tL3JlYWN0anMvcmVhY3Qtcm91dGVyL2lzc3Vlcy81ODZcbiAqL1xuXG5mdW5jdGlvbiBzdXBwb3J0c0hpc3RvcnkoKSB7XG4gIHZhciB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O1xuICBpZiAoKHVhLmluZGV4T2YoJ0FuZHJvaWQgMi4nKSAhPT0gLTEgfHwgdWEuaW5kZXhPZignQW5kcm9pZCA0LjAnKSAhPT0gLTEpICYmIHVhLmluZGV4T2YoJ01vYmlsZSBTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignQ2hyb21lJykgPT09IC0xICYmIHVhLmluZGV4T2YoJ1dpbmRvd3MgUGhvbmUnKSA9PT0gLTEpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHdpbmRvdy5oaXN0b3J5ICYmICdwdXNoU3RhdGUnIGluIHdpbmRvdy5oaXN0b3J5O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYnJvd3NlciBmaXJlcyBwb3BzdGF0ZSBvbiBoYXNoIGNoYW5nZS5cbiAqIElFMTAgYW5kIElFMTEgZG8gbm90LlxuICovXG5cbmZ1bmN0aW9uIHN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdUcmlkZW50JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIGZhbHNlIGlmIHVzaW5nIGdvKG4pIHdpdGggaGFzaCBoaXN0b3J5IGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQuXG4gKi9cblxuZnVuY3Rpb24gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKSB7XG4gIHJldHVybiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgYSBnaXZlbiBwb3BzdGF0ZSBldmVudCBpcyBhbiBleHRyYW5lb3VzIFdlYktpdCBldmVudC5cbiAqIEFjY291bnRzIGZvciB0aGUgZmFjdCB0aGF0IENocm9tZSBvbiBpT1MgZmlyZXMgcmVhbCBwb3BzdGF0ZSBldmVudHNcbiAqIGNvbnRhaW5pbmcgdW5kZWZpbmVkIHN0YXRlIHdoZW4gcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlxuICovXG5cbmZ1bmN0aW9uIGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpIHtcbiAgcmV0dXJuIGV2ZW50LnN0YXRlID09PSB1bmRlZmluZWQgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdDcmlPUycpID09PSAtMTtcbn1cblxudmFyIFBvcFN0YXRlRXZlbnQgPSAncG9wc3RhdGUnO1xudmFyIEhhc2hDaGFuZ2VFdmVudCA9ICdoYXNoY2hhbmdlJztcblxuZnVuY3Rpb24gZ2V0SGlzdG9yeVN0YXRlKCkge1xuICB0cnkge1xuICAgIHJldHVybiB3aW5kb3cuaGlzdG9yeS5zdGF0ZSB8fCB7fTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElFIDExIHNvbWV0aW1lcyB0aHJvd3Mgd2hlbiBhY2Nlc3Npbmcgd2luZG93Lmhpc3Rvcnkuc3RhdGVcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvaGlzdG9yeS9wdWxsLzI4OVxuICAgIHJldHVybiB7fTtcbiAgfVxufVxuLyoqXG4gKiBDcmVhdGVzIGEgaGlzdG9yeSBvYmplY3QgdGhhdCB1c2VzIHRoZSBIVE1MNSBoaXN0b3J5IEFQSSBpbmNsdWRpbmdcbiAqIHB1c2hTdGF0ZSwgcmVwbGFjZVN0YXRlLCBhbmQgdGhlIHBvcHN0YXRlIGV2ZW50LlxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlQnJvd3Nlckhpc3RvcnkocHJvcHMpIHtcbiAgaWYgKHByb3BzID09PSB2b2lkIDApIHtcbiAgICBwcm9wcyA9IHt9O1xuICB9XG5cbiAgIWNhblVzZURPTSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ0Jyb3dzZXIgaGlzdG9yeSBuZWVkcyBhIERPTScpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgdmFyIGdsb2JhbEhpc3RvcnkgPSB3aW5kb3cuaGlzdG9yeTtcbiAgdmFyIGNhblVzZUhpc3RvcnkgPSBzdXBwb3J0c0hpc3RvcnkoKTtcbiAgdmFyIG5lZWRzSGFzaENoYW5nZUxpc3RlbmVyID0gIXN1cHBvcnRzUG9wU3RhdGVPbkhhc2hDaGFuZ2UoKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGZvcmNlUmVmcmVzaCA9IF9wcm9wcy5mb3JjZVJlZnJlc2gsXG4gICAgICBmb3JjZVJlZnJlc2ggPSBfcHJvcHMkZm9yY2VSZWZyZXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRmb3JjZVJlZnJlc2gsXG4gICAgICBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMkZ2V0VXNlckNvbmZpcm0gPT09IHZvaWQgMCA/IGdldENvbmZpcm1hdGlvbiA6IF9wcm9wcyRnZXRVc2VyQ29uZmlybSxcbiAgICAgIF9wcm9wcyRrZXlMZW5ndGggPSBfcHJvcHMua2V5TGVuZ3RoLFxuICAgICAga2V5TGVuZ3RoID0gX3Byb3BzJGtleUxlbmd0aCA9PT0gdm9pZCAwID8gNiA6IF9wcm9wcyRrZXlMZW5ndGg7XG4gIHZhciBiYXNlbmFtZSA9IHByb3BzLmJhc2VuYW1lID8gc3RyaXBUcmFpbGluZ1NsYXNoKGFkZExlYWRpbmdTbGFzaChwcm9wcy5iYXNlbmFtZSkpIDogJyc7XG5cbiAgZnVuY3Rpb24gZ2V0RE9NTG9jYXRpb24oaGlzdG9yeVN0YXRlKSB7XG4gICAgdmFyIF9yZWYgPSBoaXN0b3J5U3RhdGUgfHwge30sXG4gICAgICAgIGtleSA9IF9yZWYua2V5LFxuICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGU7XG5cbiAgICB2YXIgX3dpbmRvdyRsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbixcbiAgICAgICAgcGF0aG5hbWUgPSBfd2luZG93JGxvY2F0aW9uLnBhdGhuYW1lLFxuICAgICAgICBzZWFyY2ggPSBfd2luZG93JGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgICAgaGFzaCA9IF93aW5kb3ckbG9jYXRpb24uaGFzaDtcbiAgICB2YXIgcGF0aCA9IHBhdGhuYW1lICsgc2VhcmNoICsgaGFzaDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCFiYXNlbmFtZSB8fCBoYXNCYXNlbmFtZShwYXRoLCBiYXNlbmFtZSksICdZb3UgYXJlIGF0dGVtcHRpbmcgdG8gdXNlIGEgYmFzZW5hbWUgb24gYSBwYWdlIHdob3NlIFVSTCBwYXRoIGRvZXMgbm90IGJlZ2luICcgKyAnd2l0aCB0aGUgYmFzZW5hbWUuIEV4cGVjdGVkIHBhdGggXCInICsgcGF0aCArICdcIiB0byBiZWdpbiB3aXRoIFwiJyArIGJhc2VuYW1lICsgJ1wiLicpIDogdm9pZCAwO1xuICAgIGlmIChiYXNlbmFtZSkgcGF0aCA9IHN0cmlwQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpO1xuICAgIHJldHVybiBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwga2V5KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3BTdGF0ZShldmVudCkge1xuICAgIC8vIElnbm9yZSBleHRyYW5lb3VzIHBvcHN0YXRlIGV2ZW50cyBpbiBXZWJLaXQuXG4gICAgaWYgKGlzRXh0cmFuZW91c1BvcHN0YXRlRXZlbnQoZXZlbnQpKSByZXR1cm47XG4gICAgaGFuZGxlUG9wKGdldERPTUxvY2F0aW9uKGV2ZW50LnN0YXRlKSk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVIYXNoQ2hhbmdlKCkge1xuICAgIGhhbmRsZVBvcChnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSkpO1xuICB9XG5cbiAgdmFyIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZVBvcChsb2NhdGlvbikge1xuICAgIGlmIChmb3JjZU5leHRQb3ApIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IGZhbHNlO1xuICAgICAgc2V0U3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFjdGlvbiA9ICdQT1AnO1xuICAgICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgICAgaWYgKG9rKSB7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXZlcnRQb3AobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZXZlcnRQb3AoZnJvbUxvY2F0aW9uKSB7XG4gICAgdmFyIHRvTG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uOyAvLyBUT0RPOiBXZSBjb3VsZCBwcm9iYWJseSBtYWtlIHRoaXMgbW9yZSByZWxpYWJsZSBieVxuICAgIC8vIGtlZXBpbmcgYSBsaXN0IG9mIGtleXMgd2UndmUgc2VlbiBpbiBzZXNzaW9uU3RvcmFnZS5cbiAgICAvLyBJbnN0ZWFkLCB3ZSBqdXN0IGRlZmF1bHQgdG8gMCBmb3Iga2V5cyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxLZXlzLmluZGV4T2YodG9Mb2NhdGlvbi5rZXkpO1xuICAgIGlmICh0b0luZGV4ID09PSAtMSkgdG9JbmRleCA9IDA7XG4gICAgdmFyIGZyb21JbmRleCA9IGFsbEtleXMuaW5kZXhPZihmcm9tTG9jYXRpb24ua2V5KTtcbiAgICBpZiAoZnJvbUluZGV4ID09PSAtMSkgZnJvbUluZGV4ID0gMDtcbiAgICB2YXIgZGVsdGEgPSB0b0luZGV4IC0gZnJvbUluZGV4O1xuXG4gICAgaWYgKGRlbHRhKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSB0cnVlO1xuICAgICAgZ28oZGVsdGEpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbihnZXRIaXN0b3J5U3RhdGUoKSk7XG4gIHZhciBhbGxLZXlzID0gW2luaXRpYWxMb2NhdGlvbi5rZXldOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgZnVuY3Rpb24gY3JlYXRlSHJlZihsb2NhdGlvbikge1xuICAgIHJldHVybiBiYXNlbmFtZSArIGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcHVzaCB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1BVU0gnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBocmVmID0gY3JlYXRlSHJlZihsb2NhdGlvbik7XG4gICAgICB2YXIga2V5ID0gbG9jYXRpb24ua2V5LFxuICAgICAgICAgIHN0YXRlID0gbG9jYXRpb24uc3RhdGU7XG5cbiAgICAgIGlmIChjYW5Vc2VIaXN0b3J5KSB7XG4gICAgICAgIGdsb2JhbEhpc3RvcnkucHVzaFN0YXRlKHtcbiAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICBzdGF0ZTogc3RhdGVcbiAgICAgICAgfSwgbnVsbCwgaHJlZik7XG5cbiAgICAgICAgaWYgKGZvcmNlUmVmcmVzaCkge1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gaHJlZjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgcHJldkluZGV4ID0gYWxsS2V5cy5pbmRleE9mKGhpc3RvcnkubG9jYXRpb24ua2V5KTtcbiAgICAgICAgICB2YXIgbmV4dEtleXMgPSBhbGxLZXlzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICAgIG5leHRLZXlzLnB1c2gobG9jYXRpb24ua2V5KTtcbiAgICAgICAgICBhbGxLZXlzID0gbmV4dEtleXM7XG4gICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnQnJvd3NlciBoaXN0b3J5IGNhbm5vdCBwdXNoIHN0YXRlIGluIGJyb3dzZXJzIHRoYXQgZG8gbm90IHN1cHBvcnQgSFRNTDUgaGlzdG9yeScpIDogdm9pZCAwO1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGhyZWY7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHR5cGVvZiBwYXRoID09PSAnb2JqZWN0JyAmJiBwYXRoLnN0YXRlICE9PSB1bmRlZmluZWQgJiYgc3RhdGUgIT09IHVuZGVmaW5lZCksICdZb3Ugc2hvdWxkIGF2b2lkIHByb3ZpZGluZyBhIDJuZCBzdGF0ZSBhcmd1bWVudCB0byByZXBsYWNlIHdoZW4gdGhlIDFzdCAnICsgJ2FyZ3VtZW50IGlzIGEgbG9jYXRpb24tbGlrZSBvYmplY3QgdGhhdCBhbHJlYWR5IGhhcyBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUkVQTEFDRSc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgc3RhdGUsIGNyZWF0ZUtleSgpLCBoaXN0b3J5LmxvY2F0aW9uKTtcbiAgICB0cmFuc2l0aW9uTWFuYWdlci5jb25maXJtVHJhbnNpdGlvblRvKGxvY2F0aW9uLCBhY3Rpb24sIGdldFVzZXJDb25maXJtYXRpb24sIGZ1bmN0aW9uIChvaykge1xuICAgICAgaWYgKCFvaykgcmV0dXJuO1xuICAgICAgdmFyIGhyZWYgPSBjcmVhdGVIcmVmKGxvY2F0aW9uKTtcbiAgICAgIHZhciBrZXkgPSBsb2NhdGlvbi5rZXksXG4gICAgICAgICAgc3RhdGUgPSBsb2NhdGlvbi5zdGF0ZTtcblxuICAgICAgaWYgKGNhblVzZUhpc3RvcnkpIHtcbiAgICAgICAgZ2xvYmFsSGlzdG9yeS5yZXBsYWNlU3RhdGUoe1xuICAgICAgICAgIGtleToga2V5LFxuICAgICAgICAgIHN0YXRlOiBzdGF0ZVxuICAgICAgICB9LCBudWxsLCBocmVmKTtcblxuICAgICAgICBpZiAoZm9yY2VSZWZyZXNoKSB7XG4gICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoaHJlZik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHByZXZJbmRleCA9IGFsbEtleXMuaW5kZXhPZihoaXN0b3J5LmxvY2F0aW9uLmtleSk7XG4gICAgICAgICAgaWYgKHByZXZJbmRleCAhPT0gLTEpIGFsbEtleXNbcHJldkluZGV4XSA9IGxvY2F0aW9uLmtleTtcbiAgICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHN0YXRlID09PSB1bmRlZmluZWQsICdCcm93c2VyIGhpc3RvcnkgY2Fubm90IHJlcGxhY2Ugc3RhdGUgaW4gYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBIVE1MNSBoaXN0b3J5JykgOiB2b2lkIDA7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKGhyZWYpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIGdsb2JhbEhpc3RvcnkuZ28obik7XG4gIH1cblxuICBmdW5jdGlvbiBnb0JhY2soKSB7XG4gICAgZ28oLTEpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ29Gb3J3YXJkKCkge1xuICAgIGdvKDEpO1xuICB9XG5cbiAgdmFyIGxpc3RlbmVyQ291bnQgPSAwO1xuXG4gIGZ1bmN0aW9uIGNoZWNrRE9NTGlzdGVuZXJzKGRlbHRhKSB7XG4gICAgbGlzdGVuZXJDb3VudCArPSBkZWx0YTtcblxuICAgIGlmIChsaXN0ZW5lckNvdW50ID09PSAxICYmIGRlbHRhID09PSAxKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfSBlbHNlIGlmIChsaXN0ZW5lckNvdW50ID09PSAwKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihQb3BTdGF0ZUV2ZW50LCBoYW5kbGVQb3BTdGF0ZSk7XG4gICAgICBpZiAobmVlZHNIYXNoQ2hhbmdlTGlzdGVuZXIpIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCwgaGFuZGxlSGFzaENoYW5nZSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGlzQmxvY2tlZCA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGJsb2NrKHByb21wdCkge1xuICAgIGlmIChwcm9tcHQgPT09IHZvaWQgMCkge1xuICAgICAgcHJvbXB0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHVuYmxvY2sgPSB0cmFuc2l0aW9uTWFuYWdlci5zZXRQcm9tcHQocHJvbXB0KTtcblxuICAgIGlmICghaXNCbG9ja2VkKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygxKTtcbiAgICAgIGlzQmxvY2tlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpc0Jsb2NrZWQpIHtcbiAgICAgICAgaXNCbG9ja2VkID0gZmFsc2U7XG4gICAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHVuYmxvY2soKTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gbGlzdGVuKGxpc3RlbmVyKSB7XG4gICAgdmFyIHVubGlzdGVuID0gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBjaGVja0RPTUxpc3RlbmVycygtMSk7XG4gICAgICB1bmxpc3RlbigpO1xuICAgIH07XG4gIH1cblxuICB2YXIgaGlzdG9yeSA9IHtcbiAgICBsZW5ndGg6IGdsb2JhbEhpc3RvcnkubGVuZ3RoLFxuICAgIGFjdGlvbjogJ1BPUCcsXG4gICAgbG9jYXRpb246IGluaXRpYWxMb2NhdGlvbixcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgYmxvY2s6IGJsb2NrLFxuICAgIGxpc3RlbjogbGlzdGVuXG4gIH07XG4gIHJldHVybiBoaXN0b3J5O1xufVxuXG52YXIgSGFzaENoYW5nZUV2ZW50JDEgPSAnaGFzaGNoYW5nZSc7XG52YXIgSGFzaFBhdGhDb2RlcnMgPSB7XG4gIGhhc2hiYW5nOiB7XG4gICAgZW5jb2RlUGF0aDogZnVuY3Rpb24gZW5jb2RlUGF0aChwYXRoKSB7XG4gICAgICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09ICchJyA/IHBhdGggOiAnIS8nICsgc3RyaXBMZWFkaW5nU2xhc2gocGF0aCk7XG4gICAgfSxcbiAgICBkZWNvZGVQYXRoOiBmdW5jdGlvbiBkZWNvZGVQYXRoKHBhdGgpIHtcbiAgICAgIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJyEnID8gcGF0aC5zdWJzdHIoMSkgOiBwYXRoO1xuICAgIH1cbiAgfSxcbiAgbm9zbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IHN0cmlwTGVhZGluZ1NsYXNoLFxuICAgIGRlY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaFxuICB9LFxuICBzbGFzaDoge1xuICAgIGVuY29kZVBhdGg6IGFkZExlYWRpbmdTbGFzaCxcbiAgICBkZWNvZGVQYXRoOiBhZGRMZWFkaW5nU2xhc2hcbiAgfVxufTtcblxuZnVuY3Rpb24gc3RyaXBIYXNoKHVybCkge1xuICB2YXIgaGFzaEluZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgcmV0dXJuIGhhc2hJbmRleCA9PT0gLTEgPyB1cmwgOiB1cmwuc2xpY2UoMCwgaGFzaEluZGV4KTtcbn1cblxuZnVuY3Rpb24gZ2V0SGFzaFBhdGgoKSB7XG4gIC8vIFdlIGNhbid0IHVzZSB3aW5kb3cubG9jYXRpb24uaGFzaCBoZXJlIGJlY2F1c2UgaXQncyBub3RcbiAgLy8gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMgLSBGaXJlZm94IHdpbGwgcHJlLWRlY29kZSBpdCFcbiAgdmFyIGhyZWYgPSB3aW5kb3cubG9jYXRpb24uaHJlZjtcbiAgdmFyIGhhc2hJbmRleCA9IGhyZWYuaW5kZXhPZignIycpO1xuICByZXR1cm4gaGFzaEluZGV4ID09PSAtMSA/ICcnIDogaHJlZi5zdWJzdHJpbmcoaGFzaEluZGV4ICsgMSk7XG59XG5cbmZ1bmN0aW9uIHB1c2hIYXNoUGF0aChwYXRoKSB7XG4gIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gcGF0aDtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUhhc2hQYXRoKHBhdGgpIHtcbiAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2Uoc3RyaXBIYXNoKHdpbmRvdy5sb2NhdGlvbi5ocmVmKSArICcjJyArIHBhdGgpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVIYXNoSGlzdG9yeShwcm9wcykge1xuICBpZiAocHJvcHMgPT09IHZvaWQgMCkge1xuICAgIHByb3BzID0ge307XG4gIH1cblxuICAhY2FuVXNlRE9NID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnSGFzaCBoaXN0b3J5IG5lZWRzIGEgRE9NJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB2YXIgZ2xvYmFsSGlzdG9yeSA9IHdpbmRvdy5oaXN0b3J5O1xuICB2YXIgY2FuR29XaXRob3V0UmVsb2FkID0gc3VwcG9ydHNHb1dpdGhvdXRSZWxvYWRVc2luZ0hhc2goKTtcbiAgdmFyIF9wcm9wcyA9IHByb3BzLFxuICAgICAgX3Byb3BzJGdldFVzZXJDb25maXJtID0gX3Byb3BzLmdldFVzZXJDb25maXJtYXRpb24sXG4gICAgICBnZXRVc2VyQ29uZmlybWF0aW9uID0gX3Byb3BzJGdldFVzZXJDb25maXJtID09PSB2b2lkIDAgPyBnZXRDb25maXJtYXRpb24gOiBfcHJvcHMkZ2V0VXNlckNvbmZpcm0sXG4gICAgICBfcHJvcHMkaGFzaFR5cGUgPSBfcHJvcHMuaGFzaFR5cGUsXG4gICAgICBoYXNoVHlwZSA9IF9wcm9wcyRoYXNoVHlwZSA9PT0gdm9pZCAwID8gJ3NsYXNoJyA6IF9wcm9wcyRoYXNoVHlwZTtcbiAgdmFyIGJhc2VuYW1lID0gcHJvcHMuYmFzZW5hbWUgPyBzdHJpcFRyYWlsaW5nU2xhc2goYWRkTGVhZGluZ1NsYXNoKHByb3BzLmJhc2VuYW1lKSkgOiAnJztcbiAgdmFyIF9IYXNoUGF0aENvZGVycyRoYXNoVCA9IEhhc2hQYXRoQ29kZXJzW2hhc2hUeXBlXSxcbiAgICAgIGVuY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZW5jb2RlUGF0aCxcbiAgICAgIGRlY29kZVBhdGggPSBfSGFzaFBhdGhDb2RlcnMkaGFzaFQuZGVjb2RlUGF0aDtcblxuICBmdW5jdGlvbiBnZXRET01Mb2NhdGlvbigpIHtcbiAgICB2YXIgcGF0aCA9IGRlY29kZVBhdGgoZ2V0SGFzaFBhdGgoKSk7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghYmFzZW5hbWUgfHwgaGFzQmFzZW5hbWUocGF0aCwgYmFzZW5hbWUpLCAnWW91IGFyZSBhdHRlbXB0aW5nIHRvIHVzZSBhIGJhc2VuYW1lIG9uIGEgcGFnZSB3aG9zZSBVUkwgcGF0aCBkb2VzIG5vdCBiZWdpbiAnICsgJ3dpdGggdGhlIGJhc2VuYW1lLiBFeHBlY3RlZCBwYXRoIFwiJyArIHBhdGggKyAnXCIgdG8gYmVnaW4gd2l0aCBcIicgKyBiYXNlbmFtZSArICdcIi4nKSA6IHZvaWQgMDtcbiAgICBpZiAoYmFzZW5hbWUpIHBhdGggPSBzdHJpcEJhc2VuYW1lKHBhdGgsIGJhc2VuYW1lKTtcbiAgICByZXR1cm4gY3JlYXRlTG9jYXRpb24ocGF0aCk7XG4gIH1cblxuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGdsb2JhbEhpc3RvcnkubGVuZ3RoO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLm5vdGlmeUxpc3RlbmVycyhoaXN0b3J5LmxvY2F0aW9uLCBoaXN0b3J5LmFjdGlvbik7XG4gIH1cblxuICB2YXIgZm9yY2VOZXh0UG9wID0gZmFsc2U7XG4gIHZhciBpZ25vcmVQYXRoID0gbnVsbDtcblxuICBmdW5jdGlvbiBsb2NhdGlvbnNBcmVFcXVhbCQkMShhLCBiKSB7XG4gICAgcmV0dXJuIGEucGF0aG5hbWUgPT09IGIucGF0aG5hbWUgJiYgYS5zZWFyY2ggPT09IGIuc2VhcmNoICYmIGEuaGFzaCA9PT0gYi5oYXNoO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlSGFzaENoYW5nZSgpIHtcbiAgICB2YXIgcGF0aCA9IGdldEhhc2hQYXRoKCk7XG4gICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChwYXRoKTtcblxuICAgIGlmIChwYXRoICE9PSBlbmNvZGVkUGF0aCkge1xuICAgICAgLy8gRW5zdXJlIHdlIGFsd2F5cyBoYXZlIGEgcHJvcGVybHktZW5jb2RlZCBoYXNoLlxuICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxvY2F0aW9uID0gZ2V0RE9NTG9jYXRpb24oKTtcbiAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBoaXN0b3J5LmxvY2F0aW9uO1xuICAgICAgaWYgKCFmb3JjZU5leHRQb3AgJiYgbG9jYXRpb25zQXJlRXF1YWwkJDEocHJldkxvY2F0aW9uLCBsb2NhdGlvbikpIHJldHVybjsgLy8gQSBoYXNoY2hhbmdlIGRvZXNuJ3QgYWx3YXlzID09IGxvY2F0aW9uIGNoYW5nZS5cblxuICAgICAgaWYgKGlnbm9yZVBhdGggPT09IGNyZWF0ZVBhdGgobG9jYXRpb24pKSByZXR1cm47IC8vIElnbm9yZSB0aGlzIGNoYW5nZTsgd2UgYWxyZWFkeSBzZXRTdGF0ZSBpbiBwdXNoL3JlcGxhY2UuXG5cbiAgICAgIGlnbm9yZVBhdGggPSBudWxsO1xuICAgICAgaGFuZGxlUG9wKGxvY2F0aW9uKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVQb3AobG9jYXRpb24pIHtcbiAgICBpZiAoZm9yY2VOZXh0UG9wKSB7XG4gICAgICBmb3JjZU5leHRQb3AgPSBmYWxzZTtcbiAgICAgIHNldFN0YXRlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhY3Rpb24gPSAnUE9QJztcbiAgICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICAgIGlmIChvaykge1xuICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV2ZXJ0UG9wKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmV2ZXJ0UG9wKGZyb21Mb2NhdGlvbikge1xuICAgIHZhciB0b0xvY2F0aW9uID0gaGlzdG9yeS5sb2NhdGlvbjsgLy8gVE9ETzogV2UgY291bGQgcHJvYmFibHkgbWFrZSB0aGlzIG1vcmUgcmVsaWFibGUgYnlcbiAgICAvLyBrZWVwaW5nIGEgbGlzdCBvZiBwYXRocyB3ZSd2ZSBzZWVuIGluIHNlc3Npb25TdG9yYWdlLlxuICAgIC8vIEluc3RlYWQsIHdlIGp1c3QgZGVmYXVsdCB0byAwIGZvciBwYXRocyB3ZSBkb24ndCBrbm93LlxuXG4gICAgdmFyIHRvSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKHRvTG9jYXRpb24pKTtcbiAgICBpZiAodG9JbmRleCA9PT0gLTEpIHRvSW5kZXggPSAwO1xuICAgIHZhciBmcm9tSW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGZyb21Mb2NhdGlvbikpO1xuICAgIGlmIChmcm9tSW5kZXggPT09IC0xKSBmcm9tSW5kZXggPSAwO1xuICAgIHZhciBkZWx0YSA9IHRvSW5kZXggLSBmcm9tSW5kZXg7XG5cbiAgICBpZiAoZGVsdGEpIHtcbiAgICAgIGZvcmNlTmV4dFBvcCA9IHRydWU7XG4gICAgICBnbyhkZWx0YSk7XG4gICAgfVxuICB9IC8vIEVuc3VyZSB0aGUgaGFzaCBpcyBlbmNvZGVkIHByb3Blcmx5IGJlZm9yZSBkb2luZyBhbnl0aGluZyBlbHNlLlxuXG5cbiAgdmFyIHBhdGggPSBnZXRIYXNoUGF0aCgpO1xuICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKHBhdGgpO1xuICBpZiAocGF0aCAhPT0gZW5jb2RlZFBhdGgpIHJlcGxhY2VIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gIHZhciBpbml0aWFsTG9jYXRpb24gPSBnZXRET01Mb2NhdGlvbigpO1xuICB2YXIgYWxsUGF0aHMgPSBbY3JlYXRlUGF0aChpbml0aWFsTG9jYXRpb24pXTsgLy8gUHVibGljIGludGVyZmFjZVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUhyZWYobG9jYXRpb24pIHtcbiAgICB2YXIgYmFzZVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Jhc2UnKTtcbiAgICB2YXIgaHJlZiA9ICcnO1xuXG4gICAgaWYgKGJhc2VUYWcgJiYgYmFzZVRhZy5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkge1xuICAgICAgaHJlZiA9IHN0cmlwSGFzaCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGhyZWYgKyAnIycgKyBlbmNvZGVQYXRoKGJhc2VuYW1lICsgY3JlYXRlUGF0aChsb2NhdGlvbikpO1xuICB9XG5cbiAgZnVuY3Rpb24gcHVzaChwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoc3RhdGUgPT09IHVuZGVmaW5lZCwgJ0hhc2ggaGlzdG9yeSBjYW5ub3QgcHVzaCBzdGF0ZTsgaXQgaXMgaWdub3JlZCcpIDogdm9pZCAwO1xuICAgIHZhciBhY3Rpb24gPSAnUFVTSCc7XG4gICAgdmFyIGxvY2F0aW9uID0gY3JlYXRlTG9jYXRpb24ocGF0aCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcGF0aCA9IGNyZWF0ZVBhdGgobG9jYXRpb24pO1xuICAgICAgdmFyIGVuY29kZWRQYXRoID0gZW5jb2RlUGF0aChiYXNlbmFtZSArIHBhdGgpO1xuICAgICAgdmFyIGhhc2hDaGFuZ2VkID0gZ2V0SGFzaFBhdGgoKSAhPT0gZW5jb2RlZFBhdGg7XG5cbiAgICAgIGlmIChoYXNoQ2hhbmdlZCkge1xuICAgICAgICAvLyBXZSBjYW5ub3QgdGVsbCBpZiBhIGhhc2hjaGFuZ2Ugd2FzIGNhdXNlZCBieSBhIFBVU0gsIHNvIHdlJ2RcbiAgICAgICAgLy8gcmF0aGVyIHNldFN0YXRlIGhlcmUgYW5kIGlnbm9yZSB0aGUgaGFzaGNoYW5nZS4gVGhlIGNhdmVhdCBoZXJlXG4gICAgICAgIC8vIGlzIHRoYXQgb3RoZXIgaGFzaCBoaXN0b3JpZXMgaW4gdGhlIHBhZ2Ugd2lsbCBjb25zaWRlciBpdCBhIFBPUC5cbiAgICAgICAgaWdub3JlUGF0aCA9IHBhdGg7XG4gICAgICAgIHB1c2hIYXNoUGF0aChlbmNvZGVkUGF0aCk7XG4gICAgICAgIHZhciBwcmV2SW5kZXggPSBhbGxQYXRocy5sYXN0SW5kZXhPZihjcmVhdGVQYXRoKGhpc3RvcnkubG9jYXRpb24pKTtcbiAgICAgICAgdmFyIG5leHRQYXRocyA9IGFsbFBhdGhzLnNsaWNlKDAsIHByZXZJbmRleCArIDEpO1xuICAgICAgICBuZXh0UGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgYWxsUGF0aHMgPSBuZXh0UGF0aHM7XG4gICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKGZhbHNlLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCBQVVNIIHRoZSBzYW1lIHBhdGg7IGEgbmV3IGVudHJ5IHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBoaXN0b3J5IHN0YWNrJykgOiB2b2lkIDA7XG4gICAgICAgIHNldFN0YXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXBsYWNlKHBhdGgsIHN0YXRlKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyhzdGF0ZSA9PT0gdW5kZWZpbmVkLCAnSGFzaCBoaXN0b3J5IGNhbm5vdCByZXBsYWNlIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdSRVBMQUNFJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIHZhciBwYXRoID0gY3JlYXRlUGF0aChsb2NhdGlvbik7XG4gICAgICB2YXIgZW5jb2RlZFBhdGggPSBlbmNvZGVQYXRoKGJhc2VuYW1lICsgcGF0aCk7XG4gICAgICB2YXIgaGFzaENoYW5nZWQgPSBnZXRIYXNoUGF0aCgpICE9PSBlbmNvZGVkUGF0aDtcblxuICAgICAgaWYgKGhhc2hDaGFuZ2VkKSB7XG4gICAgICAgIC8vIFdlIGNhbm5vdCB0ZWxsIGlmIGEgaGFzaGNoYW5nZSB3YXMgY2F1c2VkIGJ5IGEgUkVQTEFDRSwgc28gd2UnZFxuICAgICAgICAvLyByYXRoZXIgc2V0U3RhdGUgaGVyZSBhbmQgaWdub3JlIHRoZSBoYXNoY2hhbmdlLiBUaGUgY2F2ZWF0IGhlcmVcbiAgICAgICAgLy8gaXMgdGhhdCBvdGhlciBoYXNoIGhpc3RvcmllcyBpbiB0aGUgcGFnZSB3aWxsIGNvbnNpZGVyIGl0IGEgUE9QLlxuICAgICAgICBpZ25vcmVQYXRoID0gcGF0aDtcbiAgICAgICAgcmVwbGFjZUhhc2hQYXRoKGVuY29kZWRQYXRoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHByZXZJbmRleCA9IGFsbFBhdGhzLmluZGV4T2YoY3JlYXRlUGF0aChoaXN0b3J5LmxvY2F0aW9uKSk7XG4gICAgICBpZiAocHJldkluZGV4ICE9PSAtMSkgYWxsUGF0aHNbcHJldkluZGV4XSA9IHBhdGg7XG4gICAgICBzZXRTdGF0ZSh7XG4gICAgICAgIGFjdGlvbjogYWN0aW9uLFxuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ28obikge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoY2FuR29XaXRob3V0UmVsb2FkLCAnSGFzaCBoaXN0b3J5IGdvKG4pIGNhdXNlcyBhIGZ1bGwgcGFnZSByZWxvYWQgaW4gdGhpcyBicm93c2VyJykgOiB2b2lkIDA7XG4gICAgZ2xvYmFsSGlzdG9yeS5nbyhuKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICB2YXIgbGlzdGVuZXJDb3VudCA9IDA7XG5cbiAgZnVuY3Rpb24gY2hlY2tET01MaXN0ZW5lcnMoZGVsdGEpIHtcbiAgICBsaXN0ZW5lckNvdW50ICs9IGRlbHRhO1xuXG4gICAgaWYgKGxpc3RlbmVyQ291bnQgPT09IDEgJiYgZGVsdGEgPT09IDEpIHtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKGxpc3RlbmVyQ291bnQgPT09IDApIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKEhhc2hDaGFuZ2VFdmVudCQxLCBoYW5kbGVIYXNoQ2hhbmdlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgaXNCbG9ja2VkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgdW5ibG9jayA9IHRyYW5zaXRpb25NYW5hZ2VyLnNldFByb21wdChwcm9tcHQpO1xuXG4gICAgaWYgKCFpc0Jsb2NrZWQpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKDEpO1xuICAgICAgaXNCbG9ja2VkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGlzQmxvY2tlZCkge1xuICAgICAgICBpc0Jsb2NrZWQgPSBmYWxzZTtcbiAgICAgICAgY2hlY2tET01MaXN0ZW5lcnMoLTEpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5ibG9jaygpO1xuICAgIH07XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICB2YXIgdW5saXN0ZW4gPSB0cmFuc2l0aW9uTWFuYWdlci5hcHBlbmRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgY2hlY2tET01MaXN0ZW5lcnMoMSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGNoZWNrRE9NTGlzdGVuZXJzKC0xKTtcbiAgICAgIHVubGlzdGVuKCk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBoaXN0b3J5ID0ge1xuICAgIGxlbmd0aDogZ2xvYmFsSGlzdG9yeS5sZW5ndGgsXG4gICAgYWN0aW9uOiAnUE9QJyxcbiAgICBsb2NhdGlvbjogaW5pdGlhbExvY2F0aW9uLFxuICAgIGNyZWF0ZUhyZWY6IGNyZWF0ZUhyZWYsXG4gICAgcHVzaDogcHVzaCxcbiAgICByZXBsYWNlOiByZXBsYWNlLFxuICAgIGdvOiBnbyxcbiAgICBnb0JhY2s6IGdvQmFjayxcbiAgICBnb0ZvcndhcmQ6IGdvRm9yd2FyZCxcbiAgICBibG9jazogYmxvY2ssXG4gICAgbGlzdGVuOiBsaXN0ZW5cbiAgfTtcbiAgcmV0dXJuIGhpc3Rvcnk7XG59XG5cbmZ1bmN0aW9uIGNsYW1wKG4sIGxvd2VyQm91bmQsIHVwcGVyQm91bmQpIHtcbiAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG4sIGxvd2VyQm91bmQpLCB1cHBlckJvdW5kKTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGhpc3Rvcnkgb2JqZWN0IHRoYXQgc3RvcmVzIGxvY2F0aW9ucyBpbiBtZW1vcnkuXG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVNZW1vcnlIaXN0b3J5KHByb3BzKSB7XG4gIGlmIChwcm9wcyA9PT0gdm9pZCAwKSB7XG4gICAgcHJvcHMgPSB7fTtcbiAgfVxuXG4gIHZhciBfcHJvcHMgPSBwcm9wcyxcbiAgICAgIGdldFVzZXJDb25maXJtYXRpb24gPSBfcHJvcHMuZ2V0VXNlckNvbmZpcm1hdGlvbixcbiAgICAgIF9wcm9wcyRpbml0aWFsRW50cmllcyA9IF9wcm9wcy5pbml0aWFsRW50cmllcyxcbiAgICAgIGluaXRpYWxFbnRyaWVzID0gX3Byb3BzJGluaXRpYWxFbnRyaWVzID09PSB2b2lkIDAgPyBbJy8nXSA6IF9wcm9wcyRpbml0aWFsRW50cmllcyxcbiAgICAgIF9wcm9wcyRpbml0aWFsSW5kZXggPSBfcHJvcHMuaW5pdGlhbEluZGV4LFxuICAgICAgaW5pdGlhbEluZGV4ID0gX3Byb3BzJGluaXRpYWxJbmRleCA9PT0gdm9pZCAwID8gMCA6IF9wcm9wcyRpbml0aWFsSW5kZXgsXG4gICAgICBfcHJvcHMka2V5TGVuZ3RoID0gX3Byb3BzLmtleUxlbmd0aCxcbiAgICAgIGtleUxlbmd0aCA9IF9wcm9wcyRrZXlMZW5ndGggPT09IHZvaWQgMCA/IDYgOiBfcHJvcHMka2V5TGVuZ3RoO1xuICB2YXIgdHJhbnNpdGlvbk1hbmFnZXIgPSBjcmVhdGVUcmFuc2l0aW9uTWFuYWdlcigpO1xuXG4gIGZ1bmN0aW9uIHNldFN0YXRlKG5leHRTdGF0ZSkge1xuICAgIF9leHRlbmRzKGhpc3RvcnksIG5leHRTdGF0ZSk7XG5cbiAgICBoaXN0b3J5Lmxlbmd0aCA9IGhpc3RvcnkuZW50cmllcy5sZW5ndGg7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIubm90aWZ5TGlzdGVuZXJzKGhpc3RvcnkubG9jYXRpb24sIGhpc3RvcnkuYWN0aW9uKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUtleSgpIHtcbiAgICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIGtleUxlbmd0aCk7XG4gIH1cblxuICB2YXIgaW5kZXggPSBjbGFtcChpbml0aWFsSW5kZXgsIDAsIGluaXRpYWxFbnRyaWVzLmxlbmd0aCAtIDEpO1xuICB2YXIgZW50cmllcyA9IGluaXRpYWxFbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICByZXR1cm4gdHlwZW9mIGVudHJ5ID09PSAnc3RyaW5nJyA/IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGNyZWF0ZUtleSgpKSA6IGNyZWF0ZUxvY2F0aW9uKGVudHJ5LCB1bmRlZmluZWQsIGVudHJ5LmtleSB8fCBjcmVhdGVLZXkoKSk7XG4gIH0pOyAvLyBQdWJsaWMgaW50ZXJmYWNlXG5cbiAgdmFyIGNyZWF0ZUhyZWYgPSBjcmVhdGVQYXRoO1xuXG4gIGZ1bmN0aW9uIHB1c2gocGF0aCwgc3RhdGUpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodHlwZW9mIHBhdGggPT09ICdvYmplY3QnICYmIHBhdGguc3RhdGUgIT09IHVuZGVmaW5lZCAmJiBzdGF0ZSAhPT0gdW5kZWZpbmVkKSwgJ1lvdSBzaG91bGQgYXZvaWQgcHJvdmlkaW5nIGEgMm5kIHN0YXRlIGFyZ3VtZW50IHRvIHB1c2ggd2hlbiB0aGUgMXN0ICcgKyAnYXJndW1lbnQgaXMgYSBsb2NhdGlvbi1saWtlIG9iamVjdCB0aGF0IGFscmVhZHkgaGFzIHN0YXRlOyBpdCBpcyBpZ25vcmVkJykgOiB2b2lkIDA7XG4gICAgdmFyIGFjdGlvbiA9ICdQVVNIJztcbiAgICB2YXIgbG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwYXRoLCBzdGF0ZSwgY3JlYXRlS2V5KCksIGhpc3RvcnkubG9jYXRpb24pO1xuICAgIHRyYW5zaXRpb25NYW5hZ2VyLmNvbmZpcm1UcmFuc2l0aW9uVG8obG9jYXRpb24sIGFjdGlvbiwgZ2V0VXNlckNvbmZpcm1hdGlvbiwgZnVuY3Rpb24gKG9rKSB7XG4gICAgICBpZiAoIW9rKSByZXR1cm47XG4gICAgICB2YXIgcHJldkluZGV4ID0gaGlzdG9yeS5pbmRleDtcbiAgICAgIHZhciBuZXh0SW5kZXggPSBwcmV2SW5kZXggKyAxO1xuICAgICAgdmFyIG5leHRFbnRyaWVzID0gaGlzdG9yeS5lbnRyaWVzLnNsaWNlKDApO1xuXG4gICAgICBpZiAobmV4dEVudHJpZXMubGVuZ3RoID4gbmV4dEluZGV4KSB7XG4gICAgICAgIG5leHRFbnRyaWVzLnNwbGljZShuZXh0SW5kZXgsIG5leHRFbnRyaWVzLmxlbmd0aCAtIG5leHRJbmRleCwgbG9jYXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbmV4dEVudHJpZXMucHVzaChsb2NhdGlvbik7XG4gICAgICB9XG5cbiAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvbixcbiAgICAgICAgaW5kZXg6IG5leHRJbmRleCxcbiAgICAgICAgZW50cmllczogbmV4dEVudHJpZXNcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZShwYXRoLCBzdGF0ZSkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0eXBlb2YgcGF0aCA9PT0gJ29iamVjdCcgJiYgcGF0aC5zdGF0ZSAhPT0gdW5kZWZpbmVkICYmIHN0YXRlICE9PSB1bmRlZmluZWQpLCAnWW91IHNob3VsZCBhdm9pZCBwcm92aWRpbmcgYSAybmQgc3RhdGUgYXJndW1lbnQgdG8gcmVwbGFjZSB3aGVuIHRoZSAxc3QgJyArICdhcmd1bWVudCBpcyBhIGxvY2F0aW9uLWxpa2Ugb2JqZWN0IHRoYXQgYWxyZWFkeSBoYXMgc3RhdGU7IGl0IGlzIGlnbm9yZWQnKSA6IHZvaWQgMDtcbiAgICB2YXIgYWN0aW9uID0gJ1JFUExBQ0UnO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKHBhdGgsIHN0YXRlLCBjcmVhdGVLZXkoKSwgaGlzdG9yeS5sb2NhdGlvbik7XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmICghb2spIHJldHVybjtcbiAgICAgIGhpc3RvcnkuZW50cmllc1toaXN0b3J5LmluZGV4XSA9IGxvY2F0aW9uO1xuICAgICAgc2V0U3RhdGUoe1xuICAgICAgICBhY3Rpb246IGFjdGlvbixcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvKG4pIHtcbiAgICB2YXIgbmV4dEluZGV4ID0gY2xhbXAoaGlzdG9yeS5pbmRleCArIG4sIDAsIGhpc3RvcnkuZW50cmllcy5sZW5ndGggLSAxKTtcbiAgICB2YXIgYWN0aW9uID0gJ1BPUCc7XG4gICAgdmFyIGxvY2F0aW9uID0gaGlzdG9yeS5lbnRyaWVzW25leHRJbmRleF07XG4gICAgdHJhbnNpdGlvbk1hbmFnZXIuY29uZmlybVRyYW5zaXRpb25Ubyhsb2NhdGlvbiwgYWN0aW9uLCBnZXRVc2VyQ29uZmlybWF0aW9uLCBmdW5jdGlvbiAob2spIHtcbiAgICAgIGlmIChvaykge1xuICAgICAgICBzZXRTdGF0ZSh7XG4gICAgICAgICAgYWN0aW9uOiBhY3Rpb24sXG4gICAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICAgIGluZGV4OiBuZXh0SW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNaW1pYyB0aGUgYmVoYXZpb3Igb2YgRE9NIGhpc3RvcmllcyBieVxuICAgICAgICAvLyBjYXVzaW5nIGEgcmVuZGVyIGFmdGVyIGEgY2FuY2VsbGVkIFBPUC5cbiAgICAgICAgc2V0U3RhdGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdvQmFjaygpIHtcbiAgICBnbygtMSk7XG4gIH1cblxuICBmdW5jdGlvbiBnb0ZvcndhcmQoKSB7XG4gICAgZ28oMSk7XG4gIH1cblxuICBmdW5jdGlvbiBjYW5HbyhuKSB7XG4gICAgdmFyIG5leHRJbmRleCA9IGhpc3RvcnkuaW5kZXggKyBuO1xuICAgIHJldHVybiBuZXh0SW5kZXggPj0gMCAmJiBuZXh0SW5kZXggPCBoaXN0b3J5LmVudHJpZXMubGVuZ3RoO1xuICB9XG5cbiAgZnVuY3Rpb24gYmxvY2socHJvbXB0KSB7XG4gICAgaWYgKHByb21wdCA9PT0gdm9pZCAwKSB7XG4gICAgICBwcm9tcHQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuc2V0UHJvbXB0KHByb21wdCk7XG4gIH1cblxuICBmdW5jdGlvbiBsaXN0ZW4obGlzdGVuZXIpIHtcbiAgICByZXR1cm4gdHJhbnNpdGlvbk1hbmFnZXIuYXBwZW5kTGlzdGVuZXIobGlzdGVuZXIpO1xuICB9XG5cbiAgdmFyIGhpc3RvcnkgPSB7XG4gICAgbGVuZ3RoOiBlbnRyaWVzLmxlbmd0aCxcbiAgICBhY3Rpb246ICdQT1AnLFxuICAgIGxvY2F0aW9uOiBlbnRyaWVzW2luZGV4XSxcbiAgICBpbmRleDogaW5kZXgsXG4gICAgZW50cmllczogZW50cmllcyxcbiAgICBjcmVhdGVIcmVmOiBjcmVhdGVIcmVmLFxuICAgIHB1c2g6IHB1c2gsXG4gICAgcmVwbGFjZTogcmVwbGFjZSxcbiAgICBnbzogZ28sXG4gICAgZ29CYWNrOiBnb0JhY2ssXG4gICAgZ29Gb3J3YXJkOiBnb0ZvcndhcmQsXG4gICAgY2FuR286IGNhbkdvLFxuICAgIGJsb2NrOiBibG9jayxcbiAgICBsaXN0ZW46IGxpc3RlblxuICB9O1xuICByZXR1cm4gaGlzdG9yeTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVNZW1vcnlIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiwgbG9jYXRpb25zQXJlRXF1YWwsIHBhcnNlUGF0aCwgY3JlYXRlUGF0aCB9O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICd0aW55LXdhcm5pbmcnO1xuXG52YXIgTUFYX1NJR05FRF8zMV9CSVRfSU5UID0gMTA3Mzc0MTgyMztcbnZhciBjb21tb25qc0dsb2JhbCA9IHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyA/IGdsb2JhbFRoaXMgOiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IHdpbmRvdyA6IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnID8gZ2xvYmFsIDoge307XG5cbmZ1bmN0aW9uIGdldFVuaXF1ZUlkKCkge1xuICB2YXIga2V5ID0gJ19fZ2xvYmFsX3VuaXF1ZV9pZF9fJztcbiAgcmV0dXJuIGNvbW1vbmpzR2xvYmFsW2tleV0gPSAoY29tbW9uanNHbG9iYWxba2V5XSB8fCAwKSArIDE7XG59XG5cbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVtaXR0ZXIodmFsdWUpIHtcbiAgdmFyIGhhbmRsZXJzID0gW107XG4gIHJldHVybiB7XG4gICAgb246IGZ1bmN0aW9uIG9uKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfSxcbiAgICBvZmY6IGZ1bmN0aW9uIG9mZihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaCkge1xuICAgICAgICByZXR1cm4gaCAhPT0gaGFuZGxlcjtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgIHZhbHVlID0gbmV3VmFsdWU7XG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVyKHZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9ubHlDaGlsZChjaGlsZHJlbikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlblswXSA6IGNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZWFjdENvbnRleHQoZGVmYXVsdFZhbHVlLCBjYWxjdWxhdGVDaGFuZ2VkQml0cykge1xuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4LCBfQ29uc3VtZXIkY29udGV4dFR5cGU7XG5cbiAgdmFyIGNvbnRleHRQcm9wID0gJ19fY3JlYXRlLXJlYWN0LWNvbnRleHQtJyArIGdldFVuaXF1ZUlkKCkgKyAnX18nO1xuXG4gIHZhciBQcm92aWRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0c0xvb3NlKFByb3ZpZGVyLCBfQ29tcG9uZW50KTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKCkge1xuICAgICAgdmFyIF90aGlzO1xuXG4gICAgICBfdGhpcyA9IF9Db21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMuZW1pdHRlciA9IGNyZWF0ZUV2ZW50RW1pdHRlcihfdGhpcy5wcm9wcy52YWx1ZSk7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgdmFyIF9wcm90byA9IFByb3ZpZGVyLnByb3RvdHlwZTtcblxuICAgIF9wcm90by5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltjb250ZXh0UHJvcF0gPSB0aGlzLmVtaXR0ZXIsIF9yZWY7XG4gICAgfTtcblxuICAgIF9wcm90by5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnZhbHVlICE9PSBuZXh0UHJvcHMudmFsdWUpIHtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gdGhpcy5wcm9wcy52YWx1ZTtcbiAgICAgICAgdmFyIG5ld1ZhbHVlID0gbmV4dFByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgY2hhbmdlZEJpdHM7XG5cbiAgICAgICAgaWYgKG9iamVjdElzKG9sZFZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICBjaGFuZ2VkQml0cyA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHdhcm5pbmcoKGNoYW5nZWRCaXRzICYgTUFYX1NJR05FRF8zMV9CSVRfSU5UKSA9PT0gY2hhbmdlZEJpdHMsICdjYWxjdWxhdGVDaGFuZ2VkQml0czogRXhwZWN0ZWQgdGhlIHJldHVybiB2YWx1ZSB0byBiZSBhICcgKyAnMzEtYml0IGludGVnZXIuIEluc3RlYWQgcmVjZWl2ZWQ6ICcgKyBjaGFuZ2VkQml0cyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY2hhbmdlZEJpdHMgfD0gMDtcblxuICAgICAgICAgIGlmIChjaGFuZ2VkQml0cyAhPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5lbWl0dGVyLnNldChuZXh0UHJvcHMudmFsdWUsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4KTtcblxuICB2YXIgQ29uc3VtZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gICAgX2luaGVyaXRzTG9vc2UoQ29uc3VtZXIsIF9Db21wb25lbnQyKTtcblxuICAgIGZ1bmN0aW9uIENvbnN1bWVyKCkge1xuICAgICAgdmFyIF90aGlzMjtcblxuICAgICAgX3RoaXMyID0gX0NvbXBvbmVudDIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgX3RoaXMyLnN0YXRlID0ge1xuICAgICAgICB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKClcbiAgICAgIH07XG5cbiAgICAgIF90aGlzMi5vblVwZGF0ZSA9IGZ1bmN0aW9uIChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgICAgdmFyIG9ic2VydmVkQml0cyA9IF90aGlzMi5vYnNlcnZlZEJpdHMgfCAwO1xuXG4gICAgICAgIGlmICgob2JzZXJ2ZWRCaXRzICYgY2hhbmdlZEJpdHMpICE9PSAwKSB7XG4gICAgICAgICAgX3RoaXMyLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHZhbHVlOiBfdGhpczIuZ2V0VmFsdWUoKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gX3RoaXMyO1xuICAgIH1cblxuICAgIHZhciBfcHJvdG8yID0gQ29uc3VtZXIucHJvdG90eXBlO1xuXG4gICAgX3Byb3RvMi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBuZXh0UHJvcHMub2JzZXJ2ZWRCaXRzO1xuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIF9wcm90bzIuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub24odGhpcy5vblVwZGF0ZSk7XG4gICAgICB9XG5cbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSB0aGlzLnByb3BzLm9ic2VydmVkQml0cztcbiAgICAgIHRoaXMub2JzZXJ2ZWRCaXRzID0gb2JzZXJ2ZWRCaXRzID09PSB1bmRlZmluZWQgfHwgb2JzZXJ2ZWRCaXRzID09PSBudWxsID8gTUFYX1NJR05FRF8zMV9CSVRfSU5UIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBfcHJvdG8yLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICBpZiAodGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXSkge1xuICAgICAgICB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLm9mZih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgX3Byb3RvMi5nZXRWYWx1ZSA9IGZ1bmN0aW9uIGdldFZhbHVlKCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0uZ2V0KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBfcHJvdG8yLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBvbmx5Q2hpbGQodGhpcy5wcm9wcy5jaGlsZHJlbikodGhpcy5zdGF0ZS52YWx1ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiBDb25zdW1lcjtcbiAgfShDb21wb25lbnQpO1xuXG4gIENvbnN1bWVyLmNvbnRleHRUeXBlcyA9IChfQ29uc3VtZXIkY29udGV4dFR5cGUgPSB7fSwgX0NvbnN1bWVyJGNvbnRleHRUeXBlW2NvbnRleHRQcm9wXSA9IFByb3BUeXBlcy5vYmplY3QsIF9Db25zdW1lciRjb250ZXh0VHlwZSk7XG4gIHJldHVybiB7XG4gICAgUHJvdmlkZXI6IFByb3ZpZGVyLFxuICAgIENvbnN1bWVyOiBDb25zdW1lclxuICB9O1xufVxuXG52YXIgaW5kZXggPSBSZWFjdC5jcmVhdGVDb250ZXh0IHx8IGNyZWF0ZVJlYWN0Q29udGV4dDtcblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJpbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IGNyZWF0ZU1lbW9yeUhpc3RvcnksIGNyZWF0ZUxvY2F0aW9uLCBsb2NhdGlvbnNBcmVFcXVhbCwgY3JlYXRlUGF0aCB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAndGlueS13YXJuaW5nJztcbmltcG9ydCBjcmVhdGVDb250ZXh0IGZyb20gJ21pbmktY3JlYXRlLXJlYWN0LWNvbnRleHQnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LWludmFyaWFudCc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgcGF0aFRvUmVnZXhwIGZyb20gJ3BhdGgtdG8tcmVnZXhwJztcbmltcG9ydCB7IGlzVmFsaWRFbGVtZW50VHlwZSB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlJztcbmltcG9ydCBob2lzdFN0YXRpY3MgZnJvbSAnaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MnO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSkge1xuICB2YXIgY29udGV4dCA9IGNyZWF0ZUNvbnRleHQoKTtcbiAgY29udGV4dC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxudmFyIGhpc3RvcnlDb250ZXh0ID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZU5hbWVkQ29udGV4dChcIlJvdXRlci1IaXN0b3J5XCIpO1xuXG4vLyBUT0RPOiBSZXBsYWNlIHdpdGggUmVhY3QuY3JlYXRlQ29udGV4dCBvbmNlIHdlIGNhbiBhc3N1bWUgUmVhY3QgMTYrXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQkMSA9IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkQ29udGV4dChuYW1lKSB7XG4gIHZhciBjb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuICBjb250ZXh0LmRpc3BsYXlOYW1lID0gbmFtZTtcbiAgcmV0dXJuIGNvbnRleHQ7XG59O1xuXG52YXIgY29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVOYW1lZENvbnRleHQkMShcIlJvdXRlclwiKTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHV0dGluZyBoaXN0b3J5IG9uIGNvbnRleHQuXG4gKi9cblxudmFyIFJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIFJvdXRlci5jb21wdXRlUm9vdE1hdGNoID0gZnVuY3Rpb24gY29tcHV0ZVJvb3RNYXRjaChwYXRobmFtZSkge1xuICAgIHJldHVybiB7XG4gICAgICBwYXRoOiBcIi9cIixcbiAgICAgIHVybDogXCIvXCIsXG4gICAgICBwYXJhbXM6IHt9LFxuICAgICAgaXNFeGFjdDogcGF0aG5hbWUgPT09IFwiL1wiXG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbCh0aGlzLCBwcm9wcykgfHwgdGhpcztcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGxvY2F0aW9uOiBwcm9wcy5oaXN0b3J5LmxvY2F0aW9uXG4gICAgfTsgLy8gVGhpcyBpcyBhIGJpdCBvZiBhIGhhY2suIFdlIGhhdmUgdG8gc3RhcnQgbGlzdGVuaW5nIGZvciBsb2NhdGlvblxuICAgIC8vIGNoYW5nZXMgaGVyZSBpbiB0aGUgY29uc3RydWN0b3IgaW4gY2FzZSB0aGVyZSBhcmUgYW55IDxSZWRpcmVjdD5zXG4gICAgLy8gb24gdGhlIGluaXRpYWwgcmVuZGVyLiBJZiB0aGVyZSBhcmUsIHRoZXkgd2lsbCByZXBsYWNlL3B1c2ggd2hlblxuICAgIC8vIHRoZXkgbW91bnQgYW5kIHNpbmNlIGNETSBmaXJlcyBpbiBjaGlsZHJlbiBiZWZvcmUgcGFyZW50cywgd2UgbWF5XG4gICAgLy8gZ2V0IGEgbmV3IGxvY2F0aW9uIGJlZm9yZSB0aGUgPFJvdXRlcj4gaXMgbW91bnRlZC5cblxuICAgIF90aGlzLl9pc01vdW50ZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbnVsbDtcblxuICAgIGlmICghcHJvcHMuc3RhdGljQ29udGV4dCkge1xuICAgICAgX3RoaXMudW5saXN0ZW4gPSBwcm9wcy5oaXN0b3J5Lmxpc3RlbihmdW5jdGlvbiAobG9jYXRpb24pIHtcbiAgICAgICAgaWYgKF90aGlzLl9pc01vdW50ZWQpIHtcbiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5fcGVuZGluZ0xvY2F0aW9uID0gbG9jYXRpb247XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIHRoaXMuX2lzTW91bnRlZCA9IHRydWU7XG5cbiAgICBpZiAodGhpcy5fcGVuZGluZ0xvY2F0aW9uKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbG9jYXRpb246IHRoaXMuX3BlbmRpbmdMb2NhdGlvblxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh0aGlzLnVubGlzdGVuKSB0aGlzLnVubGlzdGVuKCk7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBoaXN0b3J5OiB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIGxvY2F0aW9uOiB0aGlzLnN0YXRlLmxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogUm91dGVyLmNvbXB1dGVSb290TWF0Y2godGhpcy5zdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSksXG4gICAgICAgIHN0YXRpY0NvbnRleHQ6IHRoaXMucHJvcHMuc3RhdGljQ29udGV4dFxuICAgICAgfVxuICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoaGlzdG9yeUNvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuIHx8IG51bGwsXG4gICAgICB2YWx1ZTogdGhpcy5wcm9wcy5oaXN0b3J5XG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBSb3V0ZXI7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICAgIHN0YXRpY0NvbnRleHQ6IFByb3BUeXBlcy5vYmplY3RcbiAgfTtcblxuICBSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHByZXZQcm9wcy5oaXN0b3J5ID09PSB0aGlzLnByb3BzLmhpc3RvcnksIFwiWW91IGNhbm5vdCBjaGFuZ2UgPFJvdXRlciBoaXN0b3J5PlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHN0b3JlcyBsb2NhdGlvbiBpbiBtZW1vcnkuXG4gKi9cblxudmFyIE1lbW9yeVJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShNZW1vcnlSb3V0ZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbW9yeVJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlTWVtb3J5SGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE1lbW9yeVJvdXRlci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIHtcbiAgICAgIGhpc3Rvcnk6IHRoaXMuaGlzdG9yeSxcbiAgICAgIGNoaWxkcmVuOiB0aGlzLnByb3BzLmNoaWxkcmVuXG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIE1lbW9yeVJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBNZW1vcnlSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGluaXRpYWxFbnRyaWVzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgaW5pdGlhbEluZGV4OiBQcm9wVHlwZXMubnVtYmVyLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGVcbiAgfTtcblxuICBNZW1vcnlSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8TWVtb3J5Um91dGVyPiBpZ25vcmVzIHRoZSBoaXN0b3J5IHByb3AuIFRvIHVzZSBhIGN1c3RvbSBoaXN0b3J5LCBcIiArIFwidXNlIGBpbXBvcnQgeyBSb3V0ZXIgfWAgaW5zdGVhZCBvZiBgaW1wb3J0IHsgTWVtb3J5Um91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciBMaWZlY3ljbGUgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoTGlmZWN5Y2xlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaWZlY3ljbGUoKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IExpZmVjeWNsZS5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Nb3VudCkgdGhpcy5wcm9wcy5vbk1vdW50LmNhbGwodGhpcywgdGhpcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5vblVwZGF0ZSkgdGhpcy5wcm9wcy5vblVwZGF0ZS5jYWxsKHRoaXMsIHRoaXMsIHByZXZQcm9wcyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMub25Vbm1vdW50KSB0aGlzLnByb3BzLm9uVW5tb3VudC5jYWxsKHRoaXMsIHRoaXMpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIExpZmVjeWNsZTtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgcHJvbXB0aW5nIHRoZSB1c2VyIGJlZm9yZSBuYXZpZ2F0aW5nIGF3YXkgZnJvbSBhIHNjcmVlbi5cbiAqL1xuXG5mdW5jdGlvbiBQcm9tcHQoX3JlZikge1xuICB2YXIgbWVzc2FnZSA9IF9yZWYubWVzc2FnZSxcbiAgICAgIF9yZWYkd2hlbiA9IF9yZWYud2hlbixcbiAgICAgIHdoZW4gPSBfcmVmJHdoZW4gPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHdoZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxQcm9tcHQ+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgaWYgKCF3aGVuIHx8IGNvbnRleHQuc3RhdGljQ29udGV4dCkgcmV0dXJuIG51bGw7XG4gICAgdmFyIG1ldGhvZCA9IGNvbnRleHQuaGlzdG9yeS5ibG9jaztcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChMaWZlY3ljbGUsIHtcbiAgICAgIG9uTW91bnQ6IGZ1bmN0aW9uIG9uTW91bnQoc2VsZikge1xuICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICB9LFxuICAgICAgb25VcGRhdGU6IGZ1bmN0aW9uIG9uVXBkYXRlKHNlbGYsIHByZXZQcm9wcykge1xuICAgICAgICBpZiAocHJldlByb3BzLm1lc3NhZ2UgIT09IG1lc3NhZ2UpIHtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UoKTtcbiAgICAgICAgICBzZWxmLnJlbGVhc2UgPSBtZXRob2QobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvblVubW91bnQ6IGZ1bmN0aW9uIG9uVW5tb3VudChzZWxmKSB7XG4gICAgICAgIHNlbGYucmVsZWFzZSgpO1xuICAgICAgfSxcbiAgICAgIG1lc3NhZ2U6IG1lc3NhZ2VcbiAgICB9KTtcbiAgfSk7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIG1lc3NhZ2VUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zdHJpbmddKTtcbiAgUHJvbXB0LnByb3BUeXBlcyA9IHtcbiAgICB3aGVuOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBtZXNzYWdlOiBtZXNzYWdlVHlwZS5pc1JlcXVpcmVkXG4gIH07XG59XG5cbnZhciBjYWNoZSA9IHt9O1xudmFyIGNhY2hlTGltaXQgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50ID0gMDtcblxuZnVuY3Rpb24gY29tcGlsZVBhdGgocGF0aCkge1xuICBpZiAoY2FjaGVbcGF0aF0pIHJldHVybiBjYWNoZVtwYXRoXTtcbiAgdmFyIGdlbmVyYXRvciA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKHBhdGgpO1xuXG4gIGlmIChjYWNoZUNvdW50IDwgY2FjaGVMaW1pdCkge1xuICAgIGNhY2hlW3BhdGhdID0gZ2VuZXJhdG9yO1xuICAgIGNhY2hlQ291bnQrKztcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0b3I7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIGdlbmVyYXRpbmcgYSBVUkwgcGF0aG5hbWUgZnJvbSBhIHBhdGggYW5kIHBhcmFtZXRlcnMuXG4gKi9cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZVBhdGgocGF0aCwgcGFyYW1zKSB7XG4gIGlmIChwYXRoID09PSB2b2lkIDApIHtcbiAgICBwYXRoID0gXCIvXCI7XG4gIH1cblxuICBpZiAocGFyYW1zID09PSB2b2lkIDApIHtcbiAgICBwYXJhbXMgPSB7fTtcbiAgfVxuXG4gIHJldHVybiBwYXRoID09PSBcIi9cIiA/IHBhdGggOiBjb21waWxlUGF0aChwYXRoKShwYXJhbXMsIHtcbiAgICBwcmV0dHk6IHRydWVcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlIHB1YmxpYyBBUEkgZm9yIG5hdmlnYXRpbmcgcHJvZ3JhbW1hdGljYWxseSB3aXRoIGEgY29tcG9uZW50LlxuICovXG5cbmZ1bmN0aW9uIFJlZGlyZWN0KF9yZWYpIHtcbiAgdmFyIGNvbXB1dGVkTWF0Y2ggPSBfcmVmLmNvbXB1dGVkTWF0Y2gsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBfcmVmJHB1c2ggPSBfcmVmLnB1c2gsXG4gICAgICBwdXNoID0gX3JlZiRwdXNoID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkcHVzaDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJlZGlyZWN0PiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgIHZhciBoaXN0b3J5ID0gY29udGV4dC5oaXN0b3J5LFxuICAgICAgICBzdGF0aWNDb250ZXh0ID0gY29udGV4dC5zdGF0aWNDb250ZXh0O1xuICAgIHZhciBtZXRob2QgPSBwdXNoID8gaGlzdG9yeS5wdXNoIDogaGlzdG9yeS5yZXBsYWNlO1xuICAgIHZhciBsb2NhdGlvbiA9IGNyZWF0ZUxvY2F0aW9uKGNvbXB1dGVkTWF0Y2ggPyB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBnZW5lcmF0ZVBhdGgodG8sIGNvbXB1dGVkTWF0Y2gucGFyYW1zKSA6IF9leHRlbmRzKHt9LCB0bywge1xuICAgICAgcGF0aG5hbWU6IGdlbmVyYXRlUGF0aCh0by5wYXRobmFtZSwgY29tcHV0ZWRNYXRjaC5wYXJhbXMpXG4gICAgfSkgOiB0byk7IC8vIFdoZW4gcmVuZGVyaW5nIGluIGEgc3RhdGljIGNvbnRleHQsXG4gICAgLy8gc2V0IHRoZSBuZXcgbG9jYXRpb24gaW1tZWRpYXRlbHkuXG5cbiAgICBpZiAoc3RhdGljQ29udGV4dCkge1xuICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpZmVjeWNsZSwge1xuICAgICAgb25Nb3VudDogZnVuY3Rpb24gb25Nb3VudCgpIHtcbiAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgIH0sXG4gICAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoc2VsZiwgcHJldlByb3BzKSB7XG4gICAgICAgIHZhciBwcmV2TG9jYXRpb24gPSBjcmVhdGVMb2NhdGlvbihwcmV2UHJvcHMudG8pO1xuXG4gICAgICAgIGlmICghbG9jYXRpb25zQXJlRXF1YWwocHJldkxvY2F0aW9uLCBfZXh0ZW5kcyh7fSwgbG9jYXRpb24sIHtcbiAgICAgICAgICBrZXk6IHByZXZMb2NhdGlvbi5rZXlcbiAgICAgICAgfSkpKSB7XG4gICAgICAgICAgbWV0aG9kKGxvY2F0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRvOiB0b1xuICAgIH0pO1xuICB9KTtcbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBSZWRpcmVjdC5wcm9wVHlwZXMgPSB7XG4gICAgcHVzaDogUHJvcFR5cGVzLmJvb2wsXG4gICAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGNhY2hlJDEgPSB7fTtcbnZhciBjYWNoZUxpbWl0JDEgPSAxMDAwMDtcbnZhciBjYWNoZUNvdW50JDEgPSAwO1xuXG5mdW5jdGlvbiBjb21waWxlUGF0aCQxKHBhdGgsIG9wdGlvbnMpIHtcbiAgdmFyIGNhY2hlS2V5ID0gXCJcIiArIG9wdGlvbnMuZW5kICsgb3B0aW9ucy5zdHJpY3QgKyBvcHRpb25zLnNlbnNpdGl2ZTtcbiAgdmFyIHBhdGhDYWNoZSA9IGNhY2hlJDFbY2FjaGVLZXldIHx8IChjYWNoZSQxW2NhY2hlS2V5XSA9IHt9KTtcbiAgaWYgKHBhdGhDYWNoZVtwYXRoXSkgcmV0dXJuIHBhdGhDYWNoZVtwYXRoXTtcbiAgdmFyIGtleXMgPSBbXTtcbiAgdmFyIHJlZ2V4cCA9IHBhdGhUb1JlZ2V4cChwYXRoLCBrZXlzLCBvcHRpb25zKTtcbiAgdmFyIHJlc3VsdCA9IHtcbiAgICByZWdleHA6IHJlZ2V4cCxcbiAgICBrZXlzOiBrZXlzXG4gIH07XG5cbiAgaWYgKGNhY2hlQ291bnQkMSA8IGNhY2hlTGltaXQkMSkge1xuICAgIHBhdGhDYWNoZVtwYXRoXSA9IHJlc3VsdDtcbiAgICBjYWNoZUNvdW50JDErKztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIFB1YmxpYyBBUEkgZm9yIG1hdGNoaW5nIGEgVVJMIHBhdGhuYW1lIHRvIGEgcGF0aC5cbiAqL1xuXG5cbmZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkob3B0aW9ucykpIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgcGF0aDogb3B0aW9uc1xuICAgIH07XG4gIH1cblxuICB2YXIgX29wdGlvbnMgPSBvcHRpb25zLFxuICAgICAgcGF0aCA9IF9vcHRpb25zLnBhdGgsXG4gICAgICBfb3B0aW9ucyRleGFjdCA9IF9vcHRpb25zLmV4YWN0LFxuICAgICAgZXhhY3QgPSBfb3B0aW9ucyRleGFjdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRleGFjdCxcbiAgICAgIF9vcHRpb25zJHN0cmljdCA9IF9vcHRpb25zLnN0cmljdCxcbiAgICAgIHN0cmljdCA9IF9vcHRpb25zJHN0cmljdCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfb3B0aW9ucyRzdHJpY3QsXG4gICAgICBfb3B0aW9ucyRzZW5zaXRpdmUgPSBfb3B0aW9ucy5zZW5zaXRpdmUsXG4gICAgICBzZW5zaXRpdmUgPSBfb3B0aW9ucyRzZW5zaXRpdmUgPT09IHZvaWQgMCA/IGZhbHNlIDogX29wdGlvbnMkc2Vuc2l0aXZlO1xuICB2YXIgcGF0aHMgPSBbXS5jb25jYXQocGF0aCk7XG4gIHJldHVybiBwYXRocy5yZWR1Y2UoZnVuY3Rpb24gKG1hdGNoZWQsIHBhdGgpIHtcbiAgICBpZiAoIXBhdGggJiYgcGF0aCAhPT0gXCJcIikgcmV0dXJuIG51bGw7XG4gICAgaWYgKG1hdGNoZWQpIHJldHVybiBtYXRjaGVkO1xuXG4gICAgdmFyIF9jb21waWxlUGF0aCA9IGNvbXBpbGVQYXRoJDEocGF0aCwge1xuICAgICAgZW5kOiBleGFjdCxcbiAgICAgIHN0cmljdDogc3RyaWN0LFxuICAgICAgc2Vuc2l0aXZlOiBzZW5zaXRpdmVcbiAgICB9KSxcbiAgICAgICAgcmVnZXhwID0gX2NvbXBpbGVQYXRoLnJlZ2V4cCxcbiAgICAgICAga2V5cyA9IF9jb21waWxlUGF0aC5rZXlzO1xuXG4gICAgdmFyIG1hdGNoID0gcmVnZXhwLmV4ZWMocGF0aG5hbWUpO1xuICAgIGlmICghbWF0Y2gpIHJldHVybiBudWxsO1xuICAgIHZhciB1cmwgPSBtYXRjaFswXSxcbiAgICAgICAgdmFsdWVzID0gbWF0Y2guc2xpY2UoMSk7XG4gICAgdmFyIGlzRXhhY3QgPSBwYXRobmFtZSA9PT0gdXJsO1xuICAgIGlmIChleGFjdCAmJiAhaXNFeGFjdCkgcmV0dXJuIG51bGw7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhdGg6IHBhdGgsXG4gICAgICAvLyB0aGUgcGF0aCB1c2VkIHRvIG1hdGNoXG4gICAgICB1cmw6IHBhdGggPT09IFwiL1wiICYmIHVybCA9PT0gXCJcIiA/IFwiL1wiIDogdXJsLFxuICAgICAgLy8gdGhlIG1hdGNoZWQgcG9ydGlvbiBvZiB0aGUgVVJMXG4gICAgICBpc0V4YWN0OiBpc0V4YWN0LFxuICAgICAgLy8gd2hldGhlciBvciBub3Qgd2UgbWF0Y2hlZCBleGFjdGx5XG4gICAgICBwYXJhbXM6IGtleXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBrZXksIGluZGV4KSB7XG4gICAgICAgIG1lbW9ba2V5Lm5hbWVdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIG1lbW87XG4gICAgICB9LCB7fSlcbiAgICB9O1xuICB9LCBudWxsKTtcbn1cblxuZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBSZWFjdC5DaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59XG5cbmZ1bmN0aW9uIGV2YWxDaGlsZHJlbkRldihjaGlsZHJlbiwgcHJvcHMsIHBhdGgpIHtcbiAgdmFyIHZhbHVlID0gY2hpbGRyZW4ocHJvcHMpO1xuICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKHZhbHVlICE9PSB1bmRlZmluZWQsIFwiWW91IHJldHVybmVkIGB1bmRlZmluZWRgIGZyb20gdGhlIGBjaGlsZHJlbmAgZnVuY3Rpb24gb2YgXCIgKyAoXCI8Um91dGVcIiArIChwYXRoID8gXCIgcGF0aD1cXFwiXCIgKyBwYXRoICsgXCJcXFwiXCIgOiBcIlwiKSArIFwiPiwgYnV0IHlvdSBcIikgKyBcInNob3VsZCBoYXZlIHJldHVybmVkIGEgUmVhY3QgZWxlbWVudCBvciBgbnVsbGBcIikgOiB2b2lkIDA7XG4gIHJldHVybiB2YWx1ZSB8fCBudWxsO1xufVxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgbWF0Y2hpbmcgYSBzaW5nbGUgcGF0aCBhbmQgcmVuZGVyaW5nLlxuICovXG5cblxudmFyIFJvdXRlID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJvdXRlLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSb3V0ZSgpIHtcbiAgICByZXR1cm4gX1JlYWN0JENvbXBvbmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gUm91dGUucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KGNvbnRleHQuQ29uc3VtZXIsIG51bGwsIGZ1bmN0aW9uIChjb250ZXh0JDEpIHtcbiAgICAgICFjb250ZXh0JDEgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZT4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHZhciBsb2NhdGlvbiA9IF90aGlzLnByb3BzLmxvY2F0aW9uIHx8IGNvbnRleHQkMS5sb2NhdGlvbjtcbiAgICAgIHZhciBtYXRjaCA9IF90aGlzLnByb3BzLmNvbXB1dGVkTWF0Y2ggPyBfdGhpcy5wcm9wcy5jb21wdXRlZE1hdGNoIC8vIDxTd2l0Y2g+IGFscmVhZHkgY29tcHV0ZWQgdGhlIG1hdGNoIGZvciB1c1xuICAgICAgOiBfdGhpcy5wcm9wcy5wYXRoID8gbWF0Y2hQYXRoKGxvY2F0aW9uLnBhdGhuYW1lLCBfdGhpcy5wcm9wcykgOiBjb250ZXh0JDEubWF0Y2g7XG5cbiAgICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCBjb250ZXh0JDEsIHtcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBtYXRjaDogbWF0Y2hcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuLFxuICAgICAgICAgIGNvbXBvbmVudCA9IF90aGlzJHByb3BzLmNvbXBvbmVudCxcbiAgICAgICAgICByZW5kZXIgPSBfdGhpcyRwcm9wcy5yZW5kZXI7IC8vIFByZWFjdCB1c2VzIGFuIGVtcHR5IGFycmF5IGFzIGNoaWxkcmVuIGJ5XG4gICAgICAvLyBkZWZhdWx0LCBzbyB1c2UgbnVsbCBpZiB0aGF0J3MgdGhlIGNhc2UuXG5cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSAmJiBjaGlsZHJlbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgY2hpbGRyZW4gPSBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgICAgIHZhbHVlOiBwcm9wc1xuICAgICAgfSwgcHJvcHMubWF0Y2ggPyBjaGlsZHJlbiA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBjaGlsZHJlbiA6IGNvbXBvbmVudCA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcykgOiByZW5kZXIgPyByZW5kZXIocHJvcHMpIDogbnVsbCA6IHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJmdW5jdGlvblwiID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gZXZhbENoaWxkcmVuRGV2KGNoaWxkcmVuLCBwcm9wcywgX3RoaXMucHJvcHMucGF0aCkgOiBjaGlsZHJlbihwcm9wcykgOiBudWxsKTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gUm91dGU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgUm91dGUucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZnVuYywgUHJvcFR5cGVzLm5vZGVdKSxcbiAgICBjb21wb25lbnQ6IGZ1bmN0aW9uIGNvbXBvbmVudChwcm9wcywgcHJvcE5hbWUpIHtcbiAgICAgIGlmIChwcm9wc1twcm9wTmFtZV0gJiYgIWlzVmFsaWRFbGVtZW50VHlwZShwcm9wc1twcm9wTmFtZV0pKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgJ2NvbXBvbmVudCcgc3VwcGxpZWQgdG8gJ1JvdXRlJzogdGhlIHByb3AgaXMgbm90IGEgdmFsaWQgUmVhY3QgY29tcG9uZW50XCIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGxvY2F0aW9uOiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIHBhdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5zdHJpbmcpXSksXG4gICAgcmVuZGVyOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2xcbiAgfTtcblxuICBSb3V0ZS5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLmNvbXBvbmVudCksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSBjb21wb25lbnQ+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIWlzRW1wdHlDaGlsZHJlbih0aGlzLnByb3BzLmNoaWxkcmVuKSAmJiB0aGlzLnByb3BzLnJlbmRlciksIFwiWW91IHNob3VsZCBub3QgdXNlIDxSb3V0ZSByZW5kZXI+IGFuZCA8Um91dGUgY2hpbGRyZW4+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gd2FybmluZyghKHRoaXMucHJvcHMuY29tcG9uZW50ICYmIHRoaXMucHJvcHMucmVuZGVyKSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPFJvdXRlIGNvbXBvbmVudD4gYW5kIDxSb3V0ZSByZW5kZXI+IGluIHRoZSBzYW1lIHJvdXRlOyA8Um91dGUgcmVuZGVyPiB3aWxsIGJlIGlnbm9yZWRcIikgOiB2b2lkIDA7XG4gIH07XG5cbiAgUm91dGUucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIChwcmV2UHJvcHMpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEodGhpcy5wcm9wcy5sb2NhdGlvbiAmJiAhcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxSb3V0ZT4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSBjb250cm9sbGVkIHRvIHVuY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBwcm92aWRlZCBhIFwibG9jYXRpb25cIiBwcm9wIGluaXRpYWxseSBidXQgb21pdHRlZCBpdCBvbiBhIHN1YnNlcXVlbnQgcmVuZGVyLicpIDogdm9pZCAwO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhZGRMZWFkaW5nU2xhc2gocGF0aCkge1xuICByZXR1cm4gcGF0aC5jaGFyQXQoMCkgPT09IFwiL1wiID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuZnVuY3Rpb24gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBsb2NhdGlvbiwge1xuICAgIHBhdGhuYW1lOiBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpICsgbG9jYXRpb24ucGF0aG5hbWVcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGxvY2F0aW9uKSB7XG4gIGlmICghYmFzZW5hbWUpIHJldHVybiBsb2NhdGlvbjtcbiAgdmFyIGJhc2UgPSBhZGRMZWFkaW5nU2xhc2goYmFzZW5hbWUpO1xuICBpZiAobG9jYXRpb24ucGF0aG5hbWUuaW5kZXhPZihiYXNlKSAhPT0gMCkgcmV0dXJuIGxvY2F0aW9uO1xuICByZXR1cm4gX2V4dGVuZHMoe30sIGxvY2F0aW9uLCB7XG4gICAgcGF0aG5hbWU6IGxvY2F0aW9uLnBhdGhuYW1lLnN1YnN0cihiYXNlLmxlbmd0aClcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVVSTChsb2NhdGlvbikge1xuICByZXR1cm4gdHlwZW9mIGxvY2F0aW9uID09PSBcInN0cmluZ1wiID8gbG9jYXRpb24gOiBjcmVhdGVQYXRoKGxvY2F0aW9uKTtcbn1cblxuZnVuY3Rpb24gc3RhdGljSGFuZGxlcihtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgY2Fubm90ICVzIHdpdGggPFN0YXRpY1JvdXRlcj5cIiwgbWV0aG9kTmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpIDtcbiAgfTtcbn1cblxuZnVuY3Rpb24gbm9vcCgpIHt9XG4vKipcbiAqIFRoZSBwdWJsaWMgdG9wLWxldmVsIEFQSSBmb3IgYSBcInN0YXRpY1wiIDxSb3V0ZXI+LCBzby1jYWxsZWQgYmVjYXVzZSBpdFxuICogY2FuJ3QgYWN0dWFsbHkgY2hhbmdlIHRoZSBjdXJyZW50IGxvY2F0aW9uLiBJbnN0ZWFkLCBpdCBqdXN0IHJlY29yZHNcbiAqIGxvY2F0aW9uIGNoYW5nZXMgaW4gYSBjb250ZXh0IG9iamVjdC4gVXNlZnVsIG1haW5seSBpbiB0ZXN0aW5nIGFuZFxuICogc2VydmVyLXJlbmRlcmluZyBzY2VuYXJpb3MuXG4gKi9cblxuXG52YXIgU3RhdGljUm91dGVyID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFN0YXRpY1JvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gU3RhdGljUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUFVTSFwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgcmV0dXJuIF90aGlzLm5hdmlnYXRlVG8obG9jYXRpb24sIFwiUkVQTEFDRVwiKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlTGlzdGVuID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUJsb2NrID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG5vb3A7XG4gICAgfTtcblxuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBTdGF0aWNSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5uYXZpZ2F0ZVRvID0gZnVuY3Rpb24gbmF2aWdhdGVUbyhsb2NhdGlvbiwgYWN0aW9uKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMkYmFzZW5hbWUgPSBfdGhpcyRwcm9wcy5iYXNlbmFtZSxcbiAgICAgICAgYmFzZW5hbWUgPSBfdGhpcyRwcm9wcyRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzJGJhc2VuYW1lLFxuICAgICAgICBfdGhpcyRwcm9wcyRjb250ZXh0ID0gX3RoaXMkcHJvcHMuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzJGNvbnRleHQgPT09IHZvaWQgMCA/IHt9IDogX3RoaXMkcHJvcHMkY29udGV4dDtcbiAgICBjb250ZXh0LmFjdGlvbiA9IGFjdGlvbjtcbiAgICBjb250ZXh0LmxvY2F0aW9uID0gYWRkQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSk7XG4gICAgY29udGV4dC51cmwgPSBjcmVhdGVVUkwoY29udGV4dC5sb2NhdGlvbik7XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGJhc2VuYW1lID0gX3RoaXMkcHJvcHMyLmJhc2VuYW1lLFxuICAgICAgICBiYXNlbmFtZSA9IF90aGlzJHByb3BzMiRiYXNlbmFtZSA9PT0gdm9pZCAwID8gXCJcIiA6IF90aGlzJHByb3BzMiRiYXNlbmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGNvbnRleHQgPSBfdGhpcyRwcm9wczIuY29udGV4dCxcbiAgICAgICAgY29udGV4dCA9IF90aGlzJHByb3BzMiRjb250ZXh0ID09PSB2b2lkIDAgPyB7fSA6IF90aGlzJHByb3BzMiRjb250ZXh0LFxuICAgICAgICBfdGhpcyRwcm9wczIkbG9jYXRpb24gPSBfdGhpcyRwcm9wczIubG9jYXRpb24sXG4gICAgICAgIGxvY2F0aW9uID0gX3RoaXMkcHJvcHMyJGxvY2F0aW9uID09PSB2b2lkIDAgPyBcIi9cIiA6IF90aGlzJHByb3BzMiRsb2NhdGlvbixcbiAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiwgW1wiYmFzZW5hbWVcIiwgXCJjb250ZXh0XCIsIFwibG9jYXRpb25cIl0pO1xuXG4gICAgdmFyIGhpc3RvcnkgPSB7XG4gICAgICBjcmVhdGVIcmVmOiBmdW5jdGlvbiBjcmVhdGVIcmVmKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGFkZExlYWRpbmdTbGFzaChiYXNlbmFtZSArIGNyZWF0ZVVSTChwYXRoKSk7XG4gICAgICB9LFxuICAgICAgYWN0aW9uOiBcIlBPUFwiLFxuICAgICAgbG9jYXRpb246IHN0cmlwQmFzZW5hbWUoYmFzZW5hbWUsIGNyZWF0ZUxvY2F0aW9uKGxvY2F0aW9uKSksXG4gICAgICBwdXNoOiB0aGlzLmhhbmRsZVB1c2gsXG4gICAgICByZXBsYWNlOiB0aGlzLmhhbmRsZVJlcGxhY2UsXG4gICAgICBnbzogc3RhdGljSGFuZGxlcihcImdvXCIpLFxuICAgICAgZ29CYWNrOiBzdGF0aWNIYW5kbGVyKFwiZ29CYWNrXCIpLFxuICAgICAgZ29Gb3J3YXJkOiBzdGF0aWNIYW5kbGVyKFwiZ29Gb3J3YXJkXCIpLFxuICAgICAgbGlzdGVuOiB0aGlzLmhhbmRsZUxpc3RlbixcbiAgICAgIGJsb2NrOiB0aGlzLmhhbmRsZUJsb2NrXG4gICAgfTtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBoaXN0b3J5OiBoaXN0b3J5LFxuICAgICAgc3RhdGljQ29udGV4dDogY29udGV4dFxuICAgIH0pKTtcbiAgfTtcblxuICByZXR1cm4gU3RhdGljUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIFN0YXRpY1JvdXRlci5wcm9wVHlwZXMgPSB7XG4gICAgYmFzZW5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm9iamVjdF0pXG4gIH07XG5cbiAgU3RhdGljUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPFN0YXRpY1JvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IFN0YXRpY1JvdXRlciBhcyBSb3V0ZXIgfWAuXCIpIDogdm9pZCAwO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgdGhlIGZpcnN0IDxSb3V0ZT4gdGhhdCBtYXRjaGVzLlxuICovXG5cbnZhciBTd2l0Y2ggPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoU3dpdGNoLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBTd2l0Y2goKSB7XG4gICAgcmV0dXJuIF9SZWFjdCRDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN3aXRjaC5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICFjb250ZXh0ID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBzaG91bGQgbm90IHVzZSA8U3dpdGNoPiBvdXRzaWRlIGEgPFJvdXRlcj5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgdmFyIGxvY2F0aW9uID0gX3RoaXMucHJvcHMubG9jYXRpb24gfHwgY29udGV4dC5sb2NhdGlvbjtcbiAgICAgIHZhciBlbGVtZW50LCBtYXRjaDsgLy8gV2UgdXNlIFJlYWN0LkNoaWxkcmVuLmZvckVhY2ggaW5zdGVhZCBvZiBSZWFjdC5DaGlsZHJlbi50b0FycmF5KCkuZmluZCgpXG4gICAgICAvLyBoZXJlIGJlY2F1c2UgdG9BcnJheSBhZGRzIGtleXMgdG8gYWxsIGNoaWxkIGVsZW1lbnRzIGFuZCB3ZSBkbyBub3Qgd2FudFxuICAgICAgLy8gdG8gdHJpZ2dlciBhbiB1bm1vdW50L3JlbW91bnQgZm9yIHR3byA8Um91dGU+cyB0aGF0IHJlbmRlciB0aGUgc2FtZVxuICAgICAgLy8gY29tcG9uZW50IGF0IGRpZmZlcmVudCBVUkxzLlxuXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKF90aGlzLnByb3BzLmNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgaWYgKG1hdGNoID09IG51bGwgJiYgUmVhY3QuaXNWYWxpZEVsZW1lbnQoY2hpbGQpKSB7XG4gICAgICAgICAgZWxlbWVudCA9IGNoaWxkO1xuICAgICAgICAgIHZhciBwYXRoID0gY2hpbGQucHJvcHMucGF0aCB8fCBjaGlsZC5wcm9wcy5mcm9tO1xuICAgICAgICAgIG1hdGNoID0gcGF0aCA/IG1hdGNoUGF0aChsb2NhdGlvbi5wYXRobmFtZSwgX2V4dGVuZHMoe30sIGNoaWxkLnByb3BzLCB7XG4gICAgICAgICAgICBwYXRoOiBwYXRoXG4gICAgICAgICAgfSkpIDogY29udGV4dC5tYXRjaDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gbWF0Y2ggPyBSZWFjdC5jbG9uZUVsZW1lbnQoZWxlbWVudCwge1xuICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgIGNvbXB1dGVkTWF0Y2g6IG1hdGNoXG4gICAgICB9KSA6IG51bGw7XG4gICAgfSk7XG4gIH07XG5cbiAgcmV0dXJuIFN3aXRjaDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBTd2l0Y2gucHJvcFR5cGVzID0ge1xuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdFxuICB9O1xuXG4gIFN3aXRjaC5wcm90b3R5cGUuY29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gKHByZXZQcm9wcykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoISh0aGlzLnByb3BzLmxvY2F0aW9uICYmICFwcmV2UHJvcHMubG9jYXRpb24pLCAnPFN3aXRjaD4gZWxlbWVudHMgc2hvdWxkIG5vdCBjaGFuZ2UgZnJvbSB1bmNvbnRyb2xsZWQgdG8gY29udHJvbGxlZCAob3IgdmljZSB2ZXJzYSkuIFlvdSBpbml0aWFsbHkgdXNlZCBubyBcImxvY2F0aW9uXCIgcHJvcCBhbmQgdGhlbiBwcm92aWRlZCBvbmUgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCEoIXRoaXMucHJvcHMubG9jYXRpb24gJiYgcHJldlByb3BzLmxvY2F0aW9uKSwgJzxTd2l0Y2g+IGVsZW1lbnRzIHNob3VsZCBub3QgY2hhbmdlIGZyb20gY29udHJvbGxlZCB0byB1bmNvbnRyb2xsZWQgKG9yIHZpY2UgdmVyc2EpLiBZb3UgcHJvdmlkZWQgYSBcImxvY2F0aW9uXCIgcHJvcCBpbml0aWFsbHkgYnV0IG9taXR0ZWQgaXQgb24gYSBzdWJzZXF1ZW50IHJlbmRlci4nKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBBIHB1YmxpYyBoaWdoZXItb3JkZXIgY29tcG9uZW50IHRvIGFjY2VzcyB0aGUgaW1wZXJhdGl2ZSBBUElcbiAqL1xuXG5mdW5jdGlvbiB3aXRoUm91dGVyKENvbXBvbmVudCkge1xuICB2YXIgZGlzcGxheU5hbWUgPSBcIndpdGhSb3V0ZXIoXCIgKyAoQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudC5uYW1lKSArIFwiKVwiO1xuXG4gIHZhciBDID0gZnVuY3Rpb24gQyhwcm9wcykge1xuICAgIHZhciB3cmFwcGVkQ29tcG9uZW50UmVmID0gcHJvcHMud3JhcHBlZENvbXBvbmVudFJlZixcbiAgICAgICAgcmVtYWluaW5nUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wid3JhcHBlZENvbXBvbmVudFJlZlwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChjb250ZXh0LkNvbnN1bWVyLCBudWxsLCBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgIWNvbnRleHQgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IHNob3VsZCBub3QgdXNlIDxcIiArIGRpc3BsYXlOYW1lICsgXCIgLz4gb3V0c2lkZSBhIDxSb3V0ZXI+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbXBvbmVudCwgX2V4dGVuZHMoe30sIHJlbWFpbmluZ1Byb3BzLCBjb250ZXh0LCB7XG4gICAgICAgIHJlZjogd3JhcHBlZENvbXBvbmVudFJlZlxuICAgICAgfSkpO1xuICAgIH0pO1xuICB9O1xuXG4gIEMuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgQy5XcmFwcGVkQ29tcG9uZW50ID0gQ29tcG9uZW50O1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBDLnByb3BUeXBlcyA9IHtcbiAgICAgIHdyYXBwZWRDb21wb25lbnRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMub2JqZWN0XSlcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGhvaXN0U3RhdGljcyhDLCBDb21wb25lbnQpO1xufVxuXG52YXIgdXNlQ29udGV4dCA9IFJlYWN0LnVzZUNvbnRleHQ7XG5mdW5jdGlvbiB1c2VIaXN0b3J5KCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlSGlzdG9yeSgpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHJldHVybiB1c2VDb250ZXh0KGhpc3RvcnlDb250ZXh0KTtcbn1cbmZ1bmN0aW9uIHVzZUxvY2F0aW9uKCkge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgISh0eXBlb2YgdXNlQ29udGV4dCA9PT0gXCJmdW5jdGlvblwiKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3UgbXVzdCB1c2UgUmVhY3QgPj0gMTYuOCBpbiBvcmRlciB0byB1c2UgdXNlTG9jYXRpb24oKVwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICByZXR1cm4gdXNlQ29udGV4dChjb250ZXh0KS5sb2NhdGlvbjtcbn1cbmZ1bmN0aW9uIHVzZVBhcmFtcygpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICEodHlwZW9mIHVzZUNvbnRleHQgPT09IFwiZnVuY3Rpb25cIikgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiWW91IG11c3QgdXNlIFJlYWN0ID49IDE2LjggaW4gb3JkZXIgdG8gdXNlIHVzZVBhcmFtcygpXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgfVxuXG4gIHZhciBtYXRjaCA9IHVzZUNvbnRleHQoY29udGV4dCkubWF0Y2g7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoLnBhcmFtcyA6IHt9O1xufVxuZnVuY3Rpb24gdXNlUm91dGVNYXRjaChwYXRoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAhKHR5cGVvZiB1c2VDb250ZXh0ID09PSBcImZ1bmN0aW9uXCIpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIllvdSBtdXN0IHVzZSBSZWFjdCA+PSAxNi44IGluIG9yZGVyIHRvIHVzZSB1c2VSb3V0ZU1hdGNoKClcIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICB9XG5cbiAgdmFyIGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcbiAgdmFyIG1hdGNoID0gdXNlQ29udGV4dChjb250ZXh0KS5tYXRjaDtcbiAgcmV0dXJuIHBhdGggPyBtYXRjaFBhdGgobG9jYXRpb24ucGF0aG5hbWUsIHBhdGgpIDogbWF0Y2g7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgZ2xvYmFsID0gd2luZG93O1xuICAgIHZhciBrZXkgPSBcIl9fcmVhY3Rfcm91dGVyX2J1aWxkX19cIjtcbiAgICB2YXIgYnVpbGROYW1lcyA9IHtcbiAgICAgIGNqczogXCJDb21tb25KU1wiLFxuICAgICAgZXNtOiBcIkVTIG1vZHVsZXNcIixcbiAgICAgIHVtZDogXCJVTURcIlxuICAgIH07XG5cbiAgICBpZiAoZ2xvYmFsW2tleV0gJiYgZ2xvYmFsW2tleV0gIT09IFwiZXNtXCIpIHtcbiAgICAgIHZhciBpbml0aWFsQnVpbGROYW1lID0gYnVpbGROYW1lc1tnbG9iYWxba2V5XV07XG4gICAgICB2YXIgc2Vjb25kYXJ5QnVpbGROYW1lID0gYnVpbGROYW1lc1tcImVzbVwiXTsgLy8gVE9ETzogQWRkIGxpbmsgdG8gYXJ0aWNsZSB0aGF0IGV4cGxhaW5zIGluIGRldGFpbCBob3cgdG8gYXZvaWRcbiAgICAgIC8vIGxvYWRpbmcgMiBkaWZmZXJlbnQgYnVpbGRzLlxuXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgYXJlIGxvYWRpbmcgdGhlIFwiICsgc2Vjb25kYXJ5QnVpbGROYW1lICsgXCIgYnVpbGQgb2YgUmVhY3QgUm91dGVyIFwiICsgKFwib24gYSBwYWdlIHRoYXQgaXMgYWxyZWFkeSBydW5uaW5nIHRoZSBcIiArIGluaXRpYWxCdWlsZE5hbWUgKyBcIiBcIikgKyBcImJ1aWxkLCBzbyB0aGluZ3Mgd29uJ3Qgd29yayByaWdodC5cIik7XG4gICAgfVxuXG4gICAgZ2xvYmFsW2tleV0gPSBcImVzbVwiO1xuICB9XG59XG5cbmV4cG9ydCB7IE1lbW9yeVJvdXRlciwgUHJvbXB0LCBSZWRpcmVjdCwgUm91dGUsIFJvdXRlciwgU3RhdGljUm91dGVyLCBTd2l0Y2gsIGhpc3RvcnlDb250ZXh0IGFzIF9fSGlzdG9yeUNvbnRleHQsIGNvbnRleHQgYXMgX19Sb3V0ZXJDb250ZXh0LCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3Qtcm91dGVyLmpzLm1hcFxuIiwiaW1wb3J0IHsgUm91dGVyLCBfX1JvdXRlckNvbnRleHQsIG1hdGNoUGF0aCB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5leHBvcnQgeyBNZW1vcnlSb3V0ZXIsIFByb21wdCwgUmVkaXJlY3QsIFJvdXRlLCBSb3V0ZXIsIFN0YXRpY1JvdXRlciwgU3dpdGNoLCBnZW5lcmF0ZVBhdGgsIG1hdGNoUGF0aCwgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24sIHVzZVBhcmFtcywgdXNlUm91dGVNYXRjaCwgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3Nlckhpc3RvcnksIGNyZWF0ZUhhc2hIaXN0b3J5LCBjcmVhdGVMb2NhdGlvbiB9IGZyb20gJ2hpc3RvcnknO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB3YXJuaW5nIGZyb20gJ3Rpbnktd2FybmluZyc7XG5pbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgSFRNTDUgaGlzdG9yeS5cbiAqL1xuXG52YXIgQnJvd3NlclJvdXRlciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShCcm93c2VyUm91dGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBCcm93c2VyUm91dGVyKCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuICAgIF90aGlzLmhpc3RvcnkgPSBjcmVhdGVCcm93c2VySGlzdG9yeShfdGhpcy5wcm9wcyk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGVyLCB7XG4gICAgICBoaXN0b3J5OiB0aGlzLmhpc3RvcnksXG4gICAgICBjaGlsZHJlbjogdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBCcm93c2VyUm91dGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIEJyb3dzZXJSb3V0ZXIucHJvcFR5cGVzID0ge1xuICAgIGJhc2VuYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbiAgICBmb3JjZVJlZnJlc2g6IFByb3BUeXBlcy5ib29sLFxuICAgIGdldFVzZXJDb25maXJtYXRpb246IFByb3BUeXBlcy5mdW5jLFxuICAgIGtleUxlbmd0aDogUHJvcFR5cGVzLm51bWJlclxuICB9O1xuXG4gIEJyb3dzZXJSb3V0ZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHdhcm5pbmcoIXRoaXMucHJvcHMuaGlzdG9yeSwgXCI8QnJvd3NlclJvdXRlcj4gaWdub3JlcyB0aGUgaGlzdG9yeSBwcm9wLiBUbyB1c2UgYSBjdXN0b20gaGlzdG9yeSwgXCIgKyBcInVzZSBgaW1wb3J0IHsgUm91dGVyIH1gIGluc3RlYWQgb2YgYGltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyIH1gLlwiKSA6IHZvaWQgMDtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgcHVibGljIEFQSSBmb3IgYSA8Um91dGVyPiB0aGF0IHVzZXMgd2luZG93LmxvY2F0aW9uLmhhc2guXG4gKi9cblxudmFyIEhhc2hSb3V0ZXIgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoSGFzaFJvdXRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gSGFzaFJvdXRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkgfHwgdGhpcztcbiAgICBfdGhpcy5oaXN0b3J5ID0gY3JlYXRlSGFzaEhpc3RvcnkoX3RoaXMucHJvcHMpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBIYXNoUm91dGVyLnByb3RvdHlwZTtcblxuICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlciwge1xuICAgICAgaGlzdG9yeTogdGhpcy5oaXN0b3J5LFxuICAgICAgY2hpbGRyZW46IHRoaXMucHJvcHMuY2hpbGRyZW5cbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gSGFzaFJvdXRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBIYXNoUm91dGVyLnByb3BUeXBlcyA9IHtcbiAgICBiYXNlbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gICAgZ2V0VXNlckNvbmZpcm1hdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaGFzaFR5cGU6IFByb3BUeXBlcy5vbmVPZihbXCJoYXNoYmFuZ1wiLCBcIm5vc2xhc2hcIiwgXCJzbGFzaFwiXSlcbiAgfTtcblxuICBIYXNoUm91dGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uICgpIHtcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB3YXJuaW5nKCF0aGlzLnByb3BzLmhpc3RvcnksIFwiPEhhc2hSb3V0ZXI+IGlnbm9yZXMgdGhlIGhpc3RvcnkgcHJvcC4gVG8gdXNlIGEgY3VzdG9tIGhpc3RvcnksIFwiICsgXCJ1c2UgYGltcG9ydCB7IFJvdXRlciB9YCBpbnN0ZWFkIG9mIGBpbXBvcnQgeyBIYXNoUm91dGVyIGFzIFJvdXRlciB9YC5cIikgOiB2b2lkIDA7XG4gIH07XG59XG5cbnZhciByZXNvbHZlVG9Mb2NhdGlvbiA9IGZ1bmN0aW9uIHJlc29sdmVUb0xvY2F0aW9uKHRvLCBjdXJyZW50TG9jYXRpb24pIHtcbiAgcmV0dXJuIHR5cGVvZiB0byA9PT0gXCJmdW5jdGlvblwiID8gdG8oY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcbnZhciBub3JtYWxpemVUb0xvY2F0aW9uID0gZnVuY3Rpb24gbm9ybWFsaXplVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSB7XG4gIHJldHVybiB0eXBlb2YgdG8gPT09IFwic3RyaW5nXCIgPyBjcmVhdGVMb2NhdGlvbih0bywgbnVsbCwgbnVsbCwgY3VycmVudExvY2F0aW9uKSA6IHRvO1xufTtcblxudmFyIGZvcndhcmRSZWZTaGltID0gZnVuY3Rpb24gZm9yd2FyZFJlZlNoaW0oQykge1xuICByZXR1cm4gQztcbn07XG5cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmb3J3YXJkUmVmU2hpbTtcbn1cblxuZnVuY3Rpb24gaXNNb2RpZmllZEV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiAhIShldmVudC5tZXRhS2V5IHx8IGV2ZW50LmFsdEtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5KTtcbn1cblxudmFyIExpbmtBbmNob3IgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIGlubmVyUmVmID0gX3JlZi5pbm5lclJlZixcbiAgICAgIG5hdmlnYXRlID0gX3JlZi5uYXZpZ2F0ZSxcbiAgICAgIF9vbkNsaWNrID0gX3JlZi5vbkNsaWNrLFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImlubmVyUmVmXCIsIFwibmF2aWdhdGVcIiwgXCJvbkNsaWNrXCJdKTtcblxuICB2YXIgdGFyZ2V0ID0gcmVzdC50YXJnZXQ7XG5cbiAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHJlc3QsIHtcbiAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoX29uQ2xpY2spIF9vbkNsaWNrKGV2ZW50KTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRocm93IGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgLy8gb25DbGljayBwcmV2ZW50ZWQgZGVmYXVsdFxuICAgICAgZXZlbnQuYnV0dG9uID09PSAwICYmICggLy8gaWdub3JlIGV2ZXJ5dGhpbmcgYnV0IGxlZnQgY2xpY2tzXG4gICAgICAhdGFyZ2V0IHx8IHRhcmdldCA9PT0gXCJfc2VsZlwiKSAmJiAvLyBsZXQgYnJvd3NlciBoYW5kbGUgXCJ0YXJnZXQ9X2JsYW5rXCIgZXRjLlxuICAgICAgIWlzTW9kaWZpZWRFdmVudChldmVudCkgLy8gaWdub3JlIGNsaWNrcyB3aXRoIG1vZGlmaWVyIGtleXNcbiAgICAgICkge1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgbmF2aWdhdGUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgfSk7IC8vIFJlYWN0IDE1IGNvbXBhdFxuXG5cbiAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICB9IGVsc2Uge1xuICAgIHByb3BzLnJlZiA9IGlubmVyUmVmO1xuICB9XG4gIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBqc3gtYTExeS9hbmNob3ItaGFzLWNvbnRlbnQgKi9cblxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBwcm9wcyk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBMaW5rQW5jaG9yLmRpc3BsYXlOYW1lID0gXCJMaW5rQW5jaG9yXCI7XG59XG4vKipcbiAqIFRoZSBwdWJsaWMgQVBJIGZvciByZW5kZXJpbmcgYSBoaXN0b3J5LWF3YXJlIDxhPi5cbiAqL1xuXG5cbnZhciBMaW5rID0gZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZjIsIGZvcndhcmRlZFJlZikge1xuICB2YXIgX3JlZjIkY29tcG9uZW50ID0gX3JlZjIuY29tcG9uZW50LFxuICAgICAgY29tcG9uZW50ID0gX3JlZjIkY29tcG9uZW50ID09PSB2b2lkIDAgPyBMaW5rQW5jaG9yIDogX3JlZjIkY29tcG9uZW50LFxuICAgICAgcmVwbGFjZSA9IF9yZWYyLnJlcGxhY2UsXG4gICAgICB0byA9IF9yZWYyLnRvLFxuICAgICAgaW5uZXJSZWYgPSBfcmVmMi5pbm5lclJlZixcbiAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiY29tcG9uZW50XCIsIFwicmVwbGFjZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPExpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGhpc3RvcnkgPSBjb250ZXh0Lmhpc3Rvcnk7XG4gICAgdmFyIGxvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbiksIGNvbnRleHQubG9jYXRpb24pO1xuICAgIHZhciBocmVmID0gbG9jYXRpb24gPyBoaXN0b3J5LmNyZWF0ZUhyZWYobG9jYXRpb24pIDogXCJcIjtcblxuICAgIHZhciBwcm9wcyA9IF9leHRlbmRzKHt9LCByZXN0LCB7XG4gICAgICBocmVmOiBocmVmLFxuICAgICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKCkge1xuICAgICAgICB2YXIgbG9jYXRpb24gPSByZXNvbHZlVG9Mb2NhdGlvbih0bywgY29udGV4dC5sb2NhdGlvbik7XG4gICAgICAgIHZhciBtZXRob2QgPSByZXBsYWNlID8gaGlzdG9yeS5yZXBsYWNlIDogaGlzdG9yeS5wdXNoO1xuICAgICAgICBtZXRob2QobG9jYXRpb24pO1xuICAgICAgfVxuICAgIH0pOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltICE9PSBmb3J3YXJkUmVmKSB7XG4gICAgICBwcm9wcy5yZWYgPSBmb3J3YXJkZWRSZWYgfHwgaW5uZXJSZWY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHByb3BzLmlubmVyUmVmID0gaW5uZXJSZWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBwcm9wcyk7XG4gIH0pO1xufSk7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgdmFyIHRvVHlwZSA9IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5vYmplY3QsIFByb3BUeXBlcy5mdW5jXSk7XG4gIHZhciByZWZUeXBlID0gUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmZ1bmMsIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgY3VycmVudDogUHJvcFR5cGVzLmFueVxuICB9KV0pO1xuICBMaW5rLmRpc3BsYXlOYW1lID0gXCJMaW5rXCI7XG4gIExpbmsucHJvcFR5cGVzID0ge1xuICAgIGlubmVyUmVmOiByZWZUeXBlLFxuICAgIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuICAgIHJlcGxhY2U6IFByb3BUeXBlcy5ib29sLFxuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICB0bzogdG9UeXBlLmlzUmVxdWlyZWRcbiAgfTtcbn1cblxudmFyIGZvcndhcmRSZWZTaGltJDEgPSBmdW5jdGlvbiBmb3J3YXJkUmVmU2hpbShDKSB7XG4gIHJldHVybiBDO1xufTtcblxudmFyIGZvcndhcmRSZWYkMSA9IFJlYWN0LmZvcndhcmRSZWY7XG5cbmlmICh0eXBlb2YgZm9yd2FyZFJlZiQxID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYkMSA9IGZvcndhcmRSZWZTaGltJDE7XG59XG5cbmZ1bmN0aW9uIGpvaW5DbGFzc25hbWVzKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgY2xhc3NuYW1lcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBjbGFzc25hbWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGNsYXNzbmFtZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7XG4gICAgcmV0dXJuIGk7XG4gIH0pLmpvaW4oXCIgXCIpO1xufVxuLyoqXG4gKiBBIDxMaW5rPiB3cmFwcGVyIHRoYXQga25vd3MgaWYgaXQncyBcImFjdGl2ZVwiIG9yIG5vdC5cbiAqL1xuXG5cbnZhciBOYXZMaW5rID0gZm9yd2FyZFJlZiQxKGZ1bmN0aW9uIChfcmVmLCBmb3J3YXJkZWRSZWYpIHtcbiAgdmFyIF9yZWYkYXJpYUN1cnJlbnQgPSBfcmVmW1wiYXJpYS1jdXJyZW50XCJdLFxuICAgICAgYXJpYUN1cnJlbnQgPSBfcmVmJGFyaWFDdXJyZW50ID09PSB2b2lkIDAgPyBcInBhZ2VcIiA6IF9yZWYkYXJpYUN1cnJlbnQsXG4gICAgICBfcmVmJGFjdGl2ZUNsYXNzTmFtZSA9IF9yZWYuYWN0aXZlQ2xhc3NOYW1lLFxuICAgICAgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHZvaWQgMCA/IFwiYWN0aXZlXCIgOiBfcmVmJGFjdGl2ZUNsYXNzTmFtZSxcbiAgICAgIGFjdGl2ZVN0eWxlID0gX3JlZi5hY3RpdmVTdHlsZSxcbiAgICAgIGNsYXNzTmFtZVByb3AgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIGV4YWN0ID0gX3JlZi5leGFjdCxcbiAgICAgIGlzQWN0aXZlUHJvcCA9IF9yZWYuaXNBY3RpdmUsXG4gICAgICBsb2NhdGlvblByb3AgPSBfcmVmLmxvY2F0aW9uLFxuICAgICAgc2Vuc2l0aXZlID0gX3JlZi5zZW5zaXRpdmUsXG4gICAgICBzdHJpY3QgPSBfcmVmLnN0cmljdCxcbiAgICAgIHN0eWxlUHJvcCA9IF9yZWYuc3R5bGUsXG4gICAgICB0byA9IF9yZWYudG8sXG4gICAgICBpbm5lclJlZiA9IF9yZWYuaW5uZXJSZWYsXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wiYXJpYS1jdXJyZW50XCIsIFwiYWN0aXZlQ2xhc3NOYW1lXCIsIFwiYWN0aXZlU3R5bGVcIiwgXCJjbGFzc05hbWVcIiwgXCJleGFjdFwiLCBcImlzQWN0aXZlXCIsIFwibG9jYXRpb25cIiwgXCJzZW5zaXRpdmVcIiwgXCJzdHJpY3RcIiwgXCJzdHlsZVwiLCBcInRvXCIsIFwiaW5uZXJSZWZcIl0pO1xuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KF9fUm91dGVyQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAhY29udGV4dCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCJZb3Ugc2hvdWxkIG5vdCB1c2UgPE5hdkxpbms+IG91dHNpZGUgYSA8Um91dGVyPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgdmFyIGN1cnJlbnRMb2NhdGlvbiA9IGxvY2F0aW9uUHJvcCB8fCBjb250ZXh0LmxvY2F0aW9uO1xuICAgIHZhciB0b0xvY2F0aW9uID0gbm9ybWFsaXplVG9Mb2NhdGlvbihyZXNvbHZlVG9Mb2NhdGlvbih0bywgY3VycmVudExvY2F0aW9uKSwgY3VycmVudExvY2F0aW9uKTtcbiAgICB2YXIgcGF0aCA9IHRvTG9jYXRpb24ucGF0aG5hbWU7IC8vIFJlZ2V4IHRha2VuIGZyb206IGh0dHBzOi8vZ2l0aHViLmNvbS9waWxsYXJqcy9wYXRoLXRvLXJlZ2V4cC9ibG9iL21hc3Rlci9pbmRleC5qcyNMMjAyXG5cbiAgICB2YXIgZXNjYXBlZFBhdGggPSBwYXRoICYmIHBhdGgucmVwbGFjZSgvKFsuKyo/PV4hOiR7fSgpW1xcXXwvXFxcXF0pL2csIFwiXFxcXCQxXCIpO1xuICAgIHZhciBtYXRjaCA9IGVzY2FwZWRQYXRoID8gbWF0Y2hQYXRoKGN1cnJlbnRMb2NhdGlvbi5wYXRobmFtZSwge1xuICAgICAgcGF0aDogZXNjYXBlZFBhdGgsXG4gICAgICBleGFjdDogZXhhY3QsXG4gICAgICBzZW5zaXRpdmU6IHNlbnNpdGl2ZSxcbiAgICAgIHN0cmljdDogc3RyaWN0XG4gICAgfSkgOiBudWxsO1xuICAgIHZhciBpc0FjdGl2ZSA9ICEhKGlzQWN0aXZlUHJvcCA/IGlzQWN0aXZlUHJvcChtYXRjaCwgY3VycmVudExvY2F0aW9uKSA6IG1hdGNoKTtcbiAgICB2YXIgY2xhc3NOYW1lID0gaXNBY3RpdmUgPyBqb2luQ2xhc3NuYW1lcyhjbGFzc05hbWVQcm9wLCBhY3RpdmVDbGFzc05hbWUpIDogY2xhc3NOYW1lUHJvcDtcbiAgICB2YXIgc3R5bGUgPSBpc0FjdGl2ZSA/IF9leHRlbmRzKHt9LCBzdHlsZVByb3AsIHt9LCBhY3RpdmVTdHlsZSkgOiBzdHlsZVByb3A7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7XG4gICAgICBcImFyaWEtY3VycmVudFwiOiBpc0FjdGl2ZSAmJiBhcmlhQ3VycmVudCB8fCBudWxsLFxuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICBzdHlsZTogc3R5bGUsXG4gICAgICB0bzogdG9Mb2NhdGlvblxuICAgIH0sIHJlc3QpOyAvLyBSZWFjdCAxNSBjb21wYXRcblxuXG4gICAgaWYgKGZvcndhcmRSZWZTaGltJDEgIT09IGZvcndhcmRSZWYkMSkge1xuICAgICAgcHJvcHMucmVmID0gZm9yd2FyZGVkUmVmIHx8IGlubmVyUmVmO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9wcy5pbm5lclJlZiA9IGlubmVyUmVmO1xuICAgIH1cblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHByb3BzKTtcbiAgfSk7XG59KTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICBOYXZMaW5rLmRpc3BsYXlOYW1lID0gXCJOYXZMaW5rXCI7XG4gIHZhciBhcmlhQ3VycmVudFR5cGUgPSBQcm9wVHlwZXMub25lT2YoW1wicGFnZVwiLCBcInN0ZXBcIiwgXCJsb2NhdGlvblwiLCBcImRhdGVcIiwgXCJ0aW1lXCIsIFwidHJ1ZVwiXSk7XG4gIE5hdkxpbmsucHJvcFR5cGVzID0gX2V4dGVuZHMoe30sIExpbmsucHJvcFR5cGVzLCB7XG4gICAgXCJhcmlhLWN1cnJlbnRcIjogYXJpYUN1cnJlbnRUeXBlLFxuICAgIGFjdGl2ZUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBhY3RpdmVTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgZXhhY3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzQWN0aXZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBzZW5zaXRpdmU6IFByb3BUeXBlcy5ib29sLFxuICAgIHN0cmljdDogUHJvcFR5cGVzLmJvb2wsXG4gICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgfSk7XG59XG5cbmV4cG9ydCB7IEJyb3dzZXJSb3V0ZXIsIEhhc2hSb3V0ZXIsIExpbmssIE5hdkxpbmsgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlYWN0LXJvdXRlci1kb20uanMubWFwXG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgTGluayB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XHJcbmltcG9ydCBIZWFkc2hvdCBmcm9tIFwiLi4vLi4vYXNzZXRzL2ltYWdlcy9wcm9maWxlL2hlYWRzaG90LmpwZ1wiO1xyXG5pbXBvcnQgXCIuL1Byb2ZpbGUuc2Nzc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZmlsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBwdWJsaWMgcmVuZGVyKCk6IFJlYWN0LlJlYWN0Tm9kZSB7XHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwicHJvZmlsZVwiPlxyXG4gICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD1cIk15IGhlYWQgc2hvdCBwaWN0dXJlXCIgc3JjPXtIZWFkc2hvdH0vPlxyXG4gICAgICAgICAgICAgICAgICAgIDxoMT5IaSwgSSdtIEpvc2h1YSBTcGVycnk8L2gxPlxyXG4gICAgICAgICAgICAgICAgICAgIDxoMj5JJ20gYSBmcm9udC1lbmQgd2ViIGRldmVsb3BlciBhbmQgc29mdHdhcmUgZGV2ZWxvcGVyPC9oMj5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayB0bz1cIi9wb3J0Zm9saW9cIiBjbGFzc05hbWU9XCJwb3J0Zm9saW8tbGlua1wiPlZpZXcgbXkgcG9ydGZvbGlvPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8Zm9vdGVyPlxyXG4gICAgICAgICAgICAgICAgICAgIDxhIHRhcmdldD1cIl9ibGFua1wiIGhyZWY9XCIuLi8uLi9hc3NldHMvcmVzdW1lLnBkZlwiPlJlc3VtZTwvYT5cclxuICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT1cIm1yam9zaHVhc3BlcnJ5QGdtYWlsLmNvbVwiIGhyZWY9XCJtYWlsdG86bXJqb3NodWFzcGVycnlAZ21haWwuY29tXCI+RW1haWw8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgPGEgcmVsPVwibm9vcGVuZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL21yc3BlcnJ5XCI+R2l0aHViPC9hPlxyXG4gICAgICAgICAgICAgICAgPC9mb290ZXI+XHJcbiAgICAgICAgICAgIDwvc2VjdGlvbj5cclxuICAgICAgICApO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBcIi4vUHJvamVjdERpc3BsYXkuc2Nzc1wiO1xyXG5cclxuaW50ZXJmYWNlIElQcm9qZWN0IHtcclxuICAgIHRpdGxlPzogc3RyaW5nO1xyXG4gICAgZGF0YToge1xyXG4gICAgICAgIG5hbWU6IHN0cmluZztcclxuICAgICAgICBkZXNjcmlwdGlvbj86IHN0cmluZztcclxuICAgICAgICBhbHQ6IHN0cmluZztcclxuICAgIH1bXTtcclxuICAgIGFzc2V0Rm9sZGVyOiBzdHJpbmc7XHJcbiAgICB1cmxQcmVmaXg/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2plY3REaXNwbGF5IGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudDxJUHJvamVjdD4ge1xyXG4gICAgcHVibGljIHJlbmRlcigpOiBSZWFjdC5SZWFjdE5vZGUge1xyXG4gICAgICAgIGNvbnN0IGZpZ3VyZXM6IFJlYWN0LlJlYWN0RWxlbWVudFtdID0gW107XHJcblxyXG4gICAgICAgIGZvciAobGV0IGluZGV4OiBudW1iZXIgPSAwOyBpbmRleCA8IHRoaXMucHJvcHMuZGF0YS5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgLy8gRXh0cmFjdCB2YXJpYWJsZXMgZnJvbSBkYXRhXHJcbiAgICAgICAgICAgIGNvbnN0IHsgbmFtZSwgZGVzY3JpcHRpb24sIGFsdCB9ID0gdGhpcy5wcm9wcy5kYXRhW2luZGV4XTtcclxuICAgICAgICAgICAgY29uc3QgaWQ6IHN0cmluZyA9IG5hbWUudG9Mb3dlckNhc2UoKS5zcGxpdChcIiBcIikuam9pbihcIi1cIik7XHJcblxyXG4gICAgICAgICAgICAvLyBHZXQgdGhlIHBhdGggdG8gdGhlIGltYWdlIHRoaXMgZmlndXJlIHJlcHJlc2VudHNcclxuICAgICAgICAgICAgY29uc3QgcGF0aCA9IHRoaXMucHJvcHMuYXNzZXRGb2xkZXIgKyBcIi9cIiArIGlkICsgXCIuanBnXCI7XHJcbiAgICAgICAgICAgIGNvbnN0IGltYWdlOiBzdHJpbmcgPSByZXF1aXJlKFwiLi4vLi4vYXNzZXRzL2ltYWdlcy9cIiArIHBhdGgpO1xyXG5cclxuICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSBwcm9qZWN0IHVybFxyXG4gICAgICAgICAgICBsZXQgdXJsUHJlZml4OiBzdHJpbmcgPSB0aGlzLnByb3BzLnVybFByZWZpeCA/PyBcIlwiO1xyXG4gICAgICAgICAgICBpZiAodXJsUHJlZml4ICE9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICB1cmxQcmVmaXggKz0gXCIvXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGNvbnN0IHVybDogc3RyaW5nID0gXCJodHRwczovL21yc3BlcnJ5LmdpdGh1Yi5pby9cIiArIHVybFByZWZpeCArIGlkO1xyXG5cclxuICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSBkaXNwbGF5XHJcbiAgICAgICAgICAgIGZpZ3VyZXMucHVzaCgoXHJcbiAgICAgICAgICAgICAgICA8YSBrZXk9e2luZGV4fSBocmVmPXt1cmx9IGNsYXNzTmFtZT1cInByb2plY3RcIj5cclxuICAgICAgICAgICAgICAgICAgICA8ZmlndXJlIHRpdGxlPXtuYW1lfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2ltYWdlfSBhbHQ9e2FsdH0vPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZmlnY2FwdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRpdGxlXCI+e25hbWV9PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2Rlc2NyaXB0aW9uID8gPHNwYW4gY2xhc3NOYW1lPVwiZGVzY3JpcHRpb25cIj57ZGVzY3JpcHRpb259PC9zcGFuPiA6IFwiXCJ9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZmlnY2FwdGlvbj5cclxuICAgICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT5cclxuICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJwcm9qZWN0LWRpc3BsYXlcIj5cclxuICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLnRpdGxlID8gPGgxPnt0aGlzLnByb3BzLnRpdGxlfTwvaDE+IDogXCJcIn1cclxuICAgICAgICAgICAgICAgIHtmaWd1cmVzfVxyXG4gICAgICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxufSIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcclxuaW1wb3J0IFwiLi9OYXZpZ2F0aW9uLnNjc3NcIjtcclxuXHJcbmludGVyZmFjZSBJTmF2aWdhdGlvbiB7XHJcbiAgICB2aWV3OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5hdmlnYXRpb24gZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50PElOYXZpZ2F0aW9uPiB7XHJcbiAgICBwdWJsaWMgcmVuZGVyKCk6IFJlYWN0LlJlYWN0Tm9kZSB7XHJcbiAgICAgICAgLy8gTGlzdCBvZiBhbGwgbmF2aWdhdGlvbiBpdGVtc1xyXG4gICAgICAgIGNvbnN0IGl0ZW1zOiBzdHJpbmdbXSA9IFtcIkhvbWVcIiwgXCJQb3J0Zm9saW9cIiwgXCJHYW1lc1wiLCBcIlZpc3VhbHNcIl07XHJcblxyXG4gICAgICAgIGNvbnN0IG5hdkl0ZW1zOiBSZWFjdC5SZWFjdEVsZW1lbnRbXSA9IFtdO1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBpdGVtcy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3QgaXRlbSA9IGl0ZW1zW2luZGV4XTtcclxuICAgICAgICAgICAgY29uc3QgaWQgPSBpdGVtLnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgY3VycmVudCBpdGVtIGlzIHRoZSBwYWdlIHRoYXQgaXMgZGlzcGxheWVkXHJcbiAgICAgICAgICAgIGxldCBsaW5rOiBSZWFjdC5SZWFjdEVsZW1lbnQ7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnByb3BzLnZpZXcgPT09IGlkKSB7XHJcbiAgICAgICAgICAgICAgICBsaW5rID0gPGEgY2xhc3NOYW1lPVwiYWN0aXZlXCI+e2l0ZW19PC9hPjtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGxpbmsgPSA8TGluayB0bz17XCIvXCIgKyBpZH0+e2l0ZW19PC9MaW5rPjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbmF2SXRlbXMucHVzaCg8bGkga2V5PXtpbmRleH0+e2xpbmt9PC9saT4pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgPG5hdiBjbGFzc05hbWU9XCJuYXZpZ2F0aW9uXCI+XHJcbiAgICAgICAgICAgICAgICA8dWw+e25hdkl0ZW1zfTwvdWw+XHJcbiAgICAgICAgICAgIDwvbmF2PlxyXG4gICAgICAgIClcclxuICAgIH1cclxufSIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUHJvamVjdERpc3BsYXkgZnJvbSBcIi4uL2NvbW1vbi9Qcm9qZWN0RGlzcGxheVwiO1xyXG5pbXBvcnQgUG9ydGZvbGlvRGF0YSBmcm9tIFwiLi4vLi4vYXNzZXRzL2RhdGEvcHJvamVjdHMuanNvblwiO1xyXG5pbXBvcnQgTmF2aWdhdGlvbiBmcm9tIFwiLi4vY29tbW9uL05hdmlnYXRpb25cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcnRmb2xpbyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBwdWJsaWMgcmVuZGVyKCk6IFJlYWN0LlJlYWN0Tm9kZSB7XHJcbiAgICAgICAgcmV0dXJuIDw+XHJcbiAgICAgICAgICAgIDxOYXZpZ2F0aW9uIHZpZXc9XCJwb3J0Zm9saW9cIi8+XHJcbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInBvcnRmb2xpb1wiPlxyXG4gICAgICAgICAgICAgICAgPFByb2plY3REaXNwbGF5XHJcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU9XCJQZXJzb25hbCBQcm9qZWN0c1wiXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YT17UG9ydGZvbGlvRGF0YX1cclxuICAgICAgICAgICAgICAgICAgICBhc3NldEZvbGRlcj1cInBvcnRmb2xpb1wiXHJcbiAgICAgICAgICAgICAgICAgICAgdXJsUHJlZml4PVwicG9ydGZvbGlvL3Byb2plY3RzXCIvPlxyXG4gICAgICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgICAgPC8+O1xyXG4gICAgfVxyXG59IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBQcm9qZWN0RGlzcGxheSBmcm9tIFwiLi4vY29tbW9uL1Byb2plY3REaXNwbGF5XCI7XHJcbmltcG9ydCBHYW1lRGF0YSBmcm9tIFwiLi4vLi4vYXNzZXRzL2RhdGEvZ2FtZXMuanNvblwiO1xyXG5pbXBvcnQgTmF2aWdhdGlvbiBmcm9tIFwiLi4vY29tbW9uL05hdmlnYXRpb25cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVzIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XHJcbiAgICBwdWJsaWMgcmVuZGVyKCk6IFJlYWN0LlJlYWN0Tm9kZSB7XHJcbiAgICAgICAgcmV0dXJuIDw+XHJcbiAgICAgICAgICAgIDxOYXZpZ2F0aW9uIHZpZXc9XCJnYW1lc1wiLz5cclxuICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiZ2FtZXNcIj5cclxuICAgICAgICAgICAgICAgIDxQcm9qZWN0RGlzcGxheVxyXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiQnJvd3NlciBHYW1lc1wiXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YT17R2FtZURhdGF9XHJcbiAgICAgICAgICAgICAgICAgICAgYXNzZXRGb2xkZXI9XCJnYW1lc1wiLz5cclxuICAgICAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICAgIDwvPjtcclxuICAgIH1cclxufSIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgUHJvamVjdERpc3BsYXkgZnJvbSBcIi4uL2NvbW1vbi9Qcm9qZWN0RGlzcGxheVwiO1xyXG5pbXBvcnQgVmlzdWFsRGF0YSBmcm9tIFwiLi4vLi4vYXNzZXRzL2RhdGEvdmlzdWFscy5qc29uXCI7XHJcbmltcG9ydCBOYXZpZ2F0aW9uIGZyb20gXCIuLi9jb21tb24vTmF2aWdhdGlvblwiO1xyXG5pbXBvcnQgXCJyZWFjdC1yZXNwb25zaXZlLWNhcm91c2VsL2xpYi9zdHlsZXMvY2Fyb3VzZWwubWluLmNzc1wiO1xyXG5pbXBvcnQgeyBDYXJvdXNlbCB9IGZyb20gXCJyZWFjdC1yZXNwb25zaXZlLWNhcm91c2VsXCI7XHJcbmltcG9ydCBcIi4vVmlzdWFscy5zY3NzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaXN1YWxzIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XHJcbiAgICBwdWJsaWMgcmVuZGVyKCk6IFJlYWN0LlJlYWN0Tm9kZSB7XHJcbiAgICAgICAgLy8gQ2Fyb3VzZWwgc2V0dGluZ3NcclxuICAgICAgICBjb25zdCBzZXR0aW5nczoge30gPSB7XHJcbiAgICAgICAgICAgIGF1dG9QbGF5OiB0cnVlLFxyXG4gICAgICAgICAgICBpbnRlcnZhbDogNTAwMCxcclxuICAgICAgICAgICAgaW5maW5pdGVMb29wOiB0cnVlLFxyXG4gICAgICAgICAgICBzaG93SW5kaWNhdG9yczogZmFsc2UsXHJcbiAgICAgICAgICAgIHNob3dTdGF0dXM6IGZhbHNlLFxyXG4gICAgICAgICAgICBzaG93VGh1bWJzOiBmYWxzZSxcclxuICAgICAgICAgICAgdHJhbnNpdGlvblRpbWU6IDEwMDBcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICAvLyBHZXQgdGhlIGNhcm91c2VsIGFuZCBwcm9qZWN0IGRhdGFcclxuICAgICAgICBjb25zdCBjYXJvdXNlbERhdGE6IHN0cmluZ1tdID0gVmlzdWFsRGF0YS5jYXJvdXNlbDtcclxuICAgICAgICBjb25zdCBwcm9qZWN0RGF0YTogeyBuYW1lOiBzdHJpbmcsIGFsdDogc3RyaW5nIH1bXSA9IFZpc3VhbERhdGEucHJvamVjdHM7XHJcblxyXG4gICAgICAgIHJldHVybiA8PlxyXG4gICAgICAgICAgICA8TmF2aWdhdGlvbiB2aWV3PVwidmlzdWFsc1wiLz5cclxuICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwidmlzdWFsc1wiPlxyXG4gICAgICAgICAgICAgICAgPENhcm91c2VsIHsuLi5zZXR0aW5nc30+XHJcbiAgICAgICAgICAgICAgICAgICAge2Nhcm91c2VsRGF0YS5tYXAoKG5hbWU6IHN0cmluZywgaW5kZXg6IG51bWJlcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBHZXQgdGhlIHN0YXRpYyBjYXJvdXNlbCBpbWFnZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzcmM6IHN0cmluZyA9IHJlcXVpcmUoXCIuLi8uLi9hc3NldHMvaW1hZ2VzL3Zpc3VhbHMvY2Fyb3VzZWwvY2Fyb3VzZWwtXCIgKyAoaW5kZXggKyAxKSArIFwiLmpwZ1wiKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIExvY2F0ZSB0aGUgYWx0IHRleHQgYXNzb2NpYXRlZCB3aXRoIHRoZSBpbWFnZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgYWx0OiBzdHJpbmcgPSBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHByb2plY3Qgb2YgcHJvamVjdERhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwcm9qZWN0Lm5hbWUgPT09IG5hbWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQgPSBwcm9qZWN0LmFsdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaWQ6IHN0cmluZyA9IG5hbWUudG9Mb3dlckNhc2UoKS5zcGxpdChcIiBcIikuam9pbihcIi1cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBrZXk9e2luZGV4fSB0YWJJbmRleD17LTF9IHRpdGxlPXtuYW1lfSBocmVmPXtcImh0dHBzOi8vbXJzcGVycnkuZ2l0aHViLmlvL3Zpc3VhbHMvcHJvamVjdHMvXCIgKyBpZH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e3NyY30gYWx0PXthbHR9Lz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJsZWdlbmRcIj57bmFtZX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSl9XHJcbiAgICAgICAgICAgICAgICA8L0Nhcm91c2VsPlxyXG4gICAgICAgICAgICAgICAgPFByb2plY3REaXNwbGF5XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YT17cHJvamVjdERhdGF9XHJcbiAgICAgICAgICAgICAgICAgICAgYXNzZXRGb2xkZXI9XCJ2aXN1YWxzXCJcclxuICAgICAgICAgICAgICAgICAgICB1cmxQcmVmaXg9XCJ2aXN1YWxzL3Byb2plY3RzXCIvPlxyXG4gICAgICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgICAgPC8+O1xyXG4gICAgfVxyXG59IiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGhvdCB9IGZyb20gXCJyZWFjdC1ob3QtbG9hZGVyXCI7XHJcbmltcG9ydCB7IEhhc2hSb3V0ZXIsIFJvdXRlLCBTd2l0Y2ggfSBmcm9tIFwicmVhY3Qtcm91dGVyLWRvbVwiO1xyXG5pbXBvcnQgTmF2aWdhdGlvbiBmcm9tIFwiLi9jb21tb24vTmF2aWdhdGlvblwiO1xyXG5pbXBvcnQgUHJvZmlsZSBmcm9tIFwiLi9wcm9maWxlL1Byb2ZpbGVcIjtcclxuaW1wb3J0IFBvcnRmb2xpbyBmcm9tIFwiLi9wb3J0Zm9saW8vUG9ydGZvbGlvXCI7XHJcbmltcG9ydCBHYW1lcyBmcm9tIFwiLi9nYW1lcy9HYW1lc1wiO1xyXG5pbXBvcnQgVmlzdWFscyBmcm9tIFwiLi92aXN1YWxzL1Zpc3VhbHNcIjtcclxuaW1wb3J0IFwiLi4vc2Fzcy9yZXNldC5zY3NzXCI7XHJcbmltcG9ydCBcIi4uL3Nhc3MvYmFzZS5zY3NzXCI7XHJcbmltcG9ydCBcIi4vQXBwLnNjc3NcIjtcclxuXHJcbmNsYXNzIEFwcCBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xyXG4gICAgcHVibGljIHN0YXRpYyB1cGRhdGVIYXNoKGhhc2g6IHN0cmluZyk6IGFueSB7XHJcbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBcIiNcIiArIGhhc2g7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gT25seSB1cGRhdGUgdGhlIHZpZXcgd2hlbiB0aGUgaGFzaCBjaGFuZ2VzXHJcbiAgICBwdWJsaWMgY29tcG9uZW50RGlkTW91bnQoKTogdm9pZCB7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJoYXNoY2hhbmdlXCIsICgpID0+IHRoaXMuZm9yY2VVcGRhdGUoKSwgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyByZW5kZXIoKTogUmVhY3QuUmVhY3ROb2RlIHtcclxuICAgICAgICAvLyBHZXQgdGhlIHdpbmRvdyBoYXNoIGFuZCBkZXRlcm1pbmUgdGhlIHZpZXcgdG8gZGlzcGxheVxyXG4gICAgICAgIGNvbnN0IGhhc2g6IHN0cmluZyA9IHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xyXG4gICAgICAgIGNvbnN0IHZpZXc6IHN0cmluZyA9IGhhc2guc3Vic3RyaW5nKGhhc2guaW5kZXhPZihcIiNcIikgKyAxKS50b0xvd2VyQ2FzZSgpO1xyXG5cclxuICAgICAgICByZXR1cm4gKFxyXG4gICAgICAgICAgICA8SGFzaFJvdXRlcj5cclxuICAgICAgICAgICAgICAgIDxTd2l0Y2g+XHJcbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvcG9ydGZvbGlvXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxQb3J0Zm9saW8vPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvUm91dGU+XHJcbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvZ2FtZXNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPEdhbWVzLz5cclxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxyXG4gICAgICAgICAgICAgICAgICAgIDxSb3V0ZSBwYXRoPVwiL3Zpc3VhbHNcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPFZpc3VhbHMvPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvUm91dGU+XHJcbiAgICAgICAgICAgICAgICAgICAgPFJvdXRlIHBhdGg9XCIvXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxQcm9maWxlLz5cclxuICAgICAgICAgICAgICAgICAgICA8L1JvdXRlPlxyXG4gICAgICAgICAgICAgICAgPC9Td2l0Y2g+XHJcbiAgICAgICAgICAgIDwvSGFzaFJvdXRlcj5cclxuICAgICAgICApO1xyXG5cclxuICAgICAgICAvKnN3aXRjaCAodmlldykge1xyXG4gICAgICAgICAgICBjYXNlIFwiXCI6XHJcbiAgICAgICAgICAgIGNhc2UgXCJwcm9maWxlXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gPFByb2ZpbGUvPjtcclxuICAgICAgICAgICAgY2FzZSBcInBvcnRmb2xpb1wiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDw+XHJcbiAgICAgICAgICAgICAgICAgICAgPE5hdmlnYXRpb24gdmlldz17dmlld30vPlxyXG4gICAgICAgICAgICAgICAgICAgIDxQb3J0Zm9saW8vPlxyXG4gICAgICAgICAgICAgICAgPC8+O1xyXG4gICAgICAgICAgICBjYXNlIFwiZ2FtZXNcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiA8PlxyXG4gICAgICAgICAgICAgICAgICAgIDxOYXZpZ2F0aW9uIHZpZXc9e3ZpZXd9Lz5cclxuICAgICAgICAgICAgICAgICAgICA8R2FtZXMvPlxyXG4gICAgICAgICAgICAgICAgPC8+O1xyXG4gICAgICAgICAgICBjYXNlIFwidmlzdWFsc1wiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDw+XHJcbiAgICAgICAgICAgICAgICAgICAgPE5hdmlnYXRpb24gdmlldz17dmlld30vPlxyXG4gICAgICAgICAgICAgICAgICAgIDxWaXN1YWxzLz5cclxuICAgICAgICAgICAgICAgIDwvPjtcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIC8vIFJlc2V0IHRoZSBoYXNoIGlmIGl0IGlzIGludmFsaWRcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gXCJcIjtcclxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH0qL1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBob3QobW9kdWxlKShBcHApOyIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgKiBhcyBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tXCI7XHJcbmltcG9ydCBBcHAgZnJvbSBcIi4vQXBwXCI7XHJcblxyXG5SZWFjdERPTS5yZW5kZXIoPEFwcC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvb3RcIikpOyIsIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTggSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0XHRpZiAoYXJnLmxlbmd0aCkge1xuXHRcdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGlmIChhcmcudG9TdHJpbmcgPT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcpIHtcblx0XHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jYXJvdXNlbCAuY29udHJvbC1hcnJvdywuY2Fyb3VzZWwuY2Fyb3VzZWwtc2xpZGVyIC5jb250cm9sLWFycm93ey13ZWJraXQtdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluOy1tb3otdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluOy1tcy10cmFuc2l0aW9uOmFsbCAuMjVzIGVhc2UtaW47LW8tdHJhbnNpdGlvbjphbGwgLjI1cyBlYXNlLWluO3RyYW5zaXRpb246YWxsIC4yNXMgZWFzZS1pbjtvcGFjaXR5Oi40O2ZpbHRlcjphbHBoYShvcGFjaXR5PTQwKTtwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4OjI7dG9wOjIwcHg7YmFja2dyb3VuZDpub25lO2JvcmRlcjowO2ZvbnQtc2l6ZTozMnB4O2N1cnNvcjpwb2ludGVyfS5jYXJvdXNlbCAuY29udHJvbC1hcnJvdzpmb2N1cywuY2Fyb3VzZWwgLmNvbnRyb2wtYXJyb3c6aG92ZXJ7b3BhY2l0eToxO2ZpbHRlcjphbHBoYShvcGFjaXR5PTEwMCl9LmNhcm91c2VsIC5jb250cm9sLWFycm93OmJlZm9yZSwuY2Fyb3VzZWwuY2Fyb3VzZWwtc2xpZGVyIC5jb250cm9sLWFycm93OmJlZm9yZXttYXJnaW46MCA1cHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7Ym9yZGVyLXRvcDo4cHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWJvdHRvbTo4cHggc29saWQgdHJhbnNwYXJlbnQ7Y29udGVudDonJ30uY2Fyb3VzZWwgLmNvbnRyb2wtZGlzYWJsZWQuY29udHJvbC1hcnJvd3tvcGFjaXR5OjA7ZmlsdGVyOmFscGhhKG9wYWNpdHk9MCk7Y3Vyc29yOmluaGVyaXQ7ZGlzcGxheTpub25lfS5jYXJvdXNlbCAuY29udHJvbC1wcmV2LmNvbnRyb2wtYXJyb3d7bGVmdDowfS5jYXJvdXNlbCAuY29udHJvbC1wcmV2LmNvbnRyb2wtYXJyb3c6YmVmb3Jle2JvcmRlci1yaWdodDo4cHggc29saWQgI2ZmZn0uY2Fyb3VzZWwgLmNvbnRyb2wtbmV4dC5jb250cm9sLWFycm93e3JpZ2h0OjB9LmNhcm91c2VsIC5jb250cm9sLW5leHQuY29udHJvbC1hcnJvdzpiZWZvcmV7Ym9yZGVyLWxlZnQ6OHB4IHNvbGlkICNmZmZ9LmNhcm91c2VsLXJvb3R7b3V0bGluZTpub25lfS5jYXJvdXNlbHtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlfS5jYXJvdXNlbCAqey13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveH0uY2Fyb3VzZWwgaW1ne3dpZHRoOjEwMCU7ZGlzcGxheTppbmxpbmUtYmxvY2s7cG9pbnRlci1ldmVudHM6bm9uZX0uY2Fyb3VzZWwgLmNhcm91c2Vse3Bvc2l0aW9uOnJlbGF0aXZlfS5jYXJvdXNlbCAuY29udHJvbC1hcnJvd3tvdXRsaW5lOjA7Ym9yZGVyOjA7YmFja2dyb3VuZDpub25lO3RvcDo1MCU7bWFyZ2luLXRvcDotMTNweDtmb250LXNpemU6MThweH0uY2Fyb3VzZWwgLnRodW1icy13cmFwcGVye21hcmdpbjoyMHB4O292ZXJmbG93OmhpZGRlbn0uY2Fyb3VzZWwgLnRodW1ic3std2Via2l0LXRyYW5zaXRpb246YWxsIC4xNXMgZWFzZS1pbjstbW96LXRyYW5zaXRpb246YWxsIC4xNXMgZWFzZS1pbjstbXMtdHJhbnNpdGlvbjphbGwgLjE1cyBlYXNlLWluOy1vLXRyYW5zaXRpb246YWxsIC4xNXMgZWFzZS1pbjt0cmFuc2l0aW9uOmFsbCAuMTVzIGVhc2UtaW47LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgMCwgMCk7LW1vei10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgMCwgMCk7LW1zLXRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLCAwLCAwKTstby10cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwgMCwgMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsIDAsIDApO3Bvc2l0aW9uOnJlbGF0aXZlO2xpc3Qtc3R5bGU6bm9uZTt3aGl0ZS1zcGFjZTpub3dyYXB9LmNhcm91c2VsIC50aHVtYnstd2Via2l0LXRyYW5zaXRpb246Ym9yZGVyIC4xNXMgZWFzZS1pbjstbW96LXRyYW5zaXRpb246Ym9yZGVyIC4xNXMgZWFzZS1pbjstbXMtdHJhbnNpdGlvbjpib3JkZXIgLjE1cyBlYXNlLWluOy1vLXRyYW5zaXRpb246Ym9yZGVyIC4xNXMgZWFzZS1pbjt0cmFuc2l0aW9uOmJvcmRlciAuMTVzIGVhc2UtaW47ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OjZweDt3aGl0ZS1zcGFjZTpub3dyYXA7b3ZlcmZsb3c6aGlkZGVuO2JvcmRlcjozcHggc29saWQgI2ZmZjtwYWRkaW5nOjJweH0uY2Fyb3VzZWwgLnRodW1iOmZvY3Vze2JvcmRlcjozcHggc29saWQgI2NjYztvdXRsaW5lOm5vbmV9LmNhcm91c2VsIC50aHVtYi5zZWxlY3RlZCwuY2Fyb3VzZWwgLnRodW1iOmhvdmVye2JvcmRlcjozcHggc29saWQgIzMzM30uY2Fyb3VzZWwgLnRodW1iIGltZ3t2ZXJ0aWNhbC1hbGlnbjp0b3B9LmNhcm91c2VsLmNhcm91c2VsLXNsaWRlcntwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW46MDtvdmVyZmxvdzpoaWRkZW59LmNhcm91c2VsLmNhcm91c2VsLXNsaWRlciAuY29udHJvbC1hcnJvd3t0b3A6MDtjb2xvcjojZmZmO2ZvbnQtc2l6ZToyNnB4O2JvdHRvbTowO21hcmdpbi10b3A6MDtwYWRkaW5nOjVweH0uY2Fyb3VzZWwuY2Fyb3VzZWwtc2xpZGVyIC5jb250cm9sLWFycm93OmhvdmVye2JhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjIpfS5jYXJvdXNlbCAuc2xpZGVyLXdyYXBwZXJ7b3ZlcmZsb3c6aGlkZGVuO21hcmdpbjphdXRvO3dpZHRoOjEwMCU7LXdlYmtpdC10cmFuc2l0aW9uOmhlaWdodCAuMTVzIGVhc2UtaW47LW1vei10cmFuc2l0aW9uOmhlaWdodCAuMTVzIGVhc2UtaW47LW1zLXRyYW5zaXRpb246aGVpZ2h0IC4xNXMgZWFzZS1pbjstby10cmFuc2l0aW9uOmhlaWdodCAuMTVzIGVhc2UtaW47dHJhbnNpdGlvbjpoZWlnaHQgLjE1cyBlYXNlLWlufS5jYXJvdXNlbCAuc2xpZGVyLXdyYXBwZXIuYXhpcy1ob3Jpem9udGFsIC5zbGlkZXJ7LW1zLWJveC1vcmllbnQ6aG9yaXpvbnRhbDtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LW1vei1ib3g7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5Oi1tb3otZmxleDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5OmZsZXh9LmNhcm91c2VsIC5zbGlkZXItd3JhcHBlci5heGlzLWhvcml6b250YWwgLnNsaWRlciAuc2xpZGV7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZmxvdzpjb2x1bW59LmNhcm91c2VsIC5zbGlkZXItd3JhcHBlci5heGlzLXZlcnRpY2Fsey1tcy1ib3gtb3JpZW50Omhvcml6b250YWw7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi1tb3otYm94O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTotbW96LWZsZXg7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTpmbGV4fS5jYXJvdXNlbCAuc2xpZGVyLXdyYXBwZXIuYXhpcy12ZXJ0aWNhbCAuc2xpZGVyey13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0uY2Fyb3VzZWwgLnNsaWRlcnttYXJnaW46MDtwYWRkaW5nOjA7cG9zaXRpb246cmVsYXRpdmU7bGlzdC1zdHlsZTpub25lO3dpZHRoOjEwMCV9LmNhcm91c2VsIC5zbGlkZXIuYW5pbWF0ZWR7LXdlYmtpdC10cmFuc2l0aW9uOmFsbCAuMzVzIGVhc2UtaW4tb3V0Oy1tb3otdHJhbnNpdGlvbjphbGwgLjM1cyBlYXNlLWluLW91dDstbXMtdHJhbnNpdGlvbjphbGwgLjM1cyBlYXNlLWluLW91dDstby10cmFuc2l0aW9uOmFsbCAuMzVzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246YWxsIC4zNXMgZWFzZS1pbi1vdXR9LmNhcm91c2VsIC5zbGlkZXttaW4td2lkdGg6MTAwJTttYXJnaW46MDtwb3NpdGlvbjpyZWxhdGl2ZTt0ZXh0LWFsaWduOmNlbnRlcn0uY2Fyb3VzZWwgLnNsaWRlIGltZ3t3aWR0aDoxMDAlO3ZlcnRpY2FsLWFsaWduOnRvcDtib3JkZXI6MH0uY2Fyb3VzZWwgLnNsaWRlIGlmcmFtZXtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDpjYWxjKDEwMCUgLSA4MHB4KTttYXJnaW46MCA0MHB4IDQwcHg7Ym9yZGVyOjB9LmNhcm91c2VsIC5zbGlkZSAubGVnZW5key13ZWJraXQtdHJhbnNpdGlvbjphbGwgLjVzIGVhc2UtaW4tb3V0Oy1tb3otdHJhbnNpdGlvbjphbGwgLjVzIGVhc2UtaW4tb3V0Oy1tcy10cmFuc2l0aW9uOmFsbCAuNXMgZWFzZS1pbi1vdXQ7LW8tdHJhbnNpdGlvbjphbGwgLjVzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246YWxsIC41cyBlYXNlLWluLW91dDtwb3NpdGlvbjphYnNvbHV0ZTtib3R0b206NDBweDtsZWZ0OjUwJTttYXJnaW4tbGVmdDotNDUlO3dpZHRoOjkwJTtib3JkZXItcmFkaXVzOjEwcHg7YmFja2dyb3VuZDojMDAwO2NvbG9yOiNmZmY7cGFkZGluZzoxMHB4O2ZvbnQtc2l6ZToxMnB4O3RleHQtYWxpZ246Y2VudGVyO29wYWNpdHk6MC4yNTstd2Via2l0LXRyYW5zaXRpb246b3BhY2l0eSAuMzVzIGVhc2UtaW4tb3V0Oy1tb3otdHJhbnNpdGlvbjpvcGFjaXR5IC4zNXMgZWFzZS1pbi1vdXQ7LW1zLXRyYW5zaXRpb246b3BhY2l0eSAuMzVzIGVhc2UtaW4tb3V0Oy1vLXRyYW5zaXRpb246b3BhY2l0eSAuMzVzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246b3BhY2l0eSAuMzVzIGVhc2UtaW4tb3V0fS5jYXJvdXNlbCAuY29udHJvbC1kb3Rze3Bvc2l0aW9uOmFic29sdXRlO2JvdHRvbTowO21hcmdpbjoxMHB4IDA7cGFkZGluZzowO3RleHQtYWxpZ246Y2VudGVyO3dpZHRoOjEwMCU7ei1pbmRleDoxfUBtZWRpYSAobWluLXdpZHRoOiA5NjBweCl7LmNhcm91c2VsIC5jb250cm9sLWRvdHN7Ym90dG9tOjB9fS5jYXJvdXNlbCAuY29udHJvbC1kb3RzIC5kb3R7LXdlYmtpdC10cmFuc2l0aW9uOm9wYWNpdHkgLjI1cyBlYXNlLWluOy1tb3otdHJhbnNpdGlvbjpvcGFjaXR5IC4yNXMgZWFzZS1pbjstbXMtdHJhbnNpdGlvbjpvcGFjaXR5IC4yNXMgZWFzZS1pbjstby10cmFuc2l0aW9uOm9wYWNpdHkgLjI1cyBlYXNlLWluO3RyYW5zaXRpb246b3BhY2l0eSAuMjVzIGVhc2UtaW47b3BhY2l0eTouMztmaWx0ZXI6YWxwaGEob3BhY2l0eT0zMCk7Ym94LXNoYWRvdzoxcHggMXB4IDJweCByZ2JhKDAsMCwwLDAuOSk7YmFja2dyb3VuZDojZmZmO2JvcmRlci1yYWRpdXM6NTAlO3dpZHRoOjhweDtoZWlnaHQ6OHB4O2N1cnNvcjpwb2ludGVyO2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbjowIDhweH0uY2Fyb3VzZWwgLmNvbnRyb2wtZG90cyAuZG90LnNlbGVjdGVkLC5jYXJvdXNlbCAuY29udHJvbC1kb3RzIC5kb3Q6aG92ZXJ7b3BhY2l0eToxO2ZpbHRlcjphbHBoYShvcGFjaXR5PTEwMCl9LmNhcm91c2VsIC5jYXJvdXNlbC1zdGF0dXN7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDtwYWRkaW5nOjVweDtmb250LXNpemU6MTBweDt0ZXh0LXNoYWRvdzoxcHggMXB4IDFweCByZ2JhKDAsMCwwLDAuOSk7Y29sb3I6I2ZmZn0uY2Fyb3VzZWw6aG92ZXIgLnNsaWRlIC5sZWdlbmR7b3BhY2l0eToxfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsInZhciBlc2NhcGUgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL3VybC9lc2NhcGUuanNcIik7XG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIkBmb250LWZhY2V7Zm9udC1mYW1pbHk6XFxcIktsZWluXFxcIjtzcmM6dXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCIuLi9hc3NldHMvZm9udHMva2xlaW4tcmVndWxhci50dGZcIikpICsgXCIpIGZvcm1hdChcXFwidHJ1ZXR5cGVcXFwiKTtmb250LXN0eWxlOm5vcm1hbH06cm9vdHtmb250LWZhbWlseTpcXFwiS2xlaW5cXFwiO2ZvbnQtc2l6ZToxNnB4O2NvbG9yOiMxMjEyMTJ9Ym9keXtiYWNrZ3JvdW5kLWNvbG9yOiNGQUZBRkE7bWFyZ2luOjB9I3Jvb3R7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDthbGlnbi1pdGVtczpjZW50ZXI7bWFyZ2luLWxlZnQ6Y2FsYygxMDB2dyAtIDEwMCUpfSNyb290IG5hdiwjcm9vdCBzZWN0aW9ue21heC13aWR0aDoxMDI0cHh9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubmF2aWdhdGlvbnt3aWR0aDoxMDAlO21hcmdpbjoycmVtIDJyZW0gNHJlbX0ubmF2aWdhdGlvbiB1bHtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246cm93O2p1c3RpZnktY29udGVudDpmbGV4LWVuZDthbGlnbi1pdGVtczpjZW50ZXJ9Lm5hdmlnYXRpb24gbGkrbGl7cGFkZGluZy1sZWZ0OjJyZW19Lm5hdmlnYXRpb24gYXtjb2xvcjojMTIxMjEyO2ZvbnQtc2l6ZToxLjE1cmVtfS5uYXZpZ2F0aW9uIGE6aG92ZXIsLm5hdmlnYXRpb24gYTphY3RpdmUsLm5hdmlnYXRpb24gYTpmb2N1cywubmF2aWdhdGlvbiBhLmFjdGl2ZXtjb2xvcjojMTIxMjEyfS5uYXZpZ2F0aW9uIGE6OmFmdGVye2JhY2tncm91bmQtY29sb3I6IzEyMTIxMn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5wcm9qZWN0LWRpc3BsYXl7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOnJvdztqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtmbGV4LXdyYXA6d3JhcH0ucHJvamVjdC1kaXNwbGF5IGgxe2ZsZXgtYmFzaXM6MTAwJTtwYWRkaW5nOjAgMC41cmVtO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNDQ0NDQ0N9LnByb2plY3QtZGlzcGxheSBhe2JvcmRlci1yYWRpdXM6MXJlbTtib3gtc2hhZG93OjByZW0gMHJlbSAycmVtICNDQ0NDQ0M7b3ZlcmZsb3c6aGlkZGVuO3BhZGRpbmc6MDttYXJnaW46MXJlbX0ucHJvamVjdC1kaXNwbGF5IGE6OmFmdGVye2NvbnRlbnQ6bm9uZX0ucHJvamVjdC1kaXNwbGF5IGE6aG92ZXIgZmlnY2FwdGlvbiwucHJvamVjdC1kaXNwbGF5IGE6YWN0aXZlIGZpZ2NhcHRpb24sLnByb2plY3QtZGlzcGxheSBhOmZvY3VzIGZpZ2NhcHRpb257dHJhbnNmb3JtOnRyYW5zbGF0ZVkoMCUpfS5wcm9qZWN0LWRpc3BsYXkgZmlndXJle3Bvc2l0aW9uOnJlbGF0aXZlfS5wcm9qZWN0LWRpc3BsYXkgZmlndXJlIGltZ3tkaXNwbGF5OmJsb2NrO2JvcmRlci1yYWRpdXM6aW5oZXJpdH0ucHJvamVjdC1kaXNwbGF5IGZpZ3VyZSBmaWdjYXB0aW9ue3RyYW5zaXRpb246dHJhbnNmb3JtIDI1MG1zIGVhc2UtaW4tb3V0O3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwwLjg1KTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgxMDAlKTtib3R0b206MDtsZWZ0OjA7cmlnaHQ6MDtwYWRkaW5nOjEuNXJlbX0ucHJvamVjdC1kaXNwbGF5IGZpZ3VyZSBmaWdjYXB0aW9uIHNwYW57ZGlzcGxheTpibG9jaztjb2xvcjojRkFGQUZBO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LnByb2plY3QtZGlzcGxheSBmaWd1cmUgZmlnY2FwdGlvbiAudGl0bGV7Zm9udC13ZWlnaHQ6Ym9sZH0ucHJvamVjdC1kaXNwbGF5IGZpZ3VyZSBmaWdjYXB0aW9uIC5kZXNjcmlwdGlvbnttYXJnaW4tdG9wOjAuNXJlbTtmb250LXNpemU6MC44cmVtfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnByb2ZpbGV7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjt3aWR0aDoxMDB2dztoZWlnaHQ6MTAwdmh9LnByb2ZpbGUgZGl2e2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9LnByb2ZpbGUgaW1ne2JvcmRlci1yYWRpdXM6NTAlO2JveC1zaGFkb3c6MCAwIDFyZW0gI0FBQUFBQX0ucHJvZmlsZSBoMXtmb250LXNpemU6Mi4yNXJlbTttYXJnaW46MnJlbSAwIDFyZW19LnByb2ZpbGUgLnBvcnRmb2xpby1saW5re3RyYW5zaXRpb246Y29sb3IgMjUwbXMgZWFzZS1pbi1vdXQsYmFja2dyb3VuZC1jb2xvciAyNTBtcyBlYXNlLWluLW91dDtjb2xvcjojMTIxMjEyO291dGxpbmU6bm9uZTtwYWRkaW5nOjFyZW0gNHJlbTtib3JkZXI6MnB4IHNvbGlkICMxMjEyMTI7bWFyZ2luOjNyZW0gMH0ucHJvZmlsZSAucG9ydGZvbGlvLWxpbms6aG92ZXIsLnByb2ZpbGUgLnBvcnRmb2xpby1saW5rOmFjdGl2ZSwucHJvZmlsZSAucG9ydGZvbGlvLWxpbms6Zm9jdXN7Y29sb3I6I0ZBRkFGQTtiYWNrZ3JvdW5kLWNvbG9yOiMxMjEyMTJ9LnByb2ZpbGUgLnBvcnRmb2xpby1saW5rOjphZnRlcntjb250ZW50Om5vbmV9LnByb2ZpbGUgYXtmb250LXNpemU6MS4xNXJlbX0ucHJvZmlsZSBhK2F7bWFyZ2luLWxlZnQ6NHJlbX1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi52aXN1YWxzIC5jYXJvdXNlbHttYXJnaW4tYm90dG9tOjJyZW19LnZpc3VhbHMgLmNhcm91c2VsIC5zbGlkZXtkaXNwbGF5OmZsZXh9LnZpc3VhbHMgLmNhcm91c2VsIC5zbGlkZSAubGVnZW5ke2ZvbnQtc2l6ZToxcmVtO2NvbG9yOiNGRkZGRkY7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtvcGFjaXR5OjE7Ym90dG9tOjFyZW19LnZpc3VhbHMgLmNhcm91c2VsIC5zbGlkZSBhe3BhZGRpbmc6MH0udmlzdWFscyAuY2Fyb3VzZWwgLnNsaWRlIGE6OmFmdGVye2NvbnRlbnQ6bm9uZX0udmlzdWFscyAucHJvamVjdHttYXJnaW46MC41cmVtfS52aXN1YWxzIC5wcm9qZWN0IGZpZ2NhcHRpb257YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtwYWRkaW5nOjAgMCAxcmVtfS52aXN1YWxzIC5wcm9qZWN0IGZpZ2NhcHRpb24gLnRpdGxle3RleHQtYWxpZ246Y2VudGVyO2ZvbnQtd2VpZ2h0Om5vcm1hbH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcImF7cG9zaXRpb246cmVsYXRpdmU7Y29sb3I6IzAwNzBjYztvdXRsaW5lOm5vbmU7cGFkZGluZzowcmVtIDAuNXJlbX1hOmhvdmVyLGE6YWN0aXZlLGE6Zm9jdXMsYS5hY3RpdmV7dHJhbnNpdGlvbjpjb2xvciAyNTBtcyBlYXNlLWluLW91dDtjb2xvcjojMDA4NmYzfWE6aG92ZXI6OmFmdGVyLGE6YWN0aXZlOjphZnRlcixhOmZvY3VzOjphZnRlcixhLmFjdGl2ZTo6YWZ0ZXJ7d2lkdGg6MTAwJTtsZWZ0OjAlfWE6OmFmdGVye3RyYW5zaXRpb246d2lkdGggMjUwbXMgZWFzZS1pbi1vdXQsbGVmdCAyNTBtcyBlYXNlLWluLW91dDtjb250ZW50OlxcXCJcXFwiO3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQtY29sb3I6IzAwODZmMzt3aWR0aDowO2hlaWdodDoxcHg7bGVmdDo1MCU7Ym90dG9tOjB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIqe2NvbG9yOmluaGVyaXQ7YmFja2dyb3VuZC1jb2xvcjppbmhlcml0O3BhZGRpbmc6MDtib3JkZXI6bm9uZTttYXJnaW46MH11bCxvbHtsaXN0LXN0eWxlLXR5cGU6bm9uZX1he3RleHQtZGVjb3JhdGlvbjpub25lfWJ1dHRvbntjdXJzb3I6cG9pbnRlcjtjb2xvcjppbmhlcml0O2JhY2tncm91bmQtY29sb3I6aW5oZXJpdDtmb250LWZhbWlseTppbmhlcml0O2ZvbnQtc2l6ZTppbmhlcml0fWgxLGgye2ZvbnQtd2VpZ2h0Om5vcm1hbH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XG5cdHZhciBsaXN0ID0gW107XG5cblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXHRsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG5cdFx0XHR2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblx0XHRcdGlmKGl0ZW1bMl0pIHtcblx0XHRcdFx0cmV0dXJuIFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgY29udGVudCArIFwifVwiO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdFx0XHR9XG5cdFx0fSkuam9pbihcIlwiKTtcblx0fTtcblxuXHQvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXHRsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXG5cdFx0XHRtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG5cdFx0dmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGlkID0gdGhpc1tpXVswXTtcblx0XHRcdGlmKHR5cGVvZiBpZCA9PT0gXCJudW1iZXJcIilcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuXHRcdH1cblx0XHRmb3IoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XG5cdFx0XHQvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG5cdFx0XHQvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cblx0XHRcdC8vICBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cdFx0XHRpZih0eXBlb2YgaXRlbVswXSAhPT0gXCJudW1iZXJcIiB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IG1lZGlhUXVlcnk7XG5cdFx0XHRcdH0gZWxzZSBpZihtZWRpYVF1ZXJ5KSB7XG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGxpc3QucHVzaChpdGVtKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcblx0dmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuXHR2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cdGlmICghY3NzTWFwcGluZykge1xuXHRcdHJldHVybiBjb250ZW50O1xuXHR9XG5cblx0aWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuXHRcdHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG5cdFx0XHRyZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nXG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcblx0fVxuXG5cdHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59XG5cbi8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG5cdHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuXHR2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuXG5cdHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVzY2FwZSh1cmwpIHtcbiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHVybFxuICAgIH1cbiAgICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICAgICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgICB9XG4gICAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAgIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gICAgaWYgKC9bXCInKCkgXFx0XFxuXS8udGVzdCh1cmwpKSB7XG4gICAgICAgIHJldHVybiAnXCInICsgdXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgJ1xcXFxuJykgKyAnXCInXG4gICAgfVxuXG4gICAgcmV0dXJuIHVybFxufVxuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjUuMlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLGJhPXJlcXVpcmUoXCJzY2hlZHVsZVwiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBrPVtjLGQsZSxmLGcsaF0sbD0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGtbbCsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHQoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtjYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDp0KFwiMjI3XCIpO2Z1bmN0aW9uIGRhKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGVhPSExLGZhPW51bGwsaGE9ITEsaWE9bnVsbCxqYT17b25FcnJvcjpmdW5jdGlvbihhKXtlYT0hMDtmYT1hfX07ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGspe2VhPSExO2ZhPW51bGw7ZGEuYXBwbHkoamEsYXJndW1lbnRzKX1mdW5jdGlvbiBsYShhLGIsYyxkLGUsZixnLGgsayl7a2EuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGVhKXtpZihlYSl7dmFyIGw9ZmE7ZWE9ITE7ZmE9bnVsbH1lbHNlIHQoXCIxOThcIiksbD12b2lkIDA7aGF8fChoYT0hMCxpYT1sKX19dmFyIG1hPW51bGwsbmE9e307XG5mdW5jdGlvbiBvYSgpe2lmKG1hKWZvcih2YXIgYSBpbiBuYSl7dmFyIGI9bmFbYV0sYz1tYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOnQoXCI5NlwiLGEpO2lmKCFwYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp0KFwiOTdcIixhKTtwYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3FhLmhhc093blByb3BlcnR5KGgpP3QoXCI5OVwiLGgpOnZvaWQgMDtxYVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZyYShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8ocmEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDp0KFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gcmEoYSxiLGMpe3NhW2FdP3QoXCIxMDBcIixhKTp2b2lkIDA7c2FbYV09Yjt0YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBwYT1bXSxxYT17fSxzYT17fSx0YT17fSx1YT1udWxsLHZhPW51bGwsd2E9bnVsbDtmdW5jdGlvbiB4YShhLGIsYyxkKXtiPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXdhKGQpO2xhKGIsYyx2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24geWEoYSxiKXtudWxsPT1iP3QoXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24gemEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIEFhPW51bGw7ZnVuY3Rpb24gQmEoYSxiKXtpZihhKXt2YXIgYz1hLl9kaXNwYXRjaExpc3RlbmVycyxkPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYykpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtlKyspeGEoYSxiLGNbZV0sZFtlXSk7ZWxzZSBjJiZ4YShhLGIsYyxkKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBDYShhKXtyZXR1cm4gQmEoYSwhMCl9ZnVuY3Rpb24gRGEoYSl7cmV0dXJuIEJhKGEsITEpfVxudmFyIEVhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe21hP3QoXCIxMDFcIik6dm9pZCAwO21hPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO29hKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtuYS5oYXNPd25Qcm9wZXJ0eShjKSYmbmFbY109PT1kfHwobmFbY10/dChcIjEwMlwiLGMpOnZvaWQgMCxuYVtjXT1kLGI9ITApfWImJm9hKCl9fTtcbmZ1bmN0aW9uIEZhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9dWEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIEdhKGEsYil7bnVsbCE9PWEmJihBYT15YShBYSxhKSk7YT1BYTtBYT1udWxsO2lmKGEmJihiP3phKGEsQ2EpOnphKGEsRGEpLEFhP3QoXCI5NVwiKTp2b2lkIDAsaGEpKXRocm93IGI9aWEsaGE9ITEsaWE9bnVsbCxiO312YXIgSGE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksSWE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitIYSxKYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0hhO2Z1bmN0aW9uIEthKGEpe2lmKGFbSWFdKXJldHVybiBhW0lhXTtmb3IoOyFhW0lhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0lhXTtyZXR1cm4gNz09PWEudGFnfHw4PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIExhKGEpe2E9YVtJYV07cmV0dXJuIWF8fDchPT1hLnRhZyYmOCE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIE1hKGEpe2lmKDc9PT1hLnRhZ3x8OD09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt0KFwiMzNcIil9ZnVuY3Rpb24gTmEoYSl7cmV0dXJuIGFbSmFdfHxudWxsfWZ1bmN0aW9uIE9hKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNyE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gUGEoYSxiLGMpe2lmKGI9RmEoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz15YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz15YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIFFhKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9T2EoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KVBhKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspUGEoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gUmEoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9RmEoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXlhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXlhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBUYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJlJhKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFVhKGEpe3phKGEsUWEpfXZhciBWYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFdhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFlhPXthbmltYXRpb25lbmQ6V2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246V2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpXYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpXYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFphPXt9LCRhPXt9O1xuVmEmJigkYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBZYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBZYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBZYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBZYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIGFiKGEpe2lmKFphW2FdKXJldHVybiBaYVthXTtpZighWWFbYV0pcmV0dXJuIGE7dmFyIGI9WWFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gJGEpcmV0dXJuIFphW2FdPWJbY107cmV0dXJuIGF9XG52YXIgYmI9YWIoXCJhbmltYXRpb25lbmRcIiksY2I9YWIoXCJhbmltYXRpb25pdGVyYXRpb25cIiksZGI9YWIoXCJhbmltYXRpb25zdGFydFwiKSxlYj1hYihcInRyYW5zaXRpb25lbmRcIiksZmI9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGdiPW51bGwsaGI9bnVsbCxpYj1udWxsO1xuZnVuY3Rpb24gamIoKXtpZihpYilyZXR1cm4gaWI7dmFyIGEsYj1oYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBnYj9nYi52YWx1ZTpnYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBpYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGtiKCl7cmV0dXJuITB9ZnVuY3Rpb24gbGIoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHooYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2tiOmxiO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9bGI7cmV0dXJuIHRoaXN9XG5uKHoucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9a2IpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9a2IpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9a2J9LGlzUGVyc2lzdGVudDpsYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1sYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3ouSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuei5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDttYihjKTtyZXR1cm4gY307bWIoeik7ZnVuY3Rpb24gbmIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gb2IoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOnQoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gbWIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9bmI7YS5yZWxlYXNlPW9ifXZhciBwYj16LmV4dGVuZCh7ZGF0YTpudWxsfSkscWI9ei5leHRlbmQoe2RhdGE6bnVsbH0pLHJiPVs5LDEzLDI3LDMyXSxzYj1WYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csdGI9bnVsbDtWYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYodGI9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciB1Yj1WYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIXRiLHZiPVZhJiYoIXNifHx0YiYmODx0YiYmMTE+PXRiKSx3Yj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSx4Yj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSx5Yj0hMTtcbmZ1bmN0aW9uIHpiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09cmIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBBYihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBCYj0hMTtmdW5jdGlvbiBDYihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gQWIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3liPSEwO3JldHVybiB3YjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT13YiYmeWI/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24gRGIoYSxiKXtpZihCYilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhc2ImJnpiKGEsYik/KGE9amIoKSxpYj1oYj1nYj1udWxsLEJiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB2YiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgRWI9e2V2ZW50VHlwZXM6eGIsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKHNiKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9eGIuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9eGIuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPXhiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSBCYj96YihhLGMpJiYoZT14Yi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPXhiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHZiJiZcImtvXCIhPT1jLmxvY2FsZSYmKEJifHxlIT09eGIuY29tcG9zaXRpb25TdGFydD9lPT09eGIuY29tcG9zaXRpb25FbmQmJkJiJiYoZj1qYigpKTooZ2I9ZCxoYj1cInZhbHVlXCJpbiBnYj9nYi52YWx1ZTpnYi50ZXh0Q29udGVudCxCYj1cbiEwKSksZT1wYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj1BYihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksVWEoZSksZj1lKTpmPW51bGw7KGE9dWI/Q2IoYSxjKTpEYihhLGMpKT8oYj1xYi5nZXRQb29sZWQoeGIuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFVhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEZiPW51bGwsR2I9bnVsbCxIYj1udWxsO2Z1bmN0aW9uIEliKGEpe2lmKGE9dmEoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBGYj90KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj11YShhLnN0YXRlTm9kZSk7RmIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBKYihhKXtHYj9IYj9IYi5wdXNoKGEpOkhiPVthXTpHYj1hfWZ1bmN0aW9uIEtiKCl7aWYoR2Ipe3ZhciBhPUdiLGI9SGI7SGI9R2I9bnVsbDtJYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspSWIoYlthXSl9fVxuZnVuY3Rpb24gTGIoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBNYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBOYigpe312YXIgT2I9ITE7ZnVuY3Rpb24gUGIoYSxiKXtpZihPYilyZXR1cm4gYShiKTtPYj0hMDt0cnl7cmV0dXJuIExiKGEsYil9ZmluYWxseXtpZihPYj0hMSxudWxsIT09R2J8fG51bGwhPT1IYilOYigpLEtiKCl9fXZhciBRYj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBSYihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIVFiW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIFNiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBUYihhKXtpZighVmEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gVWIoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFZiKGEpe3ZhciBiPVViKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBXYihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9VmIoYSkpfWZ1bmN0aW9uIFhiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1VYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfVxudmFyIFliPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELFpiPS9eKC4qKVtcXFxcXFwvXS8sQz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLCRiPUM/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsYWM9Qz9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGJjPUM/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGNjPUM/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGRjPUM/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGVjPUM/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGZjPUM/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsZ2M9Qz9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxoYz1DP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixpYz1DP1N5bWJvbC5mb3IoXCJyZWFjdC5wbGFjZWhvbGRlclwiKTpcbjYwMTEzLGpjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBrYyhhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9amMmJmFbamNdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG5mdW5jdGlvbiBsYyhhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGdjOnJldHVyblwiQXN5bmNNb2RlXCI7Y2FzZSBiYzpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBhYzpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgZGM6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgY2M6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBpYzpyZXR1cm5cIlBsYWNlaG9sZGVyXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXtzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBmYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGVjOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgaGM6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcblwiRm9yd2FyZFJlZlwiKX1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS50aGVuJiYoYT0xPT09YS5fcmVhY3RTdGF0dXM/YS5fcmVhY3RSZXN1bHQ6bnVsbCkpcmV0dXJuIGxjKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIG1jKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgNDpjYXNlIDA6Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA3OmNhc2UgMTA6dmFyIGM9YS5fZGVidWdPd25lcixkPWEuX2RlYnVnU291cmNlLGU9bGMoYS50eXBlKTt2YXIgZj1udWxsO2MmJihmPWxjKGMudHlwZSkpO2M9ZTtlPVwiXCI7ZD9lPVwiIChhdCBcIitkLmZpbGVOYW1lLnJlcGxhY2UoWmIsXCJcIikrXCI6XCIrZC5saW5lTnVtYmVyK1wiKVwiOmYmJihlPVwiIChjcmVhdGVkIGJ5IFwiK2YrXCIpXCIpO2Y9XCJcXG4gICAgaW4gXCIrKGN8fFwiVW5rbm93blwiKStlO2JyZWFrIGE7ZGVmYXVsdDpmPVwiXCJ9Yis9ZjthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIG5jPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxwYz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LHFjPXt9LHJjPXt9O1xuZnVuY3Rpb24gc2MoYSl7aWYocGMuY2FsbChyYyxhKSlyZXR1cm4hMDtpZihwYy5jYWxsKHFjLGEpKXJldHVybiExO2lmKG5jLnRlc3QoYSkpcmV0dXJuIHJjW2FdPSEwO3FjW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHRjKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gdWMoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8dGMoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBEKGEsYixjLGQsZSl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yn12YXIgRT17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RVthXT1uZXcgRChhLDAsITEsYSxudWxsKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtFW2JdPW5ldyBEKGIsMSwhMSxhWzFdLG51bGwpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RVthXT1uZXcgRChhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RVthXT1uZXcgRChhLDIsITEsYSxudWxsKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RVthXT1uZXcgRChhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0VbYV09bmV3IEQoYSwzLCEwLGEsbnVsbCl9KTtcbltcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RVthXT1uZXcgRChhLDQsITEsYSxudWxsKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtFW2FdPW5ldyBEKGEsNiwhMSxhLG51bGwpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtFW2FdPW5ldyBEKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTt2YXIgdmM9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiB3YyhhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2YyxcbndjKTtFW2JdPW5ldyBEKGIsMSwhMSxhLG51bGwpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RVtiXT1uZXcgRChiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIil9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZSh2Yyx3Yyk7RVtiXT1uZXcgRChiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiKX0pO0UudGFiSW5kZXg9bmV3IEQoXCJ0YWJJbmRleFwiLDEsITEsXCJ0YWJpbmRleFwiLG51bGwpO1xuZnVuY3Rpb24geGMoYSxiLGMsZCl7dmFyIGU9RS5oYXNPd25Qcm9wZXJ0eShiKT9FW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwodWMoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP3NjKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiB5YyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gemMoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gQmMoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9eWMobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiBDYyhhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnhjKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBEYyhhLGIpe0NjKGEsYik7dmFyIGM9eWMoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/RWMoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmRWMoYSxiLnR5cGUseWMoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBGYyhhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiBFYyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIEdjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIEhjKGEsYixjKXthPXouZ2V0UG9vbGVkKEdjLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7SmIoYyk7VWEoYSk7cmV0dXJuIGF9dmFyIEljPW51bGwsSmM9bnVsbDtmdW5jdGlvbiBLYyhhKXtHYShhLCExKX1cbmZ1bmN0aW9uIExjKGEpe3ZhciBiPU1hKGEpO2lmKFhiKGIpKXJldHVybiBhfWZ1bmN0aW9uIE1jKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIE5jPSExO1ZhJiYoTmM9VGIoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gT2MoKXtJYyYmKEljLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFBjKSxKYz1JYz1udWxsKX1mdW5jdGlvbiBQYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmTGMoSmMpJiYoYT1IYyhKYyxhLFNiKGEpKSxQYihLYyxhKSl9ZnVuY3Rpb24gUWMoYSxiLGMpe1wiZm9jdXNcIj09PWE/KE9jKCksSWM9YixKYz1jLEljLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFBjKSk6XCJibHVyXCI9PT1hJiZPYygpfWZ1bmN0aW9uIFJjKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIExjKEpjKX1cbmZ1bmN0aW9uIFNjKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gTGMoYil9ZnVuY3Rpb24gVGMoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gTGMoYil9XG52YXIgVWM9e2V2ZW50VHlwZXM6R2MsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpOYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/TWEoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPU1jOlJiKGUpP05jP2Y9VGM6KGY9UmMsZz1RYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9U2MpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIEhjKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmRWMoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sVmM9ei5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFdjPXtBbHQ6XCJhbHRLZXlcIixcbkNvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFhjKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9V2NbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBZYygpe3JldHVybiBYY31cbnZhciBaYz0wLCRjPTAsYWQ9ITEsYmQ9ITEsY2Q9VmMuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlljLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVpjO1pjPWEuc2NyZWVuWDtyZXR1cm4gYWQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihhZD0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPSRjOyRjPWEuc2NyZWVuWTtyZXR1cm4gYmQ/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihiZD0hMCwwKX19KSxkZD1jZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksZWQ9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGZkPXtldmVudFR5cGVzOmVkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZj1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFmJiYhZSlyZXR1cm4gbnVsbDtlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP0thKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsaz12b2lkIDAsbD12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1jZCxoPWVkLm1vdXNlTGVhdmUsaz1lZC5tb3VzZUVudGVyLGw9XCJtb3VzZVwiO1xuZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpZz1kZCxoPWVkLnBvaW50ZXJMZWF2ZSxrPWVkLnBvaW50ZXJFbnRlcixsPVwicG9pbnRlclwiO3ZhciBtPW51bGw9PWY/ZTpNYShmKTtlPW51bGw9PWI/ZTpNYShiKTthPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2EudHlwZT1sK1wibGVhdmVcIjthLnRhcmdldD1tO2EucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQoayxiLGMsZCk7Yy50eXBlPWwrXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PW07ZD1iO2lmKGYmJmQpYTp7Yj1mO2U9ZDtsPTA7Zm9yKGc9YjtnO2c9T2EoZykpbCsrO2c9MDtmb3Ioaz1lO2s7az1PYShrKSlnKys7Zm9yKDswPGwtZzspYj1PYShiKSxsLS07Zm9yKDswPGctbDspZT1PYShlKSxnLS07Zm9yKDtsLS07KXtpZihiPT09ZXx8Yj09PWUuYWx0ZXJuYXRlKWJyZWFrIGE7Yj1PYShiKTtlPU9hKGUpfWI9bnVsbH1lbHNlIGI9bnVsbDtlPWI7Zm9yKGI9W107ZiYmZiE9PWU7KXtsPVxuZi5hbHRlcm5hdGU7aWYobnVsbCE9PWwmJmw9PT1lKWJyZWFrO2IucHVzaChmKTtmPU9hKGYpfWZvcihmPVtdO2QmJmQhPT1lOyl7bD1kLmFsdGVybmF0ZTtpZihudWxsIT09bCYmbD09PWUpYnJlYWs7Zi5wdXNoKGQpO2Q9T2EoZCl9Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKylSYShiW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihkPWYubGVuZ3RoOzA8ZC0tOylSYShmW2RdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm5bYSxjXX19LGdkPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7ZnVuY3Rpb24gaGQoYSxiKXtyZXR1cm4gYT09PWI/MCE9PWF8fDAhPT1ifHwxL2E9PT0xL2I6YSE9PWEmJmIhPT1ifVxuZnVuY3Rpb24gaWQoYSxiKXtpZihoZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWdkLmNhbGwoYixjW2RdKXx8IWhkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gamQoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDU9PT1iLnRhZz8yOjN9ZnVuY3Rpb24ga2QoYSl7MiE9PWpkKGEpP3QoXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gbGQoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9amQoYSksMz09PWI/dChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4ga2QoZSksYTtpZihnPT09ZClyZXR1cm4ga2QoZSksYjtnPWcuc2libGluZ310KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6dChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3QoXCIxOTBcIik6dm9pZCAwfTUhPT1jLnRhZz90KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIG1kKGEpe2E9bGQoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNz09PWIudGFnfHw4PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgbmQ9ei5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLG9kPXouZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSkscGQ9VmMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBxZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciByZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sc2Q9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LHRkPVZjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1yZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1xZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/c2RbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlljLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP3FkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP3FkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksdWQ9Y2QuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHZkPVZjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlljfSksd2Q9ei5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSkseGQ9Y2QuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx5ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtiYixcImFuaW1hdGlvbkVuZFwiXSxbY2IsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW2RiLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbZWIsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSx6ZD17fSxBZD17fTtmdW5jdGlvbiBCZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O3pkW2FdPWI7QWRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXtCZChhLCEwKX0pO3lkLmZvckVhY2goZnVuY3Rpb24oYSl7QmQoYSwhMSl9KTtcbnZhciBDZD17ZXZlbnRUeXBlczp6ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT1BZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9QWRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1xZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9dGQ7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPXBkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9Y2Q7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnVkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9dmQ7YnJlYWs7Y2FzZSBiYjpjYXNlIGNiOmNhc2UgZGI6YT1uZDticmVhaztjYXNlIGViOmE9d2Q7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9VmM7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT14ZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPW9kO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9ZGQ7YnJlYWs7ZGVmYXVsdDphPXp9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtVYShiKTtyZXR1cm4gYn19LERkPUNkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbkVkPVtdO2Z1bmN0aW9uIEZkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTUhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUthKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPVNiKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPHBhLmxlbmd0aDtoKyspe3ZhciBrPXBhW2hdO2smJihrPWsuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXlhKGcsaykpfUdhKGcsITEpfX12YXIgR2Q9ITA7XG5mdW5jdGlvbiBGKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KERkKGEpP0hkOklkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gSmQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRGQoYSk/SGQ6SWQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBIZChhLGIpe01iKElkLGEsYil9XG5mdW5jdGlvbiBJZChhLGIpe2lmKEdkKXt2YXIgYz1TYihiKTtjPUthKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09amQoYyl8fChjPW51bGwpO2lmKEVkLmxlbmd0aCl7dmFyIGQ9RWQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7UGIoRmQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD5FZC5sZW5ndGgmJkVkLnB1c2goYSl9fX12YXIgS2Q9e30sTGQ9MCxNZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBOZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxNZCl8fChhW01kXT1MZCsrLEtkW2FbTWRdXT17fSk7cmV0dXJuIEtkW2FbTWRdXX1mdW5jdGlvbiBPZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gUWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gUmQoYSxiKXt2YXIgYz1RZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1RZChjKX19ZnVuY3Rpb24gU2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9TZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBUZCgpe2Zvcih2YXIgYT13aW5kb3csYj1PZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e2E9Yi5jb250ZW50RG9jdW1lbnQuZGVmYXVsdFZpZXd9Y2F0Y2goYyl7YnJlYWt9Yj1PZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBVZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxudmFyIFZkPVZhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsV2Q9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFhkPW51bGwsWWQ9bnVsbCxaZD1udWxsLCRkPSExO1xuZnVuY3Rpb24gYWUoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZigkZHx8bnVsbD09WGR8fFhkIT09T2QoYykpcmV0dXJuIG51bGw7Yz1YZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZVZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBaZCYmaWQoWmQsYyk/bnVsbDooWmQ9YyxhPXouZ2V0UG9vbGVkKFdkLnNlbGVjdCxZZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVhkLFVhKGEpLGEpfVxudmFyIGJlPXtldmVudFR5cGVzOldkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPU5kKGUpO2Y9dGEub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9NYShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKFJiKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKVhkPWUsWWQ9YixaZD1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6WmQ9WWQ9WGQ9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6JGQ9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiAkZD0hMSxhZShjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihWZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGFlKGMsZCl9cmV0dXJuIG51bGx9fTtFYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3VhPU5hO3ZhPUxhO3dhPU1hO0VhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46Q2QsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmZkLENoYW5nZUV2ZW50UGx1Z2luOlVjLFNlbGVjdEV2ZW50UGx1Z2luOmJlLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46RWJ9KTtmdW5jdGlvbiBjZShhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGRlKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9Y2UoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIGVlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit5YyhjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gZmUoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3QoXCI5MVwiKTp2b2lkIDA7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gZ2UoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz90KFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6dChcIjkzXCIpLGI9YlswXSksYz1iKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6eWMoYyl9fVxuZnVuY3Rpb24gaGUoYSxiKXt2YXIgYz15YyhiLnZhbHVlKSxkPXljKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gaWUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIGplPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGtlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gbGUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2tlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG1lPXZvaWQgMCxuZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1qZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXttZT1tZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTttZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1tZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBvZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHBlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHFlPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhwZSkuZm9yRWFjaChmdW5jdGlvbihhKXtxZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3BlW2JdPXBlW2FdfSl9KTtcbmZ1bmN0aW9uIHJlKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKTt2YXIgZT1jO3ZhciBmPWJbY107ZT1udWxsPT1mfHxcImJvb2xlYW5cIj09PXR5cGVvZiBmfHxcIlwiPT09Zj9cIlwiOmR8fFwibnVtYmVyXCIhPT10eXBlb2YgZnx8MD09PWZ8fHBlLmhhc093blByb3BlcnR5KGUpJiZwZVtlXT8oXCJcIitmKS50cmltKCk6ZitcInB4XCI7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBzZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gdGUoYSxiKXtiJiYoc2VbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3QoXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/dChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp0KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT90KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gdWUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24gdmUoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9TmQoYSk7Yj10YVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6SmQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkpkKFwiZm9jdXNcIixhKTtKZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6VGIoZSkmJkpkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWZiLmluZGV4T2YoZSkmJkYoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24gd2UoKXt9dmFyIHhlPW51bGwseWU9bnVsbDtcbmZ1bmN0aW9uIHplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiBBZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9ZnVuY3Rpb24gQmUoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1cbmZ1bmN0aW9uIENlKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1uZXcgU2V0O3ZhciBEZT1bXSxFZT0tMTtmdW5jdGlvbiBHKGEpezA+RWV8fChhLmN1cnJlbnQ9RGVbRWVdLERlW0VlXT1udWxsLEVlLS0pfWZ1bmN0aW9uIEgoYSxiKXtFZSsrO0RlW0VlXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEZlPXt9LEk9e2N1cnJlbnQ6RmV9LEo9e2N1cnJlbnQ6ITF9LEdlPUZlO1xuZnVuY3Rpb24gSGUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBGZTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBLKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gSWUoYSl7RyhKLGEpO0coSSxhKX1mdW5jdGlvbiBKZShhKXtHKEosYSk7RyhJLGEpfVxuZnVuY3Rpb24gS2UoYSxiLGMpe0kuY3VycmVudCE9PUZlP3QoXCIxNjhcIik6dm9pZCAwO0goSSxiLGEpO0goSixjLGEpfWZ1bmN0aW9uIExlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZCllIGluIGE/dm9pZCAwOnQoXCIxMDhcIixsYyhiKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIG4oe30sYyxkKX1mdW5jdGlvbiBNZShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEZlO0dlPUkuY3VycmVudDtIKEksYixhKTtIKEosSi5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gTmUoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2Q/dm9pZCAwOnQoXCIxNjlcIik7Yz8oYj1MZShhLGIsR2UpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YixHKEosYSksRyhJLGEpLEgoSSxiLGEpKTpHKEosYSk7SChKLGMsYSl9dmFyIE9lPW51bGwsUGU9bnVsbDtmdW5jdGlvbiBRZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fVxuZnVuY3Rpb24gUmUoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7T2U9UWUoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO1BlPVFlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBTZShhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gVGUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1hLmFsdGVybmF0ZTtudWxsPT09ZD8oZD1uZXcgU2UoYS50YWcsYixhLmtleSxhLm1vZGUpLGQudHlwZT1hLnR5cGUsZC5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsZC5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1kKTooZC5wZW5kaW5nUHJvcHM9YixkLmVmZmVjdFRhZz0wLGQubmV4dEVmZmVjdD1udWxsLGQuZmlyc3RFZmZlY3Q9bnVsbCxkLmxhc3RFZmZlY3Q9bnVsbCk7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtkLmV4cGlyYXRpb25UaW1lPWIhPT1hLnBlbmRpbmdQcm9wcz9jOmEuZXhwaXJhdGlvblRpbWU7ZC5jaGlsZD1hLmNoaWxkO2QubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7ZC5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtkLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7ZC5maXJzdENvbnRleHREZXBlbmRlbmN5PWEuZmlyc3RDb250ZXh0RGVwZW5kZW5jeTtkLnNpYmxpbmc9YS5zaWJsaW5nO1xuZC5pbmRleD1hLmluZGV4O2QucmVmPWEucmVmO3JldHVybiBkfVxuZnVuY3Rpb24gVmUoYSxiLGMpe3ZhciBkPWEudHlwZSxlPWEua2V5O2E9YS5wcm9wczt2YXIgZj12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpZj1UZShkKT8yOjQ7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGQpZj03O2Vsc2UgYTpzd2l0Y2goZCl7Y2FzZSBiYzpyZXR1cm4gV2UoYS5jaGlsZHJlbixiLGMsZSk7Y2FzZSBnYzpmPTEwO2J8PTM7YnJlYWs7Y2FzZSBjYzpmPTEwO2J8PTI7YnJlYWs7Y2FzZSBkYzpyZXR1cm4gZD1uZXcgU2UoMTUsYSxlLGJ8NCksZC50eXBlPWRjLGQuZXhwaXJhdGlvblRpbWU9YyxkO2Nhc2UgaWM6Zj0xNjticmVhaztkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpc3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgZWM6Zj0xMjticmVhayBhO2Nhc2UgZmM6Zj0xMTticmVhayBhO2Nhc2UgaGM6Zj0xMzticmVhayBhO2RlZmF1bHQ6aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQudGhlbil7Zj00O2JyZWFrIGF9fXQoXCIxMzBcIixcbm51bGw9PWQ/ZDp0eXBlb2YgZCxcIlwiKX1iPW5ldyBTZShmLGEsZSxiKTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9ZnVuY3Rpb24gV2UoYSxiLGMsZCl7YT1uZXcgU2UoOSxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIFhlKGEsYixjKXthPW5ldyBTZSg4LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gWWUoYSxiLGMpe2I9bmV3IFNlKDYsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gWmUoYSxiKXthLmRpZEVycm9yPSExO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTswPT09Yz9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT1iOmM+Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YjphLmxhdGVzdFBlbmRpbmdUaW1lPGImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWIpOyRlKGIsYSl9ZnVuY3Rpb24gJGUoYSxiKXt2YXIgYz1iLmVhcmxpZXN0U3VzcGVuZGVkVGltZSxkPWIubGF0ZXN0U3VzcGVuZGVkVGltZSxlPWIuZWFybGllc3RQZW5kaW5nVGltZSxmPWIubGF0ZXN0UGluZ2VkVGltZTtlPTAhPT1lP2U6ZjswPT09ZSYmKDA9PT1hfHxkPmEpJiYoZT1kKTthPWU7MCE9PWEmJjAhPT1jJiZjPGEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9dmFyIGFmPSExO1xuZnVuY3Rpb24gYmYoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLGZpcnN0VXBkYXRlOm51bGwsbGFzdFVwZGF0ZTpudWxsLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fWZ1bmN0aW9uIGNmKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIGRmKGEpe3JldHVybntleHBpcmF0aW9uVGltZTphLHRhZzowLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIGVmKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIGZmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1iZihhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1iZihhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1iZihjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9Y2YoZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9Y2YoZCkpO251bGw9PT1lfHxkPT09ZT9lZihkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KGVmKGQsYiksZWYoZSxiKSk6KGVmKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gZ2YoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1iZihhLm1lbW9pemVkU3RhdGUpOmhmKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gaGYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9Y2YoYikpO3JldHVybiBifVxuZnVuY3Rpb24gamYoYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSAzOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDY0O2Nhc2UgMDphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2UgMjphZj0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIGtmKGEsYixjLGQsZSl7YWY9ITE7Yj1oZihhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGs9Yi5maXJzdFVwZGF0ZSxsPWY7bnVsbCE9PWs7KXt2YXIgbT1rLmV4cGlyYXRpb25UaW1lO2lmKG0+ZSl7aWYobnVsbD09PWcmJihnPWssZj1sKSwwPT09aHx8aD5tKWg9bX1lbHNlIGw9amYoYSxiLGssbCxjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9azooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RFZmZlY3Q9aykpO2s9ay5uZXh0fW09bnVsbDtmb3Ioaz1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWs7KXt2YXIgcj1rLmV4cGlyYXRpb25UaW1lO2lmKHI+ZSl7aWYobnVsbD09PW0mJihtPWssbnVsbD09PWcmJihmPWwpKSwwPT09aHx8aD5yKWg9cn1lbHNlIGw9amYoYSxiLGssbCxjLGQpLFxubnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1rOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9aykpO2s9ay5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1tP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09bSYmKGY9bCk7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPW07YS5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1sfVxuZnVuY3Rpb24gbGYoYSxiLGMpe251bGwhPT1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUmJihudWxsIT09Yi5sYXN0VXBkYXRlJiYoYi5sYXN0VXBkYXRlLm5leHQ9Yi5maXJzdENhcHR1cmVkVXBkYXRlLGIubGFzdFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZSksYi5maXJzdENhcHR1cmVkVXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlPW51bGwpO21mKGIuZmlyc3RFZmZlY3QsYyk7Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbDttZihiLmZpcnN0Q2FwdHVyZWRFZmZlY3QsYyk7Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGx9ZnVuY3Rpb24gbWYoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5jYWxsYmFjaztpZihudWxsIT09Yyl7YS5jYWxsYmFjaz1udWxsO3ZhciBkPWI7XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/dChcIjE5MVwiLGMpOnZvaWQgMDtjLmNhbGwoZCl9YT1hLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gbmYoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazptYyhiKX19dmFyIG9mPXtjdXJyZW50Om51bGx9LHBmPW51bGwscWY9bnVsbCxyZj1udWxsO2Z1bmN0aW9uIHNmKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0gob2YsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHRmKGEpe3ZhciBiPW9mLmN1cnJlbnQ7RyhvZixhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHVmKGEpe3BmPWE7cmY9cWY9bnVsbDthLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9bnVsbH1cbmZ1bmN0aW9uIHZmKGEsYil7aWYocmYhPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKXJmPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O251bGw9PT1xZj8obnVsbD09PXBmP3QoXCIyNzdcIik6dm9pZCAwLHBmLmZpcnN0Q29udGV4dERlcGVuZGVuY3k9cWY9Yik6cWY9cWYubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdmPXt9LEw9e2N1cnJlbnQ6d2Z9LHhmPXtjdXJyZW50OndmfSx5Zj17Y3VycmVudDp3Zn07ZnVuY3Rpb24gemYoYSl7YT09PXdmP3QoXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfVxuZnVuY3Rpb24gQWYoYSxiKXtIKHlmLGIsYSk7SCh4ZixhLGEpO0goTCx3ZixhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpsZShudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9bGUoYixjKX1HKEwsYSk7SChMLGIsYSl9ZnVuY3Rpb24gQmYoYSl7RyhMLGEpO0coeGYsYSk7Ryh5ZixhKX1mdW5jdGlvbiBDZihhKXt6Zih5Zi5jdXJyZW50KTt2YXIgYj16ZihMLmN1cnJlbnQpO3ZhciBjPWxlKGIsYS50eXBlKTtiIT09YyYmKEgoeGYsYSxhKSxIKEwsYyxhKSl9ZnVuY3Rpb24gRGYoYSl7eGYuY3VycmVudD09PWEmJihHKEwsYSksRyh4ZixhKSl9dmFyIEVmPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24gRmYoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgSmY9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1qZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZigpO2Q9SGYoZCxhKTt2YXIgZT1kZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7ZmYoYSxlKTtJZihhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZigpO2Q9SGYoZCxhKTt2YXIgZT1kZihkKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtmZihhLGUpO0lmKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPUdmKCk7Yz1IZihjLGEpO3ZhciBkPWRmKGMpO2QudGFnPTI7dm9pZCAwIT09XG5iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7ZmYoYSxkKTtJZihhLGMpfX07ZnVuY3Rpb24gS2YoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8haWQoYyxkKXx8IWlkKGUsZik6ITB9ZnVuY3Rpb24gTGYoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJkpmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24gTWYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGUsZj1LKGIpP0dlOkkuY3VycmVudDtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUVmO2UuY29udGV4dD1IZShhLGYpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKGtmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihGZihhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmXG5lLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZKZi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJihrZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIE5mPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBPZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigyIT09Yy50YWcmJjMhPT1jLnRhZz90KFwiMTEwXCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDp0KFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1FZiYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifVwic3RyaW5nXCIhPT10eXBlb2YgYT90KFwiMjg0XCIpOnZvaWQgMDtjLl9vd25lcj92b2lkIDA6dChcIjI1NFwiLGEpfXJldHVybiBhfVxuZnVuY3Rpb24gUGYoYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJnQoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIFFmKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9VWUoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDghPT1iLnRhZylyZXR1cm4gYj1YZShjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIudHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1PZihhLGIsYyksZC5yZXR1cm49YSxkO2Q9VmUoYyxhLm1vZGUsZCk7ZC5yZWY9T2YoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9XG5ZZShjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDkhPT1iLnRhZylyZXR1cm4gYj1XZShjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcihhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9WGUoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgJGI6cmV0dXJuIGM9VmUoYixhLm1vZGUsYyksYy5yZWY9T2YoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIGFjOnJldHVybiBiPVllKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZihOZihiKXx8a2MoYikpcmV0dXJuIGI9V2UoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1cbmEsYjtQZihhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIEEoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgJGI6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1iYz9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6ayhhLGIsYyxkKTpudWxsO2Nhc2UgYWM6cmV0dXJuIGMua2V5PT09ZT9sKGEsYixjLGQpOm51bGx9aWYoTmYoYyl8fGtjKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtQZihhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIFMoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7XG5pZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSAkYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09YmM/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgYWM6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSl9aWYoTmYoZCl8fGtjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtQZihiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIEIoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsbT1udWxsLHA9Zyx1PWc9MCxxPW51bGw7bnVsbCE9PXAmJnU8aC5sZW5ndGg7dSsrKXtwLmluZGV4PnU/KHE9cCxwPW51bGwpOnE9cC5zaWJsaW5nO3ZhciB2PUEoZSxwLGhbdV0sayk7aWYobnVsbD09PXYpe251bGw9PT1wJiYocD1xKTticmVha31hJiZwJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxcbnApO2c9Zih2LGcsdSk7bnVsbD09PW0/bD12Om0uc2libGluZz12O209djtwPXF9aWYodT09PWgubGVuZ3RoKXJldHVybiBjKGUscCksbDtpZihudWxsPT09cCl7Zm9yKDt1PGgubGVuZ3RoO3UrKylpZihwPXIoZSxoW3VdLGspKWc9ZihwLGcsdSksbnVsbD09PW0/bD1wOm0uc2libGluZz1wLG09cDtyZXR1cm4gbH1mb3IocD1kKGUscCk7dTxoLmxlbmd0aDt1KyspaWYocT1TKHAsZSx1LGhbdV0saykpYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZwLmRlbGV0ZShudWxsPT09cS5rZXk/dTpxLmtleSksZz1mKHEsZyx1KSxudWxsPT09bT9sPXE6bS5zaWJsaW5nPXEsbT1xO2EmJnAuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gUChlLGcsaCxrKXt2YXIgbD1rYyhoKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgbD90KFwiMTUwXCIpOnZvaWQgMDtoPWwuY2FsbChoKTtudWxsPT1oP3QoXCIxNTFcIik6dm9pZCAwO2Zvcih2YXIgbT1sPW51bGwscD1nLHU9Zz1cbjAscT1udWxsLHY9aC5uZXh0KCk7bnVsbCE9PXAmJiF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpe3AuaW5kZXg+dT8ocT1wLHA9bnVsbCk6cT1wLnNpYmxpbmc7dmFyIHg9QShlLHAsdi52YWx1ZSxrKTtpZihudWxsPT09eCl7cHx8KHA9cSk7YnJlYWt9YSYmcCYmbnVsbD09PXguYWx0ZXJuYXRlJiZiKGUscCk7Zz1mKHgsZyx1KTtudWxsPT09bT9sPXg6bS5zaWJsaW5nPXg7bT14O3A9cX1pZih2LmRvbmUpcmV0dXJuIGMoZSxwKSxsO2lmKG51bGw9PT1wKXtmb3IoOyF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpdj1yKGUsdi52YWx1ZSxrKSxudWxsIT09diYmKGc9Zih2LGcsdSksbnVsbD09PW0/bD12Om0uc2libGluZz12LG09dik7cmV0dXJuIGx9Zm9yKHA9ZChlLHApOyF2LmRvbmU7dSsrLHY9aC5uZXh0KCkpdj1TKHAsZSx1LHYudmFsdWUsayksbnVsbCE9PXYmJihhJiZudWxsIT09di5hbHRlcm5hdGUmJnAuZGVsZXRlKG51bGw9PT12LmtleT91OnYua2V5KSxnPWYodixnLHUpLG51bGw9PT1cbm0/bD12Om0uc2libGluZz12LG09dik7YSYmcC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09YmMmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgJGI6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKWlmKDk9PT1rLnRhZz9mLnR5cGU9PT1iYzprLnR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PWJjP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1PZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1iYz8oZD1XZShmLnByb3BzLmNoaWxkcmVuLFxuYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1WZShmLGEubW9kZSxoKSxoLnJlZj1PZihhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgYWM6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoNj09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1ZZShmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjg9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1cbmEsYT1kKTooYyhhLGQpLGQ9WGUoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoTmYoZikpcmV0dXJuIEIoYSxkLGYsaCk7aWYoa2MoZikpcmV0dXJuIFAoYSxkLGYsaCk7bCYmUGYoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAyOmNhc2UgMzpjYXNlIDA6aD1hLnR5cGUsdChcIjE1MlwiLGguZGlzcGxheU5hbWV8fGgubmFtZXx8XCJDb21wb25lbnRcIil9cmV0dXJuIGMoYSxkKX19dmFyIFJmPVFmKCEwKSxTZj1RZighMSksVGY9bnVsbCxVZj1udWxsLFZmPSExO2Z1bmN0aW9uIFdmKGEsYil7dmFyIGM9bmV3IFNlKDcsbnVsbCxudWxsLDApO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfVxuZnVuY3Rpb24gWGYoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNzp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgODpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gWWYoYSl7aWYoVmYpe3ZhciBiPVVmO2lmKGIpe3ZhciBjPWI7aWYoIVhmKGEsYikpe2I9QmUoYyk7aWYoIWJ8fCFYZihhLGIpKXthLmVmZmVjdFRhZ3w9MjtWZj0hMTtUZj1hO3JldHVybn1XZihUZixjKX1UZj1hO1VmPUNlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsVmY9ITEsVGY9YX19XG5mdW5jdGlvbiBaZihhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNyE9PWEudGFnJiY1IT09YS50YWc7KWE9YS5yZXR1cm47VGY9YX1mdW5jdGlvbiAkZihhKXtpZihhIT09VGYpcmV0dXJuITE7aWYoIVZmKXJldHVybiBaZihhKSxWZj0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNyE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUFlKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1VZjtiOylXZihhLGIpLGI9QmUoYik7WmYoYSk7VWY9VGY/QmUoYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gYWcoKXtVZj1UZj1udWxsO1ZmPSExfVxuZnVuY3Rpb24gYmcoYSl7c3dpdGNoKGEuX3JlYWN0U3RhdHVzKXtjYXNlIDE6cmV0dXJuIGEuX3JlYWN0UmVzdWx0O2Nhc2UgMjp0aHJvdyBhLl9yZWFjdFJlc3VsdDtjYXNlIDA6dGhyb3cgYTtkZWZhdWx0OnRocm93IGEuX3JlYWN0U3RhdHVzPTAsYS50aGVuKGZ1bmN0aW9uKGIpe2lmKDA9PT1hLl9yZWFjdFN0YXR1cyl7YS5fcmVhY3RTdGF0dXM9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXt2YXIgYz1iLmRlZmF1bHQ7Yj12b2lkIDAhPT1jJiZudWxsIT09Yz9jOmJ9YS5fcmVhY3RSZXN1bHQ9Yn19LGZ1bmN0aW9uKGIpezA9PT1hLl9yZWFjdFN0YXR1cyYmKGEuX3JlYWN0U3RhdHVzPTIsYS5fcmVhY3RSZXN1bHQ9Yil9KSxhO319dmFyIGNnPVliLlJlYWN0Q3VycmVudE93bmVyO2Z1bmN0aW9uIE0oYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9TZihiLG51bGwsYyxkKTpSZihiLGEuY2hpbGQsYyxkKX1cbmZ1bmN0aW9uIGRnKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtpZighSi5jdXJyZW50JiZiLm1lbW9pemVkUHJvcHM9PT1kJiZmPT09KG51bGwhPT1hP2EucmVmOm51bGwpKXJldHVybiBlZyhhLGIsZSk7Yz1jKGQsZik7TShhLGIsYyxlKTtiLm1lbW9pemVkUHJvcHM9ZDtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBmZyhhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIGdnKGEsYixjLGQsZSl7dmFyIGY9SyhjKT9HZTpJLmN1cnJlbnQ7Zj1IZShiLGYpO3VmKGIsZSk7Yz1jKGQsZik7Yi5lZmZlY3RUYWd8PTE7TShhLGIsYyxlKTtiLm1lbW9pemVkUHJvcHM9ZDtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhnKGEsYixjLGQsZSl7aWYoSyhjKSl7dmFyIGY9ITA7TWUoYil9ZWxzZSBmPSExO3VmKGIsZSk7aWYobnVsbD09PWEpaWYobnVsbD09PWIuc3RhdGVOb2RlKXt2YXIgZz1LKGMpP0dlOkkuY3VycmVudCxoPWMuY29udGV4dFR5cGVzLGs9bnVsbCE9PWgmJnZvaWQgMCE9PWg7aD1rP0hlKGIsZyk6RmU7dmFyIGw9bmV3IGMoZCxoKTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWwuc3RhdGUmJnZvaWQgMCE9PWwuc3RhdGU/bC5zdGF0ZTpudWxsO2wudXBkYXRlcj1KZjtiLnN0YXRlTm9kZT1sO2wuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO2smJihrPWIuc3RhdGVOb2RlLGsuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1nLGsuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9aCk7TWYoYixjLGQsZSk7ZD0hMH1lbHNle2c9Yi5zdGF0ZU5vZGU7aD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBtPWcuY29udGV4dDtcbms9SyhjKT9HZTpJLmN1cnJlbnQ7az1IZShiLGspO3ZhciByPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhsPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fG0hPT1rKSYmTGYoYixnLGQsayk7YWY9ITE7dmFyIEE9Yi5tZW1vaXplZFN0YXRlO209Zy5zdGF0ZT1BO3ZhciBTPWIudXBkYXRlUXVldWU7bnVsbCE9PVMmJihrZihiLFMsZCxnLGUpLG09Yi5tZW1vaXplZFN0YXRlKTtoIT09ZHx8QSE9PW18fEouY3VycmVudHx8YWY/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiByJiYoRmYoYixjLHIsZCksbT1iLm1lbW9pemVkU3RhdGUpLChoPWFmfHxLZihiLGMsaCxkLEEsbSxrKSk/KGx8fFwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1tKSxnLnByb3BzPWQsZy5zdGF0ZT1tLGcuY29udGV4dD1rLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSxoPVxuYi5tZW1vaXplZFByb3BzLGcucHJvcHM9aCxtPWcuY29udGV4dCxrPUsoYyk/R2U6SS5jdXJyZW50LGs9SGUoYixrKSxyPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChsPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fG0hPT1rKSYmTGYoYixnLGQsayksYWY9ITEsbT1iLm1lbW9pemVkU3RhdGUsQT1nLnN0YXRlPW0sUz1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1TJiYoa2YoYixTLGQsZyxlKSxBPWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fG0hPT1BfHxKLmN1cnJlbnR8fGFmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgciYmKEZmKGIsYyxyLGQpLEE9Yi5tZW1vaXplZFN0YXRlKSwocj1hZnx8S2YoYixjLGgsZCxcbm0sQSxrKSk/KGx8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsQSxrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLEEsaykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZtPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJm09PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9QSksZy5wcm9wcz1kLGcuc3RhdGU9QSxnLmNvbnRleHQ9ayxkPXIpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJm09PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJm09PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gaWcoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gaWcoYSxiLGMsZCxlLGYpe2ZnKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZOZShiLGMsITEpLGVnKGEsYixmKTtkPWIuc3RhdGVOb2RlO2NnLmN1cnJlbnQ9Yjt2YXIgaD1nP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZyYmKE0oYSxiLG51bGwsZiksYi5jaGlsZD1udWxsKTtNKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2IubWVtb2l6ZWRQcm9wcz1kLnByb3BzO2UmJk5lKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gamcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9LZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZLZShhLGIuY29udGV4dCwhMSk7QWYoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gbmcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9XG5mdW5jdGlvbiBvZyhhLGIsYyxkKXtudWxsIT09YT90KFwiMTU1XCIpOnZvaWQgMDt2YXIgZT1iLnBlbmRpbmdQcm9wcztpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50aGVuKXtjPWJnKGMpO3ZhciBmPWM7Zj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9UZShmKT8zOjE6dm9pZCAwIT09ZiYmbnVsbCE9PWYmJmYuJCR0eXBlb2Y/MTQ6NDtmPWIudGFnPWY7dmFyIGc9bmcoYyxlKTtzd2l0Y2goZil7Y2FzZSAxOnJldHVybiBnZyhhLGIsYyxnLGQpO2Nhc2UgMzpyZXR1cm4gaGcoYSxiLGMsZyxkKTtjYXNlIDE0OnJldHVybiBkZyhhLGIsYyxnLGQpO2RlZmF1bHQ6dChcIjI4M1wiLGMpfX1mPUhlKGIsSS5jdXJyZW50KTt1ZihiLGQpO2Y9YyhlLGYpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnJlbmRlciYmdm9pZCAwPT09Zi4kJHR5cGVvZil7Yi50YWc9MjtLKGMpP1xuKGc9ITAsTWUoYikpOmc9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1mLnN0YXRlJiZ2b2lkIDAhPT1mLnN0YXRlP2Yuc3RhdGU6bnVsbDt2YXIgaD1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgaCYmRmYoYixjLGgsZSk7Zi51cGRhdGVyPUpmO2Iuc3RhdGVOb2RlPWY7Zi5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7TWYoYixjLGUsZCk7cmV0dXJuIGlnKGEsYixjLCEwLGcsZCl9Yi50YWc9MDtNKGEsYixmLGQpO2IubWVtb2l6ZWRQcm9wcz1lO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gZWcoYSxiLGMpe251bGwhPT1hJiYoYi5maXJzdENvbnRleHREZXBlbmRlbmN5PWEuZmlyc3RDb250ZXh0RGVwZW5kZW5jeSk7dmFyIGQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDA9PT1kfHxkPmMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3QoXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1VZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1VZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZighSi5jdXJyZW50JiYoMD09PWR8fGQ+Yykpe3N3aXRjaChiLnRhZyl7Y2FzZSA1OmpnKGIpO2FnKCk7YnJlYWs7Y2FzZSA3OkNmKGIpO2JyZWFrO2Nhc2UgMjpLKGIudHlwZSkmJk1lKGIpO2JyZWFrO2Nhc2UgMzpLKGIudHlwZS5fcmVhY3RSZXN1bHQpJiZNZShiKTticmVhaztjYXNlIDY6QWYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEyOnNmKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKX1yZXR1cm4gZWcoYSxiLGMpfWIuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgNDpyZXR1cm4gb2coYSxiLGIudHlwZSxjKTtjYXNlIDA6cmV0dXJuIGdnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsYyk7Y2FzZSAxOnZhciBlPWIudHlwZS5fcmVhY3RSZXN1bHQ7ZD1iLnBlbmRpbmdQcm9wczthPWdnKGEsYixlLG5nKGUsZCksYyk7Yi5tZW1vaXplZFByb3BzPWQ7cmV0dXJuIGE7XG5jYXNlIDI6cmV0dXJuIGhnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsYyk7Y2FzZSAzOnJldHVybiBlPWIudHlwZS5fcmVhY3RSZXN1bHQsZD1iLnBlbmRpbmdQcm9wcyxhPWhnKGEsYixlLG5nKGUsZCksYyksYi5tZW1vaXplZFByb3BzPWQsYTtjYXNlIDU6amcoYik7ZD1iLnVwZGF0ZVF1ZXVlO251bGw9PT1kP3QoXCIyODJcIik6dm9pZCAwO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7a2YoYixkLGIucGVuZGluZ1Byb3BzLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlhZygpLGI9ZWcoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihlPShudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpJiZlLmh5ZHJhdGUpVWY9Q2UoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksVGY9YixlPVZmPSEwO2U/KGIuZWZmZWN0VGFnfD0yLGIuY2hpbGQ9U2YoYixudWxsLGQsYykpOihNKGEsYixkLGMpLGFnKCkpO2I9Yi5jaGlsZH1yZXR1cm4gYjtcbmNhc2UgNzpDZihiKTtudWxsPT09YSYmWWYoYik7ZD1iLnR5cGU7ZT1iLnBlbmRpbmdQcm9wczt2YXIgZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxnPWUuY2hpbGRyZW47QWUoZCxlKT9nPW51bGw6bnVsbCE9PWYmJkFlKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpO2ZnKGEsYik7MTA3Mzc0MTgyMyE9PWMmJmIubW9kZSYxJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGIubWVtb2l6ZWRQcm9wcz1lLGI9bnVsbCk6KE0oYSxiLGcsYyksYi5tZW1vaXplZFByb3BzPWUsYj1iLmNoaWxkKTtyZXR1cm4gYjtjYXNlIDg6cmV0dXJuIG51bGw9PT1hJiZZZihiKSxiLm1lbW9pemVkUHJvcHM9Yi5wZW5kaW5nUHJvcHMsbnVsbDtjYXNlIDE2OnJldHVybiBudWxsO2Nhc2UgNjpyZXR1cm4gQWYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9UmYoYixudWxsLGQsYyk6TShhLGIsZCxjKSxiLm1lbW9pemVkUHJvcHM9XG5kLGIuY2hpbGQ7Y2FzZSAxMzpyZXR1cm4gZGcoYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxjKTtjYXNlIDE0OnJldHVybiBlPWIudHlwZS5fcmVhY3RSZXN1bHQsZD1iLnBlbmRpbmdQcm9wcyxhPWRnKGEsYixlLG5nKGUsZCksYyksYi5tZW1vaXplZFByb3BzPWQsYTtjYXNlIDk6cmV0dXJuIGQ9Yi5wZW5kaW5nUHJvcHMsTShhLGIsZCxjKSxiLm1lbW9pemVkUHJvcHM9ZCxiLmNoaWxkO2Nhc2UgMTA6cmV0dXJuIGQ9Yi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sTShhLGIsZCxjKSxiLm1lbW9pemVkUHJvcHM9ZCxiLmNoaWxkO2Nhc2UgMTU6cmV0dXJuIGQ9Yi5wZW5kaW5nUHJvcHMsTShhLGIsZC5jaGlsZHJlbixjKSxiLm1lbW9pemVkUHJvcHM9ZCxiLmNoaWxkO2Nhc2UgMTI6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7Yi5tZW1vaXplZFByb3BzPWU7c2YoYixmKTtpZihudWxsIT09Zyl7dmFyIGg9Zy52YWx1ZTtcbmY9aD09PWYmJigwIT09aHx8MS9oPT09MS9mKXx8aCE9PWgmJmYhPT1mPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDA7aWYoMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSi5jdXJyZW50KXtiPWVnKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihnPWIuY2hpbGQsbnVsbCE9PWcmJihnLnJldHVybj1iKTtudWxsIT09Zzspe2g9Zy5maXJzdENvbnRleHREZXBlbmRlbmN5O2lmKG51bGwhPT1oKXtkb3tpZihoLmNvbnRleHQ9PT1kJiYwIT09KGgub2JzZXJ2ZWRCaXRzJmYpKXtpZigyPT09Zy50YWd8fDM9PT1nLnRhZyl7dmFyIGs9ZGYoYyk7ay50YWc9MjtmZihnLGspfWlmKDA9PT1nLmV4cGlyYXRpb25UaW1lfHxnLmV4cGlyYXRpb25UaW1lPmMpZy5leHBpcmF0aW9uVGltZT1jO2s9Zy5hbHRlcm5hdGU7bnVsbCE9PWsmJigwPT09ay5leHBpcmF0aW9uVGltZXx8XG5rLmV4cGlyYXRpb25UaW1lPmMpJiYoay5leHBpcmF0aW9uVGltZT1jKTtmb3IodmFyIGw9Zy5yZXR1cm47bnVsbCE9PWw7KXtrPWwuYWx0ZXJuYXRlO2lmKDA9PT1sLmNoaWxkRXhwaXJhdGlvblRpbWV8fGwuY2hpbGRFeHBpcmF0aW9uVGltZT5jKWwuY2hpbGRFeHBpcmF0aW9uVGltZT1jLG51bGwhPT1rJiYoMD09PWsuY2hpbGRFeHBpcmF0aW9uVGltZXx8ay5jaGlsZEV4cGlyYXRpb25UaW1lPmMpJiYoay5jaGlsZEV4cGlyYXRpb25UaW1lPWMpO2Vsc2UgaWYobnVsbCE9PWsmJigwPT09ay5jaGlsZEV4cGlyYXRpb25UaW1lfHxrLmNoaWxkRXhwaXJhdGlvblRpbWU+Yykpay5jaGlsZEV4cGlyYXRpb25UaW1lPWM7ZWxzZSBicmVhaztsPWwucmV0dXJufX1rPWcuY2hpbGQ7aD1oLm5leHR9d2hpbGUobnVsbCE9PWgpfWVsc2Ugaz0xMj09PWcudGFnP2cudHlwZT09PWIudHlwZT9udWxsOmcuY2hpbGQ6Zy5jaGlsZDtpZihudWxsIT09aylrLnJldHVybj1nO2Vsc2UgZm9yKGs9ZztudWxsIT09XG5rOyl7aWYoaz09PWIpe2s9bnVsbDticmVha31nPWsuc2libGluZztpZihudWxsIT09Zyl7Zy5yZXR1cm49ay5yZXR1cm47az1nO2JyZWFrfWs9ay5yZXR1cm59Zz1rfX1NKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDExOnJldHVybiBmPWIudHlwZSxkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbix1ZihiLGMpLGY9dmYoZixkLnVuc3RhYmxlX29ic2VydmVkQml0cyksZT1lKGYpLGIuZWZmZWN0VGFnfD0xLE0oYSxiLGUsYyksYi5tZW1vaXplZFByb3BzPWQsYi5jaGlsZDtkZWZhdWx0OnQoXCIxNTZcIil9fWZ1bmN0aW9uIHFnKGEpe2EuZWZmZWN0VGFnfD00fXZhciByZz12b2lkIDAsc2c9dm9pZCAwLHRnPXZvaWQgMDtyZz1mdW5jdGlvbigpe307XG5zZz1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7emYoTC5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9emMoZyxmKTtkPXpjKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1kZShnLGYpO2Q9ZGUoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1mZShnLGYpO2Q9ZmUoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz13ZSl9dGUoYyxkKTtnPWM9dm9pZCAwO3ZhciBoPW51bGw7Zm9yKGMgaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShjKSYmZi5oYXNPd25Qcm9wZXJ0eShjKSYmbnVsbCE9ZltjXSlpZihcInN0eWxlXCI9PT1cbmMpe3ZhciBrPWZbY107Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiYoaHx8KGg9e30pLGhbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWMmJlwiY2hpbGRyZW5cIiE9PWMmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmXCJhdXRvRm9jdXNcIiE9PWMmJihzYS5oYXNPd25Qcm9wZXJ0eShjKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goYyxudWxsKSk7Zm9yKGMgaW4gZCl7dmFyIGw9ZFtjXTtrPW51bGwhPWY/ZltjXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShjKSYmbCE9PWsmJihudWxsIT1sfHxudWxsIT1rKSlpZihcInN0eWxlXCI9PT1jKWlmKGspe2ZvcihnIGluIGspIWsuaGFzT3duUHJvcGVydHkoZyl8fGwmJmwuaGFzT3duUHJvcGVydHkoZyl8fChofHwoaD17fSksaFtnXT1cIlwiKTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJmtbZ10hPT1sW2ddJiYoaHx8XG4oaD17fSksaFtnXT1sW2ddKX1lbHNlIGh8fChhfHwoYT1bXSksYS5wdXNoKGMsaCkpLGg9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Yz8obD1sP2wuX19odG1sOnZvaWQgMCxrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmshPT1sJiYoYT1hfHxbXSkucHVzaChjLFwiXCIrbCkpOlwiY2hpbGRyZW5cIj09PWM/az09PWx8fFwic3RyaW5nXCIhPT10eXBlb2YgbCYmXCJudW1iZXJcIiE9PXR5cGVvZiBsfHwoYT1hfHxbXSkucHVzaChjLFwiXCIrbCk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiYoc2EuaGFzT3duUHJvcGVydHkoYyk/KG51bGwhPWwmJnZlKGUsYyksYXx8az09PWx8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goYyxsKSl9aCYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGgpO2U9YTsoYi51cGRhdGVRdWV1ZT1lKSYmcWcoYil9fTt0Zz1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmcWcoYil9O1xuZnVuY3Rpb24gdWcoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1tYyhjKSk7bnVsbCE9PWMmJmxjKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYyPT09YS50YWcmJmxjKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIHZnKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe3dnKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIHhnKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBQZSYmUGUoYSk7c3dpdGNoKGEudGFnKXtjYXNlIDI6Y2FzZSAzOnZnKGEpO3ZhciBiPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7d2coYSxjKX1icmVhaztjYXNlIDc6dmcoYSk7YnJlYWs7Y2FzZSA2OnlnKGEpfX1mdW5jdGlvbiB6ZyhhKXtyZXR1cm4gNz09PWEudGFnfHw1PT09YS50YWd8fDY9PT1hLnRhZ31cbmZ1bmN0aW9uIEFnKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKHpnKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA3OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDU6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA2OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKG9lKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHx6ZyhjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NyE9PWMudGFnJiY4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8Nj09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDc9PT1lLnRhZ3x8OD09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZj1iLGc9ZS5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/KGg9Zi5wYXJlbnROb2RlLGguaW5zZXJ0QmVmb3JlKGcsZikpOihoPWYsaC5hcHBlbmRDaGlsZChnKSksbnVsbD09PWgub25jbGljayYmKGgub25jbGljaz13ZSkpOmIuYXBwZW5kQ2hpbGQoZS5zdGF0ZU5vZGUpO2Vsc2UgaWYoNiE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49XG5lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIHlnKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZT12b2lkIDA7Oyl7aWYoIWMpe2M9Yi5yZXR1cm47YTpmb3IoOzspe251bGw9PT1jP3QoXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA3OmQ9Yy5zdGF0ZU5vZGU7ZT0hMTticmVhayBhO2Nhc2UgNTpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhO2Nhc2UgNjpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhfWM9Yy5yZXR1cm59Yz0hMH1pZig3PT09Yi50YWd8fDg9PT1iLnRhZyl7YTpmb3IodmFyIGY9YixnPWY7OylpZih4ZyhnKSxudWxsIT09Zy5jaGlsZCYmNiE9PWcudGFnKWcuY2hpbGQucmV0dXJuPWcsZz1nLmNoaWxkO2Vsc2V7aWYoZz09PWYpYnJlYWs7Zm9yKDtudWxsPT09Zy5zaWJsaW5nOyl7aWYobnVsbD09PWcucmV0dXJufHxnLnJldHVybj09PWYpYnJlYWsgYTtnPWcucmV0dXJufWcuc2libGluZy5yZXR1cm49Zy5yZXR1cm47Zz1nLnNpYmxpbmd9ZT9cbihmPWQsZz1iLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZyk6Zi5yZW1vdmVDaGlsZChnKSk6ZC5yZW1vdmVDaGlsZChiLnN0YXRlTm9kZSl9ZWxzZSBpZig2PT09Yi50YWc/KGQ9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxlPSEwKTp4ZyhiKSxudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuO2I9Yi5yZXR1cm47Nj09PWIudGFnJiYoYz0hMSl9Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319XG5mdW5jdGlvbiBCZyhhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMzpicmVhaztjYXNlIDc6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzLGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbSmFdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJkNjKGMsZCk7dWUoYSxlKTtiPXVlKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPTIpe3ZhciBnPWZbZV0saD1mW2UrMV07XCJzdHlsZVwiPT09Zz9yZShjLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/bmUoYyxoKTpcImNoaWxkcmVuXCI9PT1nP29lKGMsaCk6eGMoYyxnLGgsYil9c3dpdGNoKGEpe2Nhc2UgXCJpbnB1dFwiOkRjKGMsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGUoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YT1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsXG5jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGY9ZC52YWx1ZSxudWxsIT1mP2VlKGMsISFkLm11bHRpcGxlLGYsITEpOmEhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9lZShjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6ZWUoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1icmVhaztjYXNlIDg6bnVsbD09PWIuc3RhdGVOb2RlP3QoXCIxNjJcIik6dm9pZCAwO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSA1OmJyZWFrO2Nhc2UgMTU6YnJlYWs7Y2FzZSAxNjpicmVhaztkZWZhdWx0OnQoXCIxNjNcIil9fWZ1bmN0aW9uIENnKGEsYixjKXtjPWRmKGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe0RnKGQpO3VnKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gRWcoYSxiLGMpe2M9ZGYoYyk7Yy50YWc9Mzt2YXIgZD1hLnN0YXRlTm9kZTtudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7bnVsbD09PUZnP0ZnPW5ldyBTZXQoW3RoaXNdKTpGZy5hZGQodGhpcyk7dmFyIGM9Yi52YWx1ZSxkPWIuc3RhY2s7dWcoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1kP2Q6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBHZyhhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMjpLKGEudHlwZSkmJkllKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjEwMjQ/KGEuZWZmZWN0VGFnPWImLTEwMjV8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIEsoYS50eXBlLl9yZWFjdFJlc3VsdCkmJkllKGEpLGI9YS5lZmZlY3RUYWcsYiYxMDI0PyhhLmVmZmVjdFRhZz1iJi0xMDI1fDY0LGEpOm51bGw7Y2FzZSA1OnJldHVybiBCZihhKSxKZShhKSxiPWEuZWZmZWN0VGFnLDAhPT0oYiY2NCk/dChcIjI4NVwiKTp2b2lkIDAsYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhO2Nhc2UgNzpyZXR1cm4gRGYoYSksbnVsbDtjYXNlIDE2OnJldHVybiBiPWEuZWZmZWN0VGFnLGImMTAyND8oYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhKTpudWxsO2Nhc2UgNjpyZXR1cm4gQmYoYSksbnVsbDtjYXNlIDEyOnJldHVybiB0ZihhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIEhnPXtyZWFkQ29udGV4dDp2Zn0sSWc9WWIuUmVhY3RDdXJyZW50T3duZXIsSmc9MCxLZz0wLExnPSExLE49bnVsbCxNZz1udWxsLE89MCxOZz0hMSxRPW51bGwsT2c9ITEsRmc9bnVsbDtmdW5jdGlvbiBQZygpe2lmKG51bGwhPT1OKWZvcih2YXIgYT1OLnJldHVybjtudWxsIT09YTspe3ZhciBiPWE7c3dpdGNoKGIudGFnKXtjYXNlIDI6dmFyIGM9Yi50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1jJiZ2b2lkIDAhPT1jJiZJZShiKTticmVhaztjYXNlIDM6Yz1iLnR5cGUuX3JlYWN0UmVzdWx0LmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1jJiZ2b2lkIDAhPT1jJiZJZShiKTticmVhaztjYXNlIDU6QmYoYik7SmUoYik7YnJlYWs7Y2FzZSA3OkRmKGIpO2JyZWFrO2Nhc2UgNjpCZihiKTticmVhaztjYXNlIDEyOnRmKGIpfWE9YS5yZXR1cm59TWc9bnVsbDtPPTA7Tmc9ITE7Tj1udWxsfVxuZnVuY3Rpb24gUWcoYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmNTEyKSl7dmFyIGU9YjtiPWE7dmFyIGY9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxOmJyZWFrO2Nhc2UgMjpLKGIudHlwZSkmJkllKGIpO2JyZWFrO2Nhc2UgMzpLKGIudHlwZS5fcmVhY3RSZXN1bHQpJiZJZShiKTticmVhaztjYXNlIDU6QmYoYik7SmUoYik7Zj1iLnN0YXRlTm9kZTtmLnBlbmRpbmdDb250ZXh0JiYoZi5jb250ZXh0PWYucGVuZGluZ0NvbnRleHQsZi5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpJGYoYiksYi5lZmZlY3RUYWcmPS0zO3JnKGIpO2JyZWFrO2Nhc2UgNzpEZihiKTt2YXIgZz16Zih5Zi5jdXJyZW50KSxoPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpc2coZSxiLGgsZixnKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGYpe3ZhciBrPXpmKEwuY3VycmVudCk7aWYoJGYoYikpe2Y9YjtlPWYuc3RhdGVOb2RlO3ZhciBsPWYudHlwZSxtPWYubWVtb2l6ZWRQcm9wcyxyPWc7ZVtJYV09ZjtlW0phXT1tO2g9dm9pZCAwO2c9bDtzd2l0Y2goZyl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpGKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihsPTA7bDxmYi5sZW5ndGg7bCsrKUYoZmJbbF0sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkYoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkYoXCJlcnJvclwiLGUpO0YoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixlKTtGKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6QmMoZSxtKTtGKFwiaW52YWxpZFwiLGUpO3ZlKHIsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07RihcImludmFsaWRcIixlKTt2ZShyLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Z2UoZSxtKSxGKFwiaW52YWxpZFwiLGUpLHZlKHIsXCJvbkNoYW5nZVwiKX10ZShnLG0pO2w9bnVsbDtmb3IoaCBpbiBtKW0uaGFzT3duUHJvcGVydHkoaCkmJihrPW1baF0sXCJjaGlsZHJlblwiPT09aD9cInN0cmluZ1wiPT09dHlwZW9mIGs/ZS50ZXh0Q29udGVudCE9PWsmJihsPVtcImNoaWxkcmVuXCIsa10pOlwibnVtYmVyXCI9PT10eXBlb2YgayYmZS50ZXh0Q29udGVudCE9PVwiXCIrayYmKGw9W1wiY2hpbGRyZW5cIixcIlwiK2tdKTpzYS5oYXNPd25Qcm9wZXJ0eShoKSYmbnVsbCE9ayYmdmUocixoKSk7c3dpdGNoKGcpe2Nhc2UgXCJpbnB1dFwiOldiKGUpO0ZjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6V2IoZSk7aWUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXdlKX1oPWw7Zi51cGRhdGVRdWV1ZT1oO2Y9bnVsbCE9PWg/ITA6ITE7ZiYmcWcoYil9ZWxzZXttPWI7ZT1oO3I9ZjtsPTk9PT1nLm5vZGVUeXBlP2c6Zy5vd25lckRvY3VtZW50O2s9PT1qZS5odG1sJiYoaz1rZShlKSk7az09PWplLmh0bWw/XCJzY3JpcHRcIj09PWU/KGU9bC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsbD1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2Ygci5pcz9sPWwuY3JlYXRlRWxlbWVudChlLHtpczpyLmlzfSk6KGw9bC5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiZyLm11bHRpcGxlJiYobC5tdWx0aXBsZT0hMCkpOmw9bC5jcmVhdGVFbGVtZW50TlMoayxlKTtlPWw7ZVtJYV09bTtlW0phXT1mO2E6Zm9yKG09ZSxyPWIsbD1yLmNoaWxkO251bGwhPT1sOyl7aWYoNz09PWwudGFnfHw4PT09bC50YWcpbS5hcHBlbmRDaGlsZChsLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDYhPT1sLnRhZyYmbnVsbCE9PWwuY2hpbGQpe2wuY2hpbGQucmV0dXJuPWw7bD1sLmNoaWxkO2NvbnRpbnVlfWlmKGw9PT1yKWJyZWFrO2Zvcig7bnVsbD09PWwuc2libGluZzspe2lmKG51bGw9PT1sLnJldHVybnx8bC5yZXR1cm49PT1yKWJyZWFrIGE7bD1sLnJldHVybn1sLnNpYmxpbmcucmV0dXJuPWwucmV0dXJuO2w9bC5zaWJsaW5nfXI9ZTtsPWg7bT1mO3ZhciBBPWcsUz11ZShsLG0pO3N3aXRjaChsKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkYoXCJsb2FkXCIscik7Zz1tO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihnPTA7ZzxmYi5sZW5ndGg7ZysrKUYoZmJbZ10scik7Zz1tO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixyKTtnPW07YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIscik7RihcImxvYWRcIixyKTtnPW07YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixyKTtGKFwic3VibWl0XCIsXG5yKTtnPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpGKFwidG9nZ2xlXCIscik7Zz1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkJjKHIsbSk7Zz16YyhyLG0pO0YoXCJpbnZhbGlkXCIscik7dmUoQSxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpnPWRlKHIsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnIuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtnPW4oe30sbSx7dmFsdWU6dm9pZCAwfSk7RihcImludmFsaWRcIixyKTt2ZShBLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Z2UocixtKTtnPWZlKHIsbSk7RihcImludmFsaWRcIixyKTt2ZShBLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpnPW19dGUobCxnKTtrPXZvaWQgMDt2YXIgQj1sLFA9cix2PWc7Zm9yKGsgaW4gdilpZih2Lmhhc093blByb3BlcnR5KGspKXt2YXIgcD12W2tdO1wic3R5bGVcIj09PWs/cmUoUCxwKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1rPyhwPXA/cC5fX2h0bWw6dm9pZCAwLFxubnVsbCE9cCYmbmUoUCxwKSk6XCJjaGlsZHJlblwiPT09az9cInN0cmluZ1wiPT09dHlwZW9mIHA/KFwidGV4dGFyZWFcIiE9PUJ8fFwiXCIhPT1wKSYmb2UoUCxwKTpcIm51bWJlclwiPT09dHlwZW9mIHAmJm9lKFAsXCJcIitwKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ayYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWsmJlwiYXV0b0ZvY3VzXCIhPT1rJiYoc2EuaGFzT3duUHJvcGVydHkoayk/bnVsbCE9cCYmdmUoQSxrKTpudWxsIT1wJiZ4YyhQLGsscCxTKSl9c3dpdGNoKGwpe2Nhc2UgXCJpbnB1dFwiOldiKHIpO0ZjKHIsbSwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6V2Iocik7aWUocixtKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9bS52YWx1ZSYmci5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIreWMobS52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpnPXI7Zy5tdWx0aXBsZT0hIW0ubXVsdGlwbGU7cj1tLnZhbHVlO251bGwhPXI/ZWUoZywhIW0ubXVsdGlwbGUsXG5yLCExKTpudWxsIT1tLmRlZmF1bHRWYWx1ZSYmZWUoZywhIW0ubXVsdGlwbGUsbS5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGcub25DbGljayYmKHIub25jbGljaz13ZSl9KGY9emUoaCxmKSkmJnFnKGIpO2Iuc3RhdGVOb2RlPWV9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBudWxsPT09Yi5zdGF0ZU5vZGU/dChcIjE2NlwiKTp2b2lkIDA7YnJlYWs7Y2FzZSA4OmUmJm51bGwhPWIuc3RhdGVOb2RlP3RnKGUsYixlLm1lbW9pemVkUHJvcHMsZik6KFwic3RyaW5nXCIhPT10eXBlb2YgZiYmKG51bGw9PT1iLnN0YXRlTm9kZT90KFwiMTY2XCIpOnZvaWQgMCksZT16Zih5Zi5jdXJyZW50KSx6ZihMLmN1cnJlbnQpLCRmKGIpPyhmPWIsaD1mLnN0YXRlTm9kZSxlPWYubWVtb2l6ZWRQcm9wcyxoW0lhXT1mLChmPWgubm9kZVZhbHVlIT09ZSkmJnFnKGIpKTooaD1iLGY9KDk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShmKSxcbmZbSWFdPWgsYi5zdGF0ZU5vZGU9ZikpO2JyZWFrO2Nhc2UgMTM6Y2FzZSAxNDpicmVhaztjYXNlIDE2OmJyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDEwOmJyZWFrO2Nhc2UgMTU6YnJlYWs7Y2FzZSA2OkJmKGIpO3JnKGIpO2JyZWFrO2Nhc2UgMTI6dGYoYik7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDQ6dChcIjE2N1wiKTtkZWZhdWx0OnQoXCIxNTZcIil9Yj1OPW51bGw7Zj1hO2lmKDEwNzM3NDE4MjM9PT1PfHwxMDczNzQxODIzIT09Zi5jaGlsZEV4cGlyYXRpb25UaW1lKXtoPTA7Zm9yKGU9Zi5jaGlsZDtudWxsIT09ZTspe2c9ZS5leHBpcmF0aW9uVGltZTttPWUuY2hpbGRFeHBpcmF0aW9uVGltZTtpZigwPT09aHx8MCE9PWcmJmc8aCloPWc7aWYoMD09PWh8fDAhPT1tJiZtPGgpaD1tO2U9ZS5zaWJsaW5nfWYuY2hpbGRFeHBpcmF0aW9uVGltZT1ofWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1jJiYwPT09KGMuZWZmZWN0VGFnJjUxMikmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmXG4oYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPUdnKGEsTyk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj01MTEsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTUxMil9aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2UgYnJlYWt9cmV0dXJuIG51bGx9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9cGcoYS5hbHRlcm5hdGUsYSxPKTtudWxsPT09YiYmKGI9UWcoYSkpO0lnLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIFNnKGEsYixjKXtMZz90KFwiMjQzXCIpOnZvaWQgMDtMZz0hMDtJZy5jdXJyZW50RGlzcGF0Y2hlcj1IZzt2YXIgZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGQhPT1PfHxhIT09TWd8fG51bGw9PT1OKVBnKCksTWc9YSxPPWQsTj1VZShNZy5jdXJyZW50LG51bGwsTyksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZT0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1OJiYhVGcoKTspTj1SZyhOKTtlbHNlIGZvcig7bnVsbCE9PU47KU49UmcoTil9Y2F0Y2gocil7aWYobnVsbD09PU4pZT0hMCxEZyhyKTtlbHNle251bGw9PT1OP3QoXCIyNzFcIik6dm9pZCAwO3ZhciBmPU4sZz1mLnJldHVybjtpZihudWxsPT09ZyllPSEwLERnKHIpO2Vsc2V7YTp7dmFyIGg9ZyxrPWYsbD1yO2c9TztrLmVmZmVjdFRhZ3w9NTEyO2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7Tmc9ITA7bD1uZihsLGspO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSA1OmguZWZmZWN0VGFnfD1cbjEwMjQ7aC5leHBpcmF0aW9uVGltZT1nO2c9Q2coaCxsLGcpO2dmKGgsZyk7YnJlYWsgYTtjYXNlIDI6Y2FzZSAzOms9bDt2YXIgbT1oLnN0YXRlTm9kZTtpZigwPT09KGguZWZmZWN0VGFnJjY0KSYmbnVsbCE9PW0mJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PUZnfHwhRmcuaGFzKG0pKSl7aC5lZmZlY3RUYWd8PTEwMjQ7aC5leHBpcmF0aW9uVGltZT1nO2c9RWcoaCxrLGcpO2dmKGgsZyk7YnJlYWsgYX19aD1oLnJldHVybn13aGlsZShudWxsIT09aCl9Tj1RZyhmKTtjb250aW51ZX19fWJyZWFrfXdoaWxlKDEpO0xnPSExO3JmPXFmPXBmPUlnLmN1cnJlbnREaXNwYXRjaGVyPW51bGw7aWYoZSlNZz1udWxsLGEuZmluaXNoZWRXb3JrPW51bGw7ZWxzZSBpZihudWxsIT09TilhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2V7Yj1hLmN1cnJlbnQuYWx0ZXJuYXRlO251bGw9PT1iP3QoXCIyODFcIik6dm9pZCAwO01nPW51bGw7aWYoTmcpe2U9YS5sYXRlc3RQZW5kaW5nVGltZTtcbmY9YS5sYXRlc3RTdXNwZW5kZWRUaW1lO2c9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDAhPT1lJiZlPmR8fDAhPT1mJiZmPmR8fDAhPT1nJiZnPmQpe2EuZGlkRXJyb3I9ITE7Yz1hLmxhdGVzdFBpbmdlZFRpbWU7MCE9PWMmJmM8PWQmJihhLmxhdGVzdFBpbmdlZFRpbWU9MCk7Yz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7Yj1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1kP2EuZWFybGllc3RQZW5kaW5nVGltZT1iPT09ZD9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6YjpiPT09ZCYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtiPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9ZDpjPmQ/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9ZDpiPGQmJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9ZCk7JGUoZCxhKTthLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7cmV0dXJufWlmKCFhLmRpZEVycm9yJiZcbiFjKXthLmRpZEVycm9yPSEwO2EubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZDtkPWEuZXhwaXJhdGlvblRpbWU9MTthLmV4cGlyYXRpb25UaW1lPWQ7cmV0dXJufX1hLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1kO2EuZmluaXNoZWRXb3JrPWJ9fVxuZnVuY3Rpb24gd2coYSxiKXt2YXIgYzthOntMZyYmIU9nP3QoXCIyNjNcIik6dm9pZCAwO2ZvcihjPWEucmV0dXJuO251bGwhPT1jOyl7c3dpdGNoKGMudGFnKXtjYXNlIDI6Y2FzZSAzOnZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUNhdGNofHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GZ3x8IUZnLmhhcyhkKSkpe2E9bmYoYixhKTthPUVnKGMsYSwxKTtmZihjLGEpO0lmKGMsMSk7Yz12b2lkIDA7YnJlYWsgYX1icmVhaztjYXNlIDU6YT1uZihiLGEpO2E9Q2coYyxhLDEpO2ZmKGMsYSk7SWYoYywxKTtjPXZvaWQgMDticmVhayBhfWM9Yy5yZXR1cm59NT09PWEudGFnJiYoYz1uZihiLGEpLGM9Q2coYSxjLDEpLGZmKGEsYyksSWYoYSwxKSk7Yz12b2lkIDB9cmV0dXJuIGN9XG5mdW5jdGlvbiBIZihhLGIpezAhPT1LZz9hPUtnOkxnP2E9T2c/MTpPOmIubW9kZSYxPyhhPVVnPzIrMTAqKCgoYS0yKzE1KS8xMHwwKSsxKToyKzI1KigoKGEtMis1MDApLzI1fDApKzEpLG51bGwhPT1NZyYmYT09PU8mJihhKz0xKSk6YT0xO1VnJiYoMD09PVZnfHxhPlZnKSYmKFZnPWEpO3JldHVybiBhfVxuZnVuY3Rpb24gSWYoYSxiKXthOntpZigwPT09YS5leHBpcmF0aW9uVGltZXx8YS5leHBpcmF0aW9uVGltZT5iKWEuZXhwaXJhdGlvblRpbWU9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKDA9PT1jLmV4cGlyYXRpb25UaW1lfHxjLmV4cGlyYXRpb25UaW1lPmIpJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybjtpZihudWxsPT09ZCYmNT09PWEudGFnKWE9YS5zdGF0ZU5vZGU7ZWxzZXtmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtpZigwPT09ZC5jaGlsZEV4cGlyYXRpb25UaW1lfHxkLmNoaWxkRXhwaXJhdGlvblRpbWU+YilkLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtudWxsIT09YyYmKDA9PT1jLmNoaWxkRXhwaXJhdGlvblRpbWV8fGMuY2hpbGRFeHBpcmF0aW9uVGltZT5iKSYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjU9PT1kLnRhZyl7YT1kLnN0YXRlTm9kZTticmVhayBhfWQ9ZC5yZXR1cm59YT1udWxsfX1pZihudWxsIT09XG5hKXshTGcmJjAhPT1PJiZiPE8mJlBnKCk7WmUoYSxiKTtpZighTGd8fE9nfHxNZyE9PWEpe2I9YTthPWEuZXhwaXJhdGlvblRpbWU7aWYobnVsbD09PWIubmV4dFNjaGVkdWxlZFJvb3QpYi5leHBpcmF0aW9uVGltZT1hLG51bGw9PT1UPyhVPVQ9YixiLm5leHRTY2hlZHVsZWRSb290PWIpOihUPVQubmV4dFNjaGVkdWxlZFJvb3Q9YixULm5leHRTY2hlZHVsZWRSb290PVUpO2Vsc2UgaWYoYz1iLmV4cGlyYXRpb25UaW1lLDA9PT1jfHxhPGMpYi5leHBpcmF0aW9uVGltZT1hO1Z8fChXP1dnJiYoWT1iLFo9MSxYZyhiLDEsITApKToxPT09YT9ZZygxLG51bGwpOlpnKGIsYSkpfSRnPmFoJiYoJGc9MCx0KFwiMTg1XCIpKX19ZnVuY3Rpb24gYmgoYSxiLGMsZCxlKXt2YXIgZj1LZztLZz0xO3RyeXtyZXR1cm4gYShiLGMsZCxlKX1maW5hbGx5e0tnPWZ9fVxudmFyIFU9bnVsbCxUPW51bGwsY2g9MCxkaD12b2lkIDAsVj0hMSxZPW51bGwsWj0wLFZnPTAsZWg9ITEsZmg9ITEsZ2g9bnVsbCxoaD1udWxsLFc9ITEsV2c9ITEsVWc9ITEsaWg9bnVsbCxqaD1iYS51bnN0YWJsZV9ub3coKSxraD0oamgvMTB8MCkrMixsaD1raCxhaD01MCwkZz0wLG1oPW51bGwsbmg9MTtmdW5jdGlvbiBvaCgpe2toPSgoYmEudW5zdGFibGVfbm93KCktamgpLzEwfDApKzJ9ZnVuY3Rpb24gWmcoYSxiKXtpZigwIT09Y2gpe2lmKGI+Y2gpcmV0dXJuO251bGwhPT1kaCYmYmEudW5zdGFibGVfY2FuY2VsU2NoZWR1bGVkV29yayhkaCl9Y2g9YjthPWJhLnVuc3RhYmxlX25vdygpLWpoO2RoPWJhLnVuc3RhYmxlX3NjaGVkdWxlV29yayhwaCx7dGltZW91dDoxMCooYi0yKS1hfSl9ZnVuY3Rpb24gR2YoKXtpZihWKXJldHVybiBsaDtxaCgpO2lmKDA9PT1afHwxMDczNzQxODIzPT09WilvaCgpLGxoPWtoO3JldHVybiBsaH1cbmZ1bmN0aW9uIHFoKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVQpZm9yKHZhciBjPVQsZD1VO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1UP3QoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtVPVQ9ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgaWYoZD09PVUpVT1lPWQubmV4dFNjaGVkdWxlZFJvb3QsVC5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1UKXtUPWM7VC5uZXh0U2NoZWR1bGVkUm9vdD1VO2QubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGMubmV4dFNjaGVkdWxlZFJvb3Q9ZC5uZXh0U2NoZWR1bGVkUm9vdCxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZD1jLm5leHRTY2hlZHVsZWRSb290fWVsc2V7aWYoMD09PWF8fGU8YSlhPWUsYj1kO2lmKGQ9PT1UKWJyZWFrO2lmKDE9PT1hKWJyZWFrO1xuYz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19WT1iO1o9YX1mdW5jdGlvbiBwaChhKXtpZihhLmRpZFRpbWVvdXQmJm51bGwhPT1VKXtvaCgpO3ZhciBiPVU7ZG97dmFyIGM9Yi5leHBpcmF0aW9uVGltZTswIT09YyYma2g+PWMmJihiLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWtoKTtiPWIubmV4dFNjaGVkdWxlZFJvb3R9d2hpbGUoYiE9PVUpfVlnKDAsYSl9XG5mdW5jdGlvbiBZZyhhLGIpe2hoPWI7cWgoKTtpZihudWxsIT09aGgpZm9yKG9oKCksbGg9a2g7bnVsbCE9PVkmJjAhPT1aJiYoMD09PWF8fGE+PVopJiYoIWVofHxraD49Wik7KVhnKFksWixraD49WikscWgoKSxvaCgpLGxoPWtoO2Vsc2UgZm9yKDtudWxsIT09WSYmMCE9PVomJigwPT09YXx8YT49Wik7KVhnKFksWiwhMCkscWgoKTtudWxsIT09aGgmJihjaD0wLGRoPW51bGwpOzAhPT1aJiZaZyhZLFopO2hoPW51bGw7ZWg9ITE7JGc9MDttaD1udWxsO2lmKG51bGwhPT1paClmb3IoYT1paCxpaD1udWxsLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe2ZofHwoZmg9ITAsZ2g9ZCl9fWlmKGZoKXRocm93IGE9Z2gsZ2g9bnVsbCxmaD0hMSxhO31cbmZ1bmN0aW9uIFhnKGEsYixjKXtWP3QoXCIyNDVcIik6dm9pZCAwO1Y9ITA7aWYobnVsbD09PWhofHxjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9yaChhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsU2coYSwhMSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiZyaChhLGQsYikpfWVsc2UgZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZD9yaChhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsU2coYSwhMCxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiYoVGcoKT9hLmZpbmlzaGVkV29yaz1kOnJoKGEsZCxiKSkpO1Y9ITF9XG5mdW5jdGlvbiByaChhLGIsYyl7dmFyIGQ9YS5maXJzdEJhdGNoO2lmKG51bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZTw9YyYmKG51bGw9PT1paD9paD1bZF06aWgucHVzaChkKSxkLl9kZWZlcikpe2EuZmluaXNoZWRXb3JrPWI7YS5leHBpcmF0aW9uVGltZT0wO3JldHVybn1hLmZpbmlzaGVkV29yaz1udWxsO2E9PT1taD8kZysrOihtaD1hLCRnPTApO09nPUxnPSEwO2EuY3VycmVudD09PWI/dChcIjE3N1wiKTp2b2lkIDA7Yz1hLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTswPT09Yz90KFwiMjYxXCIpOnZvaWQgMDthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO2Q9Yi5leHBpcmF0aW9uVGltZTt2YXIgZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU7ZD0wPT09ZHx8MCE9PWUmJmU8ZD9lOmQ7YS5kaWRFcnJvcj0hMTswPT09ZD8oYS5lYXJsaWVzdFBlbmRpbmdUaW1lPTAsYS5sYXRlc3RQZW5kaW5nVGltZT0wLGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPVxuMCxhLmxhdGVzdFBpbmdlZFRpbWU9MCk6KGU9YS5sYXRlc3RQZW5kaW5nVGltZSwwIT09ZSYmKGU8ZD9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT0wOmEuZWFybGllc3RQZW5kaW5nVGltZTxkJiYoYS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWUpKSxlPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLDA9PT1lP1plKGEsZCk6ZD5hLmxhdGVzdFN1c3BlbmRlZFRpbWU/KGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTAsWmUoYSxkKSk6ZDxlJiZaZShhLGQpKTskZSgwLGEpO0lnLmN1cnJlbnQ9bnVsbDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3hlPUdkO2U9VGQoKTtpZihVZChlKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZSl2YXIgZj1cbntzdGFydDplLnNlbGVjdGlvblN0YXJ0LGVuZDplLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntmPShmPWUub3duZXJEb2N1bWVudCkmJmYuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgZz1mLmdldFNlbGVjdGlvbiYmZi5nZXRTZWxlY3Rpb24oKTtpZihnJiYwIT09Zy5yYW5nZUNvdW50KXtmPWcuYW5jaG9yTm9kZTt2YXIgaD1nLmFuY2hvck9mZnNldCxrPWcuZm9jdXNOb2RlO2c9Zy5mb2N1c09mZnNldDt0cnl7Zi5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKFhhKXtmPW51bGw7YnJlYWsgYX12YXIgbD0wLG09LTEscj0tMSxBPTAsUz0wLEI9ZSxQPW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdjs7KXtCIT09Znx8MCE9PWgmJjMhPT1CLm5vZGVUeXBlfHwobT1sK2gpO0IhPT1rfHwwIT09ZyYmMyE9PUIubm9kZVR5cGV8fChyPWwrZyk7Mz09PUIubm9kZVR5cGUmJihsKz1CLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odj1CLmZpcnN0Q2hpbGQpKWJyZWFrO1A9QjtCPXZ9Zm9yKDs7KXtpZihCPT09XG5lKWJyZWFrIGI7UD09PWYmJisrQT09PWgmJihtPWwpO1A9PT1rJiYrK1M9PT1nJiYocj1sKTtpZihudWxsIT09KHY9Qi5uZXh0U2libGluZykpYnJlYWs7Qj1QO1A9Qi5wYXJlbnROb2RlfUI9dn1mPS0xPT09bXx8LTE9PT1yP251bGw6e3N0YXJ0Om0sZW5kOnJ9fWVsc2UgZj1udWxsfWY9Znx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgZj1udWxsO3llPXtmb2N1c2VkRWxlbTplLHNlbGVjdGlvblJhbmdlOmZ9O0dkPSExO2ZvcihRPWQ7bnVsbCE9PVE7KXtlPSExO2Y9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1ROyl7aWYoUS5lZmZlY3RUYWcmMjU2KXt2YXIgcD1RLmFsdGVybmF0ZTthOnN3aXRjaChoPVEsaC50YWcpe2Nhc2UgMjpjYXNlIDM6aWYoaC5lZmZlY3RUYWcmMjU2JiZudWxsIT09cCl7dmFyIHU9cC5tZW1vaXplZFByb3BzLHg9cC5tZW1vaXplZFN0YXRlLFI9aC5zdGF0ZU5vZGU7Ui5wcm9wcz1oLm1lbW9pemVkUHJvcHM7Ui5zdGF0ZT1oLm1lbW9pemVkU3RhdGU7dmFyIHloPVIuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUodSxcbngpO1IuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9eWh9YnJlYWsgYTtjYXNlIDU6Y2FzZSA3OmNhc2UgODpjYXNlIDY6YnJlYWsgYTtkZWZhdWx0OnQoXCIxNjNcIil9fVE9US5uZXh0RWZmZWN0fX1jYXRjaChYYSl7ZT0hMCxmPVhhfWUmJihudWxsPT09UT90KFwiMTc4XCIpOnZvaWQgMCx3ZyhRLGYpLG51bGwhPT1RJiYoUT1RLm5leHRFZmZlY3QpKX1mb3IoUT1kO251bGwhPT1ROyl7cD0hMTt1PXZvaWQgMDt0cnl7Zm9yKDtudWxsIT09UTspe3ZhciB3PVEuZWZmZWN0VGFnO3cmMTYmJm9lKFEuc3RhdGVOb2RlLFwiXCIpO2lmKHcmMTI4KXt2YXIgeT1RLmFsdGVybmF0ZTtpZihudWxsIT09eSl7dmFyIHE9eS5yZWY7bnVsbCE9PXEmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgcT9xKG51bGwpOnEuY3VycmVudD1udWxsKX19c3dpdGNoKHcmMTQpe2Nhc2UgMjpBZyhRKTtRLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OkFnKFEpO1EuZWZmZWN0VGFnJj0tMztCZyhRLmFsdGVybmF0ZSxcblEpO2JyZWFrO2Nhc2UgNDpCZyhRLmFsdGVybmF0ZSxRKTticmVhaztjYXNlIDg6eD1RLHlnKHgpLHgucmV0dXJuPW51bGwseC5jaGlsZD1udWxsLHguYWx0ZXJuYXRlJiYoeC5hbHRlcm5hdGUuY2hpbGQ9bnVsbCx4LmFsdGVybmF0ZS5yZXR1cm49bnVsbCl9UT1RLm5leHRFZmZlY3R9fWNhdGNoKFhhKXtwPSEwLHU9WGF9cCYmKG51bGw9PT1RP3QoXCIxNzhcIik6dm9pZCAwLHdnKFEsdSksbnVsbCE9PVEmJihRPVEubmV4dEVmZmVjdCkpfXE9eWU7eT1UZCgpO3c9cS5mb2N1c2VkRWxlbTt1PXEuc2VsZWN0aW9uUmFuZ2U7aWYoeSE9PXcmJncmJncub3duZXJEb2N1bWVudCYmU2Qody5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx3KSl7bnVsbCE9PXUmJlVkKHcpJiYoeT11LnN0YXJ0LHE9dS5lbmQsdm9pZCAwPT09cSYmKHE9eSksXCJzZWxlY3Rpb25TdGFydFwiaW4gdz8ody5zZWxlY3Rpb25TdGFydD15LHcuc2VsZWN0aW9uRW5kPU1hdGgubWluKHEsdy52YWx1ZS5sZW5ndGgpKTpcbihwPXcub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQseT0ocCYmcC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSx4PXcudGV4dENvbnRlbnQubGVuZ3RoLHE9TWF0aC5taW4odS5zdGFydCx4KSx1PXZvaWQgMD09PXUuZW5kP3E6TWF0aC5taW4odS5lbmQseCksIXkuZXh0ZW5kJiZxPnUmJih4PXUsdT1xLHE9eCkseD1SZCh3LHEpLFI9UmQodyx1KSx4JiZSJiYoMSE9PXkucmFuZ2VDb3VudHx8eS5hbmNob3JOb2RlIT09eC5ub2RlfHx5LmFuY2hvck9mZnNldCE9PXgub2Zmc2V0fHx5LmZvY3VzTm9kZSE9PVIubm9kZXx8eS5mb2N1c09mZnNldCE9PVIub2Zmc2V0KSYmKHA9cC5jcmVhdGVSYW5nZSgpLHAuc2V0U3RhcnQoeC5ub2RlLHgub2Zmc2V0KSx5LnJlbW92ZUFsbFJhbmdlcygpLHE+dT8oeS5hZGRSYW5nZShwKSx5LmV4dGVuZChSLm5vZGUsUi5vZmZzZXQpKToocC5zZXRFbmQoUi5ub2RlLFIub2Zmc2V0KSx5LmFkZFJhbmdlKHApKSkpKTt5PVtdO2ZvcihxPXc7cT1cbnEucGFyZW50Tm9kZTspMT09PXEubm9kZVR5cGUmJnkucHVzaCh7ZWxlbWVudDpxLGxlZnQ6cS5zY3JvbGxMZWZ0LHRvcDpxLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmZvY3VzJiZ3LmZvY3VzKCk7Zm9yKHc9MDt3PHkubGVuZ3RoO3crKylxPXlbd10scS5lbGVtZW50LnNjcm9sbExlZnQ9cS5sZWZ0LHEuZWxlbWVudC5zY3JvbGxUb3A9cS50b3B9eWU9bnVsbDtHZD0hIXhlO3hlPW51bGw7YS5jdXJyZW50PWI7Zm9yKFE9ZDtudWxsIT09UTspe2Q9ITE7dz12b2lkIDA7dHJ5e2Zvcih5PWM7bnVsbCE9PVE7KXt2YXIgU2E9US5lZmZlY3RUYWc7aWYoU2EmMzYpe3ZhciBvYz1RLmFsdGVybmF0ZTtxPVE7cD15O3N3aXRjaChxLnRhZyl7Y2FzZSAyOmNhc2UgMzp2YXIgWD1xLnN0YXRlTm9kZTtpZihxLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1vYylYLnByb3BzPXEubWVtb2l6ZWRQcm9wcyxYLnN0YXRlPXEubWVtb2l6ZWRTdGF0ZSxYLmNvbXBvbmVudERpZE1vdW50KCk7XG5lbHNle3ZhciBJaD1vYy5tZW1vaXplZFByb3BzLEpoPW9jLm1lbW9pemVkU3RhdGU7WC5wcm9wcz1xLm1lbW9pemVkUHJvcHM7WC5zdGF0ZT1xLm1lbW9pemVkU3RhdGU7WC5jb21wb25lbnREaWRVcGRhdGUoSWgsSmgsWC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIGtnPXEudXBkYXRlUXVldWU7bnVsbCE9PWtnJiYoWC5wcm9wcz1xLm1lbW9pemVkUHJvcHMsWC5zdGF0ZT1xLm1lbW9pemVkU3RhdGUsbGYocSxrZyxYLHApKTticmVhaztjYXNlIDU6dmFyIGxnPXEudXBkYXRlUXVldWU7aWYobnVsbCE9PWxnKXt1PW51bGw7aWYobnVsbCE9PXEuY2hpbGQpc3dpdGNoKHEuY2hpbGQudGFnKXtjYXNlIDc6dT1xLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDI6Y2FzZSAzOnU9cS5jaGlsZC5zdGF0ZU5vZGV9bGYocSxsZyx1LHApfWJyZWFrO2Nhc2UgNzp2YXIgS2g9cS5zdGF0ZU5vZGU7bnVsbD09PW9jJiZxLmVmZmVjdFRhZyY0JiZ6ZShxLnR5cGUscS5tZW1vaXplZFByb3BzKSYmXG5LaC5mb2N1cygpO2JyZWFrO2Nhc2UgODpicmVhaztjYXNlIDY6YnJlYWs7Y2FzZSAxNTpicmVhaztjYXNlIDE2OmJyZWFrO2RlZmF1bHQ6dChcIjE2M1wiKX19aWYoU2EmMTI4KXt2YXIgQWM9US5yZWY7aWYobnVsbCE9PUFjKXt2YXIgbWc9US5zdGF0ZU5vZGU7c3dpdGNoKFEudGFnKXtjYXNlIDc6dmFyIFBkPW1nO2JyZWFrO2RlZmF1bHQ6UGQ9bWd9XCJmdW5jdGlvblwiPT09dHlwZW9mIEFjP0FjKFBkKTpBYy5jdXJyZW50PVBkfX12YXIgTGg9US5uZXh0RWZmZWN0O1EubmV4dEVmZmVjdD1udWxsO1E9TGh9fWNhdGNoKFhhKXtkPSEwLHc9WGF9ZCYmKG51bGw9PT1RP3QoXCIxNzhcIik6dm9pZCAwLHdnKFEsdyksbnVsbCE9PVEmJihRPVEubmV4dEVmZmVjdCkpfUxnPU9nPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBPZSYmT2UoYi5zdGF0ZU5vZGUpO1NhPWIuZXhwaXJhdGlvblRpbWU7Yj1iLmNoaWxkRXhwaXJhdGlvblRpbWU7Yj0wPT09U2F8fDAhPT1iJiZiPFNhP2I6U2E7MD09PWImJihGZz1cbm51bGwpO2EuZXhwaXJhdGlvblRpbWU9YjthLmZpbmlzaGVkV29yaz1udWxsfWZ1bmN0aW9uIFRnKCl7cmV0dXJuIGVoPyEwOm51bGw9PT1oaHx8aGgudGltZVJlbWFpbmluZygpPm5oPyExOmVoPSEwfWZ1bmN0aW9uIERnKGEpe251bGw9PT1ZP3QoXCIyNDZcIik6dm9pZCAwO1kuZXhwaXJhdGlvblRpbWU9MDtmaHx8KGZoPSEwLGdoPWEpfWZ1bmN0aW9uIHNoKGEsYil7dmFyIGM9VztXPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhXPWMpfHxWfHxZZygxLG51bGwpfX1mdW5jdGlvbiB0aChhLGIpe2lmKFcmJiFXZyl7V2c9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7V2c9ITF9fXJldHVybiBhKGIpfWZ1bmN0aW9uIHVoKGEsYixjKXtpZihVZylyZXR1cm4gYShiLGMpO1d8fFZ8fDA9PT1WZ3x8KFlnKFZnLG51bGwpLFZnPTApO3ZhciBkPVVnLGU9VztXPVVnPSEwO3RyeXtyZXR1cm4gYShiLGMpfWZpbmFsbHl7VWc9ZCwoVz1lKXx8Vnx8WWcoMSxudWxsKX19XG5mdW5jdGlvbiB2aChhKXtpZighYSlyZXR1cm4gRmU7YT1hLl9yZWFjdEludGVybmFsRmliZXI7YTp7MiE9PWpkKGEpfHwyIT09YS50YWcmJjMhPT1hLnRhZz90KFwiMTcwXCIpOnZvaWQgMDt2YXIgYj1hO2Rve3N3aXRjaChiLnRhZyl7Y2FzZSA1OmI9Yi5zdGF0ZU5vZGUuY29udGV4dDticmVhayBhO2Nhc2UgMjppZihLKGIudHlwZSkpe2I9Yi5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYX1icmVhaztjYXNlIDM6aWYoSyhiLnR5cGUuX3JlYWN0UmVzdWx0KSl7Yj1iLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBhfX1iPWIucmV0dXJufXdoaWxlKG51bGwhPT1iKTt0KFwiMTcxXCIpO2I9dm9pZCAwfWlmKDI9PT1hLnRhZyl7dmFyIGM9YS50eXBlO2lmKEsoYykpcmV0dXJuIExlKGEsYyxiKX1lbHNlIGlmKDM9PT1hLnRhZyYmKGM9YS50eXBlLl9yZWFjdFJlc3VsdCxLKGMpKSlyZXR1cm4gTGUoYSxcbmMsYik7cmV0dXJuIGJ9ZnVuY3Rpb24gd2goYSxiLGMsZCxlKXt2YXIgZj1iLmN1cnJlbnQ7Yz12aChjKTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1kZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7ZmYoZixlKTtJZihmLGQpO3JldHVybiBkfWZ1bmN0aW9uIHhoKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUdmKCk7ZT1IZihmLGUpO3JldHVybiB3aChhLGIsYyxlLGQpfWZ1bmN0aW9uIHpoKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA3OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19XG5mdW5jdGlvbiBBaChhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOmFjLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuRmI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpEYyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9TmEoZCk7ZT92b2lkIDA6dChcIjkwXCIpO1hiKGQpO0RjKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpoZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZWUoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtcbmZ1bmN0aW9uIEJoKGEpe3ZhciBiPTIrMjUqKCgoR2YoKS0yKzUwMCkvMjV8MCkrMSk7Yjw9SmcmJihiPUpnKzEpO3RoaXMuX2V4cGlyYXRpb25UaW1lPUpnPWI7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1CaC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDp0KFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcgQ2g7d2goYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xuQmgucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuQmgucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOnQoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/dChcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtiPWM7Vj90KFwiMjUzXCIpOnZvaWQgMDtZPWE7Wj1iO1hnKGEsYiwhMCk7WWcoMSxudWxsKTtiPXRoaXMuX25leHQ7dGhpcy5fbmV4dD1udWxsO2I9YS5maXJzdEJhdGNoPWI7bnVsbCE9PVxuYiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9bnVsbCx0aGlzLl9kZWZlcj0hMX07QmgucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIENoKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9Q2gucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbkNoLnByb3RvdHlwZS5fb25Db21taXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tbWl0KXt0aGlzLl9kaWRDb21taXQ9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3QoXCIxOTFcIixjKTp2b2lkIDA7YygpfX19O1xuZnVuY3Rpb24gRGgoYSxiLGMpe2I9bmV3IFNlKDUsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAsZGlkRXJyb3I6ITEscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsdGltZW91dEhhbmRsZTotMSxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMsbmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT246MCxleHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTt0aGlzLl9pbnRlcm5hbFJvb3Q9Yi5zdGF0ZU5vZGU9YX1cbkRoLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgQ2g7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO3hoKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07RGgucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IENoO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTt4aChudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O0RoLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBDaDtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7eGgoYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcbkRoLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBCaCh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPD1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIEVoKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1MYj1zaDtNYj11aDtOYj1mdW5jdGlvbigpe1Z8fDA9PT1WZ3x8KFlnKFZnLG51bGwpLFZnPTApfTtcbmZ1bmN0aW9uIEZoKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgRGgoYSwhMSxiKX1cbmZ1bmN0aW9uIEdoKGEsYixjLGQsZSl7RWgoYyk/dm9pZCAwOnQoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT16aChmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPUZoKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPXpoKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX10aChmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gemgoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIEhoKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7RWgoYik/dm9pZCAwOnQoXCIyMDBcIik7cmV0dXJuIEFoKGEsYixudWxsLGMpfVxudmFyIE1oPXtjcmVhdGVQb3J0YWw6SGgsZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj90KFwiMTg4XCIpOnQoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9bWQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gR2gobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIEdoKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/dChcIjM4XCIpOnZvaWQgMDtyZXR1cm4gR2goYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7RWgoYSk/XG52b2lkIDA6dChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KHRoKGZ1bmN0aW9uKCl7R2gobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gSGguYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOnNoLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczp1aCxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtWP3QoXCIxODdcIik6dm9pZCAwO3ZhciBjPVc7Vz0hMDt0cnl7cmV0dXJuIGJoKGEsYil9ZmluYWxseXtXPWMsWWcoMSxudWxsKX19LHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1XO1c9ITA7dHJ5e2JoKGEpfWZpbmFsbHl7KFc9Yil8fFZ8fFlnKDEsbnVsbCl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltMYSxcbk1hLE5hLEVhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSxxYSxVYSxmdW5jdGlvbihhKXt6YShhLFRhKX0sSmIsS2IsSWQsR2FdfSx1bnN0YWJsZV9jcmVhdGVSb290OmZ1bmN0aW9uKGEsYil7RWgoYSk/dm9pZCAwOnQoXCIyNzhcIik7cmV0dXJuIG5ldyBEaChhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX19OyhmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBSZShuKHt9LGEse2ZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9bWQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6S2EsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi41LjJcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTtcbnZhciBOaD17ZGVmYXVsdDpNaH0sT2g9TmgmJk1ofHxOaDttb2R1bGUuZXhwb3J0cz1PaC5kZWZhdWx0fHxPaDtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbJ2V4cG9ydHMnLCAnLi9yZWFjdC1zd2lwZSddLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGZhY3RvcnkoZXhwb3J0cywgcmVxdWlyZSgnLi9yZWFjdC1zd2lwZScpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9kID0ge1xuICAgICAgZXhwb3J0czoge31cbiAgICB9O1xuICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIGdsb2JhbC5yZWFjdFN3aXBlKTtcbiAgICBnbG9iYWwuaW5kZXggPSBtb2QuZXhwb3J0cztcbiAgfVxufSkodGhpcywgZnVuY3Rpb24gKGV4cG9ydHMsIF9yZWFjdFN3aXBlKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxuICB9KTtcblxuICB2YXIgX3JlYWN0U3dpcGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3RTd2lwZSk7XG5cbiAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbiAgfVxuXG4gIGV4cG9ydHMuZGVmYXVsdCA9IF9yZWFjdFN3aXBlMi5kZWZhdWx0O1xufSk7IiwiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFsnZXhwb3J0cycsICdyZWFjdCcsICdwcm9wLXR5cGVzJ10sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKCdyZWFjdCcpLCByZXF1aXJlKCdwcm9wLXR5cGVzJykpO1xuICB9IGVsc2Uge1xuICAgIHZhciBtb2QgPSB7XG4gICAgICBleHBvcnRzOiB7fVxuICAgIH07XG4gICAgZmFjdG9yeShtb2QuZXhwb3J0cywgZ2xvYmFsLnJlYWN0LCBnbG9iYWwucHJvcFR5cGVzKTtcbiAgICBnbG9iYWwucmVhY3RTd2lwZSA9IG1vZC5leHBvcnRzO1xuICB9XG59KSh0aGlzLCBmdW5jdGlvbiAoZXhwb3J0cywgX3JlYWN0LCBfcHJvcFR5cGVzKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxuICB9KTtcbiAgZXhwb3J0cy5zZXRIYXNTdXBwb3J0VG9DYXB0dXJlT3B0aW9uID0gc2V0SGFzU3VwcG9ydFRvQ2FwdHVyZU9wdGlvbjtcblxuICB2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxuICB2YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG4gIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG4gIH1cblxuICB2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcblxuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuXG4gIGZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhvYmosIGtleXMpIHtcbiAgICB2YXIgdGFyZ2V0ID0ge307XG5cbiAgICBmb3IgKHZhciBpIGluIG9iaikge1xuICAgICAgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTtcbiAgICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlO1xuICAgICAgdGFyZ2V0W2ldID0gb2JqW2ldO1xuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH1cblxuICBmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuICB9XG5cbiAgdmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykge1xuICAgICAgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICAgIGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpO1xuICAgICAgcmV0dXJuIENvbnN0cnVjdG9yO1xuICAgIH07XG4gIH0oKTtcblxuICBmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gICAgaWYgKCFzZWxmKSB7XG4gICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7XG4gIH1cblxuICBmdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTtcbiAgICB9XG5cbiAgICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7XG4gIH1cblxuICB2YXIgc3VwcG9ydHNDYXB0dXJlT3B0aW9uID0gZmFsc2U7XG4gIGZ1bmN0aW9uIHNldEhhc1N1cHBvcnRUb0NhcHR1cmVPcHRpb24oaGFzU3VwcG9ydCkge1xuICAgIHN1cHBvcnRzQ2FwdHVyZU9wdGlvbiA9IGhhc1N1cHBvcnQ7XG4gIH1cblxuICB0cnkge1xuICAgIGFkZEV2ZW50TGlzdGVuZXIoJ3Rlc3QnLCBudWxsLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdjYXB0dXJlJywgeyBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICAgICAgc2V0SGFzU3VwcG9ydFRvQ2FwdHVyZU9wdGlvbih0cnVlKTtcbiAgICAgIH0gfSkpO1xuICB9IGNhdGNoIChlKSB7fSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWVtcHR5XG5cbiAgZnVuY3Rpb24gZ2V0U2FmZUV2ZW50SGFuZGxlck9wdHMoKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHsgY2FwdHVyZTogdHJ1ZSB9O1xuXG4gICAgcmV0dXJuIHN1cHBvcnRzQ2FwdHVyZU9wdGlvbiA/IG9wdGlvbnMgOiBvcHRpb25zLmNhcHR1cmU7XG4gIH1cblxuICAvKipcbiAgICogW2dldFBvc2l0aW9uIHJldHVybnMgYSBwb3NpdGlvbiBlbGVtZW50IHRoYXQgd29ya3MgZm9yIG1vdXNlIG9yIHRvdWNoIGV2ZW50c11cbiAgICogQHBhcmFtICB7W0V2ZW50XX0gZXZlbnQgW3RoZSByZWNlaXZlZCBldmVudF1cbiAgICogQHJldHVybiB7W09iamVjdF19ICAgICAgW3ggYW5kIHkgY29vcmRzXVxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0UG9zaXRpb24oZXZlbnQpIHtcbiAgICBpZiAoJ3RvdWNoZXMnIGluIGV2ZW50KSB7XG4gICAgICB2YXIgX2V2ZW50JHRvdWNoZXMkID0gZXZlbnQudG91Y2hlc1swXSxcbiAgICAgICAgICBwYWdlWCA9IF9ldmVudCR0b3VjaGVzJC5wYWdlWCxcbiAgICAgICAgICBwYWdlWSA9IF9ldmVudCR0b3VjaGVzJC5wYWdlWTtcblxuICAgICAgcmV0dXJuIHsgeDogcGFnZVgsIHk6IHBhZ2VZIH07XG4gICAgfVxuXG4gICAgdmFyIHNjcmVlblggPSBldmVudC5zY3JlZW5YLFxuICAgICAgICBzY3JlZW5ZID0gZXZlbnQuc2NyZWVuWTtcblxuICAgIHJldHVybiB7IHg6IHNjcmVlblgsIHk6IHNjcmVlblkgfTtcbiAgfVxuXG4gIHZhciBSZWFjdFN3aXBlID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgICBfaW5oZXJpdHMoUmVhY3RTd2lwZSwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBSZWFjdFN3aXBlKCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZWFjdFN3aXBlKTtcblxuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKF9yZWYgPSBSZWFjdFN3aXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoUmVhY3RTd2lwZSkpLmNhbGwuYXBwbHkoX3JlZiwgW3RoaXNdLmNvbmNhdChhcmdzKSkpO1xuXG4gICAgICBfdGhpcy5faGFuZGxlU3dpcGVTdGFydCA9IF90aGlzLl9oYW5kbGVTd2lwZVN0YXJ0LmJpbmQoX3RoaXMpO1xuICAgICAgX3RoaXMuX2hhbmRsZVN3aXBlTW92ZSA9IF90aGlzLl9oYW5kbGVTd2lwZU1vdmUuYmluZChfdGhpcyk7XG4gICAgICBfdGhpcy5faGFuZGxlU3dpcGVFbmQgPSBfdGhpcy5faGFuZGxlU3dpcGVFbmQuYmluZChfdGhpcyk7XG5cbiAgICAgIF90aGlzLl9vbk1vdXNlRG93biA9IF90aGlzLl9vbk1vdXNlRG93bi5iaW5kKF90aGlzKTtcbiAgICAgIF90aGlzLl9vbk1vdXNlTW92ZSA9IF90aGlzLl9vbk1vdXNlTW92ZS5iaW5kKF90aGlzKTtcbiAgICAgIF90aGlzLl9vbk1vdXNlVXAgPSBfdGhpcy5fb25Nb3VzZVVwLmJpbmQoX3RoaXMpO1xuXG4gICAgICBfdGhpcy5fc2V0U3dpcGVyUmVmID0gX3RoaXMuX3NldFN3aXBlclJlZi5iaW5kKF90aGlzKTtcbiAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoUmVhY3RTd2lwZSwgW3tcbiAgICAgIGtleTogJ2NvbXBvbmVudERpZE1vdW50JyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3dpcGVyKSB7XG4gICAgICAgICAgdGhpcy5zd2lwZXIuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcy5faGFuZGxlU3dpcGVNb3ZlLCBnZXRTYWZlRXZlbnRIYW5kbGVyT3B0cyh7XG4gICAgICAgICAgICBjYXB0dXJlOiB0cnVlLFxuICAgICAgICAgICAgcGFzc2l2ZTogZmFsc2VcbiAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6ICdjb21wb25lbnRXaWxsVW5tb3VudCcsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnN3aXBlcikge1xuICAgICAgICAgIHRoaXMuc3dpcGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIHRoaXMuX2hhbmRsZVN3aXBlTW92ZSwgZ2V0U2FmZUV2ZW50SGFuZGxlck9wdHMoe1xuICAgICAgICAgICAgY2FwdHVyZTogdHJ1ZSxcbiAgICAgICAgICAgIHBhc3NpdmU6IGZhbHNlXG4gICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiAnX29uTW91c2VEb3duJyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBfb25Nb3VzZURvd24oZXZlbnQpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLmFsbG93TW91c2VFdmVudHMpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm1vdXNlRG93biA9IHRydWU7XG5cbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuX29uTW91c2VVcCk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMuX29uTW91c2VNb3ZlKTtcblxuICAgICAgICB0aGlzLl9oYW5kbGVTd2lwZVN0YXJ0KGV2ZW50KTtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6ICdfb25Nb3VzZU1vdmUnLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIF9vbk1vdXNlTW92ZShldmVudCkge1xuICAgICAgICBpZiAoIXRoaXMubW91c2VEb3duKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5faGFuZGxlU3dpcGVNb3ZlKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6ICdfb25Nb3VzZVVwJyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBfb25Nb3VzZVVwKGV2ZW50KSB7XG4gICAgICAgIHRoaXMubW91c2VEb3duID0gZmFsc2U7XG5cbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuX29uTW91c2VVcCk7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMuX29uTW91c2VNb3ZlKTtcblxuICAgICAgICB0aGlzLl9oYW5kbGVTd2lwZUVuZChldmVudCk7XG4gICAgICB9XG4gICAgfSwge1xuICAgICAga2V5OiAnX2hhbmRsZVN3aXBlU3RhcnQnLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIF9oYW5kbGVTd2lwZVN0YXJ0KGV2ZW50KSB7XG4gICAgICAgIHZhciBfZ2V0UG9zaXRpb24gPSBnZXRQb3NpdGlvbihldmVudCksXG4gICAgICAgICAgICB4ID0gX2dldFBvc2l0aW9uLngsXG4gICAgICAgICAgICB5ID0gX2dldFBvc2l0aW9uLnk7XG5cbiAgICAgICAgdGhpcy5tb3ZlU3RhcnQgPSB7IHg6IHgsIHk6IHkgfTtcbiAgICAgICAgdGhpcy5wcm9wcy5vblN3aXBlU3RhcnQoZXZlbnQpO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogJ19oYW5kbGVTd2lwZU1vdmUnLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIF9oYW5kbGVTd2lwZU1vdmUoZXZlbnQpIHtcbiAgICAgICAgaWYgKCF0aGlzLm1vdmVTdGFydCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBfZ2V0UG9zaXRpb24yID0gZ2V0UG9zaXRpb24oZXZlbnQpLFxuICAgICAgICAgICAgeCA9IF9nZXRQb3NpdGlvbjIueCxcbiAgICAgICAgICAgIHkgPSBfZ2V0UG9zaXRpb24yLnk7XG5cbiAgICAgICAgdmFyIGRlbHRhWCA9IHggLSB0aGlzLm1vdmVTdGFydC54O1xuICAgICAgICB2YXIgZGVsdGFZID0geSAtIHRoaXMubW92ZVN0YXJ0Lnk7XG4gICAgICAgIHRoaXMubW92aW5nID0gdHJ1ZTtcblxuICAgICAgICAvLyBoYW5kbGluZyB0aGUgcmVzcG9uc2FiaWxpdHkgb2YgY2FuY2VsbGluZyB0aGUgc2Nyb2xsIHRvXG4gICAgICAgIC8vIHRoZSBjb21wb25lbnQgaGFuZGxpbmcgdGhlIGV2ZW50XG4gICAgICAgIHZhciBzaG91bGRQcmV2ZW50RGVmYXVsdCA9IHRoaXMucHJvcHMub25Td2lwZU1vdmUoe1xuICAgICAgICAgIHg6IGRlbHRhWCxcbiAgICAgICAgICB5OiBkZWx0YVlcbiAgICAgICAgfSwgZXZlbnQpO1xuXG4gICAgICAgIGlmIChzaG91bGRQcmV2ZW50RGVmYXVsdCAmJiBldmVudC5jYW5jZWxhYmxlKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMubW92ZVBvc2l0aW9uID0geyBkZWx0YVg6IGRlbHRhWCwgZGVsdGFZOiBkZWx0YVkgfTtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6ICdfaGFuZGxlU3dpcGVFbmQnLFxuICAgICAgdmFsdWU6IGZ1bmN0aW9uIF9oYW5kbGVTd2lwZUVuZChldmVudCkge1xuICAgICAgICB0aGlzLnByb3BzLm9uU3dpcGVFbmQoZXZlbnQpO1xuXG4gICAgICAgIHZhciB0b2xlcmFuY2UgPSB0aGlzLnByb3BzLnRvbGVyYW5jZTtcblxuXG4gICAgICAgIGlmICh0aGlzLm1vdmluZyAmJiB0aGlzLm1vdmVQb3NpdGlvbikge1xuICAgICAgICAgIGlmICh0aGlzLm1vdmVQb3NpdGlvbi5kZWx0YVggPCAtdG9sZXJhbmNlKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uU3dpcGVMZWZ0KDEsIGV2ZW50KTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMubW92ZVBvc2l0aW9uLmRlbHRhWCA+IHRvbGVyYW5jZSkge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vblN3aXBlUmlnaHQoMSwgZXZlbnQpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodGhpcy5tb3ZlUG9zaXRpb24uZGVsdGFZIDwgLXRvbGVyYW5jZSkge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vblN3aXBlVXAoMSwgZXZlbnQpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5tb3ZlUG9zaXRpb24uZGVsdGFZID4gdG9sZXJhbmNlKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uU3dpcGVEb3duKDEsIGV2ZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm1vdmVTdGFydCA9IG51bGw7XG4gICAgICAgIHRoaXMubW92aW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMubW92ZVBvc2l0aW9uID0gbnVsbDtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBrZXk6ICdfc2V0U3dpcGVyUmVmJyxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiBfc2V0U3dpcGVyUmVmKG5vZGUpIHtcbiAgICAgICAgdGhpcy5zd2lwZXIgPSBub2RlO1xuICAgICAgICB0aGlzLnByb3BzLmlubmVyUmVmKG5vZGUpO1xuICAgICAgfVxuICAgIH0sIHtcbiAgICAgIGtleTogJ3JlbmRlcicsXG4gICAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICAgIHRhZ05hbWUgPSBfcHJvcHMudGFnTmFtZSxcbiAgICAgICAgICAgIGNsYXNzTmFtZSA9IF9wcm9wcy5jbGFzc05hbWUsXG4gICAgICAgICAgICBzdHlsZSA9IF9wcm9wcy5zdHlsZSxcbiAgICAgICAgICAgIGNoaWxkcmVuID0gX3Byb3BzLmNoaWxkcmVuLFxuICAgICAgICAgICAgYWxsb3dNb3VzZUV2ZW50cyA9IF9wcm9wcy5hbGxvd01vdXNlRXZlbnRzLFxuICAgICAgICAgICAgb25Td2lwZVVwID0gX3Byb3BzLm9uU3dpcGVVcCxcbiAgICAgICAgICAgIG9uU3dpcGVEb3duID0gX3Byb3BzLm9uU3dpcGVEb3duLFxuICAgICAgICAgICAgb25Td2lwZUxlZnQgPSBfcHJvcHMub25Td2lwZUxlZnQsXG4gICAgICAgICAgICBvblN3aXBlUmlnaHQgPSBfcHJvcHMub25Td2lwZVJpZ2h0LFxuICAgICAgICAgICAgb25Td2lwZVN0YXJ0ID0gX3Byb3BzLm9uU3dpcGVTdGFydCxcbiAgICAgICAgICAgIG9uU3dpcGVNb3ZlID0gX3Byb3BzLm9uU3dpcGVNb3ZlLFxuICAgICAgICAgICAgb25Td2lwZUVuZCA9IF9wcm9wcy5vblN3aXBlRW5kLFxuICAgICAgICAgICAgaW5uZXJSZWYgPSBfcHJvcHMuaW5uZXJSZWYsXG4gICAgICAgICAgICB0b2xlcmFuY2UgPSBfcHJvcHMudG9sZXJhbmNlLFxuICAgICAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3Byb3BzLCBbJ3RhZ05hbWUnLCAnY2xhc3NOYW1lJywgJ3N0eWxlJywgJ2NoaWxkcmVuJywgJ2FsbG93TW91c2VFdmVudHMnLCAnb25Td2lwZVVwJywgJ29uU3dpcGVEb3duJywgJ29uU3dpcGVMZWZ0JywgJ29uU3dpcGVSaWdodCcsICdvblN3aXBlU3RhcnQnLCAnb25Td2lwZU1vdmUnLCAnb25Td2lwZUVuZCcsICdpbm5lclJlZicsICd0b2xlcmFuY2UnXSk7XG5cbiAgICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIHRoaXMucHJvcHMudGFnTmFtZSxcbiAgICAgICAgICBfZXh0ZW5kcyh7XG4gICAgICAgICAgICByZWY6IHRoaXMuX3NldFN3aXBlclJlZixcbiAgICAgICAgICAgIG9uTW91c2VEb3duOiB0aGlzLl9vbk1vdXNlRG93bixcbiAgICAgICAgICAgIG9uVG91Y2hTdGFydDogdGhpcy5faGFuZGxlU3dpcGVTdGFydCxcbiAgICAgICAgICAgIG9uVG91Y2hFbmQ6IHRoaXMuX2hhbmRsZVN3aXBlRW5kLFxuICAgICAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICAgICAgICBzdHlsZTogc3R5bGVcbiAgICAgICAgICB9LCBwcm9wcyksXG4gICAgICAgICAgY2hpbGRyZW5cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gUmVhY3RTd2lwZTtcbiAgfShfcmVhY3QuQ29tcG9uZW50KTtcblxuICBSZWFjdFN3aXBlLmRpc3BsYXlOYW1lID0gJ1JlYWN0U3dpcGUnO1xuICBSZWFjdFN3aXBlLnByb3BUeXBlcyA9IHtcbiAgICB0YWdOYW1lOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICBjbGFzc05hbWU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICAgIHN0eWxlOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCxcbiAgICBjaGlsZHJlbjogX3Byb3BUeXBlczIuZGVmYXVsdC5ub2RlLFxuICAgIGFsbG93TW91c2VFdmVudHM6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgICBvblN3aXBlVXA6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyxcbiAgICBvblN3aXBlRG93bjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICAgIG9uU3dpcGVMZWZ0OiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsXG4gICAgb25Td2lwZVJpZ2h0OiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsXG4gICAgb25Td2lwZVN0YXJ0OiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsXG4gICAgb25Td2lwZU1vdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyxcbiAgICBvblN3aXBlRW5kOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsXG4gICAgaW5uZXJSZWY6IF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyxcbiAgICB0b2xlcmFuY2U6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLmlzUmVxdWlyZWRcbiAgfTtcbiAgUmVhY3RTd2lwZS5kZWZhdWx0UHJvcHMgPSB7XG4gICAgdGFnTmFtZTogJ2RpdicsXG4gICAgYWxsb3dNb3VzZUV2ZW50czogZmFsc2UsXG4gICAgb25Td2lwZVVwOiBmdW5jdGlvbiBvblN3aXBlVXAoKSB7fSxcbiAgICBvblN3aXBlRG93bjogZnVuY3Rpb24gb25Td2lwZURvd24oKSB7fSxcbiAgICBvblN3aXBlTGVmdDogZnVuY3Rpb24gb25Td2lwZUxlZnQoKSB7fSxcbiAgICBvblN3aXBlUmlnaHQ6IGZ1bmN0aW9uIG9uU3dpcGVSaWdodCgpIHt9LFxuICAgIG9uU3dpcGVTdGFydDogZnVuY3Rpb24gb25Td2lwZVN0YXJ0KCkge30sXG4gICAgb25Td2lwZU1vdmU6IGZ1bmN0aW9uIG9uU3dpcGVNb3ZlKCkge30sXG4gICAgb25Td2lwZUVuZDogZnVuY3Rpb24gb25Td2lwZUVuZCgpIHt9LFxuICAgIGlubmVyUmVmOiBmdW5jdGlvbiBpbm5lclJlZigpIHt9LFxuXG4gICAgdG9sZXJhbmNlOiAwXG4gIH07XG4gIGV4cG9ydHMuZGVmYXVsdCA9IFJlYWN0U3dpcGU7XG59KTsiLCJcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBfaW50ZXJvcERlZmF1bHQoZSl7cmV0dXJuIGUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZcImRlZmF1bHRcImluIGU/ZS5kZWZhdWx0OmV9T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIFJlYWN0PV9pbnRlcm9wRGVmYXVsdChyZXF1aXJlKFwicmVhY3RcIikpO2Z1bmN0aW9uIEFwcENvbnRhaW5lcihlKXtyZXR1cm4gQXBwQ29udGFpbmVyLndhcm5BYm91dEhNUkRpc2FibGVkJiYoQXBwQ29udGFpbmVyLndhcm5BYm91dEhNUkRpc2FibGVkPSEwLGNvbnNvbGUuZXJyb3IoXCJSZWFjdC1Ib3QtTG9hZGVyOiBtaXNjb25maWd1cmF0aW9uIGRldGVjdGVkLCB1c2luZyBwcm9kdWN0aW9uIHZlcnNpb24gaW4gbm9uLXByb2R1Y3Rpb24gZW52aXJvbm1lbnQuXCIpLGNvbnNvbGUuZXJyb3IoXCJSZWFjdC1Ib3QtTG9hZGVyOiBIb3QgTW9kdWxlIFJlcGxhY2VtZW50IGlzIG5vdCBlbmFibGVkLlwiKSksUmVhY3QuQ2hpbGRyZW4ub25seShlLmNoaWxkcmVuKX1BcHBDb250YWluZXIud2FybkFib3V0SE1SRGlzYWJsZWQ9ITE7dmFyIGhvdD1mdW5jdGlvbiBlKCl7cmV0dXJuIGUuc2hvdWxkV3JhcFdpdGhBcHBDb250YWluZXI/ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKG4pe3JldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEFwcENvbnRhaW5lcixudWxsLFJlYWN0LmNyZWF0ZUVsZW1lbnQoZSxuKSl9fTpmdW5jdGlvbihlKXtyZXR1cm4gZX19O2hvdC5zaG91bGRXcmFwV2l0aEFwcENvbnRhaW5lcj0hMTt2YXIgYXJlQ29tcG9uZW50c0VxdWFsPWZ1bmN0aW9uKGUsbil7cmV0dXJuIGU9PT1ufSxzZXRDb25maWc9ZnVuY3Rpb24oKXt9LGNvbGQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGV9LGNvbmZpZ3VyZUNvbXBvbmVudD1mdW5jdGlvbigpe307ZXhwb3J0cy5BcHBDb250YWluZXI9QXBwQ29udGFpbmVyLGV4cG9ydHMuaG90PWhvdCxleHBvcnRzLmFyZUNvbXBvbmVudHNFcXVhbD1hcmVDb21wb25lbnRzRXF1YWwsZXhwb3J0cy5zZXRDb25maWc9c2V0Q29uZmlnLGV4cG9ydHMuY29sZD1jb2xkLGV4cG9ydHMuY29uZmlndXJlQ29tcG9uZW50PWNvbmZpZ3VyZUNvbXBvbmVudDtcbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTMuMVxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixjPWI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsZD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsZT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxmPWI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGc9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsaD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxrPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsbD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLG09Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLG49Yj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIscD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxPWI/XG5TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTo2MDEyMCxyPWI/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6NjAxMTUsdD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHY9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsdz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx5PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O1xuZnVuY3Rpb24geihhKXtpZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXt2YXIgdT1hLiQkdHlwZW9mO3N3aXRjaCh1KXtjYXNlIGM6c3dpdGNoKGE9YS50eXBlLGEpe2Nhc2UgbDpjYXNlIG06Y2FzZSBlOmNhc2UgZzpjYXNlIGY6Y2FzZSBwOnJldHVybiBhO2RlZmF1bHQ6c3dpdGNoKGE9YSYmYS4kJHR5cGVvZixhKXtjYXNlIGs6Y2FzZSBuOmNhc2UgdDpjYXNlIHI6Y2FzZSBoOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuIHV9fWNhc2UgZDpyZXR1cm4gdX19fWZ1bmN0aW9uIEEoYSl7cmV0dXJuIHooYSk9PT1tfWV4cG9ydHMuQXN5bmNNb2RlPWw7ZXhwb3J0cy5Db25jdXJyZW50TW9kZT1tO2V4cG9ydHMuQ29udGV4dENvbnN1bWVyPWs7ZXhwb3J0cy5Db250ZXh0UHJvdmlkZXI9aDtleHBvcnRzLkVsZW1lbnQ9YztleHBvcnRzLkZvcndhcmRSZWY9bjtleHBvcnRzLkZyYWdtZW50PWU7ZXhwb3J0cy5MYXp5PXQ7ZXhwb3J0cy5NZW1vPXI7ZXhwb3J0cy5Qb3J0YWw9ZDtcbmV4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4gQShhKXx8eihhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT1BO2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09aH07ZXhwb3J0cy5pc0VsZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWN9O2V4cG9ydHMuaXNGb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09bn07ZXhwb3J0cy5pc0ZyYWdtZW50PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZX07ZXhwb3J0cy5pc0xhenk9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT10fTtcbmV4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09cH07XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09d3x8YS4kJHR5cGVvZj09PXh8fGEuJCR0eXBlb2Y9PT15fHxhLiQkdHlwZW9mPT09dil9O2V4cG9ydHMudHlwZU9mPXo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX2RlZmF1bHQgPSBmdW5jdGlvbiBfZGVmYXVsdChwb3NpdGlvbiwgbWV0cmljLCBheGlzKSB7XG4gIHZhciBwb3NpdGlvblBlcmNlbnQgPSBwb3NpdGlvbiA9PT0gMCA/IHBvc2l0aW9uIDogcG9zaXRpb24gKyBtZXRyaWM7XG4gIHZhciBwb3NpdGlvbkNzcyA9IGF4aXMgPT09ICdob3Jpem9udGFsJyA/IFtwb3NpdGlvblBlcmNlbnQsIDAsIDBdIDogWzAsIHBvc2l0aW9uUGVyY2VudCwgMF07XG4gIHZhciB0cmFuc2l0aW9uUHJvcCA9ICd0cmFuc2xhdGUzZCc7XG4gIHZhciB0cmFuc2xhdGVkUG9zaXRpb24gPSAnKCcgKyBwb3NpdGlvbkNzcy5qb2luKCcsJykgKyAnKSc7XG4gIHJldHVybiB0cmFuc2l0aW9uUHJvcCArIHRyYW5zbGF0ZWRQb3NpdGlvbjtcbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0OyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcInJlYWN0XCIpKTtcblxudmFyIF9yZWFjdERvbSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInJlYWN0LWRvbVwiKSk7XG5cbnZhciBfcmVhY3RFYXN5U3dpcGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdC1lYXN5LXN3aXBlXCIpKTtcblxudmFyIF9jc3NDbGFzc2VzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vY3NzQ2xhc3Nlc1wiKSk7XG5cbnZhciBfQ1NTVHJhbnNsYXRlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vQ1NTVHJhbnNsYXRlXCIpKTtcblxudmFyIF9UaHVtYnMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL1RodW1ic1wiKSk7XG5cbnZhciBfZG9jdW1lbnQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9zaGltcy9kb2N1bWVudFwiKSk7XG5cbnZhciBfd2luZG93ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vc2hpbXMvd2luZG93XCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCkgeyBpZiAodHlwZW9mIFdlYWtNYXAgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG51bGw7IHZhciBjYWNoZSA9IG5ldyBXZWFrTWFwKCk7IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSgpIHsgcmV0dXJuIGNhY2hlOyB9OyByZXR1cm4gY2FjaGU7IH1cblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7IGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBpZiAob2JqID09PSBudWxsIHx8IF90eXBlb2Yob2JqKSAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHsgcmV0dXJuIHsgZGVmYXVsdDogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCk7IGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkgeyByZXR1cm4gY2FjaGUuZ2V0KG9iaik7IH0gdmFyIG5ld09iaiA9IHt9OyB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqLmRlZmF1bHQgPSBvYmo7IGlmIChjYWNoZSkgeyBjYWNoZS5zZXQob2JqLCBuZXdPYmopOyB9IHJldHVybiBuZXdPYmo7IH1cblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiOyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIpIHsgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07IH0gcmV0dXJuIF90eXBlb2Yob2JqKTsgfVxuXG5mdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTsgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxuXG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7IHJldHVybiBjYWxsOyB9IHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpOyB9XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikgeyBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gc2VsZjsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7IHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7IH07IHJldHVybiBfZ2V0UHJvdG90eXBlT2Yobyk7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxudmFyIG5vb3AgPSBmdW5jdGlvbiBub29wKCkge307XG5cbnZhciBkZWZhdWx0U3RhdHVzRm9ybWF0dGVyID0gZnVuY3Rpb24gZGVmYXVsdFN0YXR1c0Zvcm1hdHRlcihjdXJyZW50LCB0b3RhbCkge1xuICByZXR1cm4gXCJcIi5jb25jYXQoY3VycmVudCwgXCIgb2YgXCIpLmNvbmNhdCh0b3RhbCk7XG59O1xuXG52YXIgaXNLZXlib2FyZEV2ZW50ID0gZnVuY3Rpb24gaXNLZXlib2FyZEV2ZW50KGUpIHtcbiAgcmV0dXJuIGUgPyBlLmhhc093blByb3BlcnR5KCdrZXknKSA6IGZhbHNlO1xufTtcblxudmFyIENhcm91c2VsID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhDYXJvdXNlbCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihDYXJvdXNlbCk7XG5cbiAgZnVuY3Rpb24gQ2Fyb3VzZWwocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2Fyb3VzZWwpO1xuXG4gICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcyk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwidGh1bWJzUmVmXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiY2Fyb3VzZWxXcmFwcGVyUmVmXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwibGlzdFJlZlwiLCB2b2lkIDApO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIml0ZW1zUmVmXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwidGltZXJcIiwgdm9pZCAwKTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJzZXRUaHVtYnNSZWZcIiwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgIF90aGlzLnRodW1ic1JlZiA9IG5vZGU7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2V0Q2Fyb3VzZWxXcmFwcGVyUmVmXCIsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICBfdGhpcy5jYXJvdXNlbFdyYXBwZXJSZWYgPSBub2RlO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNldExpc3RSZWZcIiwgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgIF90aGlzLmxpc3RSZWYgPSBub2RlO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNldEl0ZW1zUmVmXCIsIGZ1bmN0aW9uIChub2RlLCBpbmRleCkge1xuICAgICAgaWYgKCFfdGhpcy5pdGVtc1JlZikge1xuICAgICAgICBfdGhpcy5pdGVtc1JlZiA9IFtdO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy5pdGVtc1JlZltpbmRleF0gPSBub2RlO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImF1dG9QbGF5XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChfcmVhY3QuQ2hpbGRyZW4uY291bnQoX3RoaXMucHJvcHMuY2hpbGRyZW4pIDw9IDEpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy5jbGVhckF1dG9QbGF5KCk7XG5cbiAgICAgIF90aGlzLnRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLmluY3JlbWVudCgpO1xuICAgICAgfSwgX3RoaXMucHJvcHMuaW50ZXJ2YWwpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImNsZWFyQXV0b1BsYXlcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKF90aGlzLnRpbWVyKSBjbGVhclRpbWVvdXQoX3RoaXMudGltZXIpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInJlc2V0QXV0b1BsYXlcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuY2xlYXJBdXRvUGxheSgpO1xuXG4gICAgICBfdGhpcy5hdXRvUGxheSgpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInN0b3BPbkhvdmVyXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaXNNb3VzZUVudGVyZWQ6IHRydWVcbiAgICAgIH0sIF90aGlzLmNsZWFyQXV0b1BsYXkpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInN0YXJ0T25MZWF2ZVwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzTW91c2VFbnRlcmVkOiBmYWxzZVxuICAgICAgfSwgX3RoaXMuYXV0b1BsYXkpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImlzRm9jdXNXaXRoaW5UaGVDYXJvdXNlbFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIV90aGlzLmNhcm91c2VsV3JhcHBlclJlZikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmICgoMCwgX2RvY3VtZW50LmRlZmF1bHQpKCkuYWN0aXZlRWxlbWVudCA9PT0gX3RoaXMuY2Fyb3VzZWxXcmFwcGVyUmVmIHx8IF90aGlzLmNhcm91c2VsV3JhcHBlclJlZi5jb250YWlucygoMCwgX2RvY3VtZW50LmRlZmF1bHQpKCkuYWN0aXZlRWxlbWVudCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJuYXZpZ2F0ZVdpdGhLZXlib2FyZFwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgaWYgKCFfdGhpcy5pc0ZvY3VzV2l0aGluVGhlQ2Fyb3VzZWwoKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBheGlzID0gX3RoaXMucHJvcHMuYXhpcztcbiAgICAgIHZhciBpc0hvcml6b250YWwgPSBheGlzID09PSAnaG9yaXpvbnRhbCc7XG4gICAgICB2YXIga2V5TmFtZXMgPSB7XG4gICAgICAgIEFycm93VXA6IDM4LFxuICAgICAgICBBcnJvd1JpZ2h0OiAzOSxcbiAgICAgICAgQXJyb3dEb3duOiA0MCxcbiAgICAgICAgQXJyb3dMZWZ0OiAzN1xuICAgICAgfTtcbiAgICAgIHZhciBuZXh0S2V5ID0gaXNIb3Jpem9udGFsID8ga2V5TmFtZXMuQXJyb3dSaWdodCA6IGtleU5hbWVzLkFycm93RG93bjtcbiAgICAgIHZhciBwcmV2S2V5ID0gaXNIb3Jpem9udGFsID8ga2V5TmFtZXMuQXJyb3dMZWZ0IDoga2V5TmFtZXMuQXJyb3dVcDtcblxuICAgICAgaWYgKG5leHRLZXkgPT09IGUua2V5Q29kZSkge1xuICAgICAgICBfdGhpcy5pbmNyZW1lbnQoKTtcbiAgICAgIH0gZWxzZSBpZiAocHJldktleSA9PT0gZS5rZXlDb2RlKSB7XG4gICAgICAgIF90aGlzLmRlY3JlbWVudCgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInVwZGF0ZVNpemVzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICghX3RoaXMuc3RhdGUuaW5pdGlhbGl6ZWQgfHwgIV90aGlzLml0ZW1zUmVmIHx8IF90aGlzLml0ZW1zUmVmLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBpc0hvcml6b250YWwgPSBfdGhpcy5wcm9wcy5heGlzID09PSAnaG9yaXpvbnRhbCc7XG4gICAgICB2YXIgZmlyc3RJdGVtID0gX3RoaXMuaXRlbXNSZWZbMF07XG5cbiAgICAgIGlmICghZmlyc3RJdGVtKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGl0ZW1TaXplID0gaXNIb3Jpem9udGFsID8gZmlyc3RJdGVtLmNsaWVudFdpZHRoIDogZmlyc3RJdGVtLmNsaWVudEhlaWdodDtcblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBpdGVtU2l6ZTogaXRlbVNpemVcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoX3RoaXMudGh1bWJzUmVmKSB7XG4gICAgICAgIF90aGlzLnRodW1ic1JlZi51cGRhdGVTaXplcygpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNldE1vdW50U3RhdGVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBoYXNNb3VudDogdHJ1ZVxuICAgICAgfSk7XG5cbiAgICAgIF90aGlzLnVwZGF0ZVNpemVzKCk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlQ2xpY2tJdGVtXCIsIGZ1bmN0aW9uIChpbmRleCwgaXRlbSkge1xuICAgICAgaWYgKF9yZWFjdC5DaGlsZHJlbi5jb3VudChfdGhpcy5wcm9wcy5jaGlsZHJlbikgPT09IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoX3RoaXMuc3RhdGUuY2FuY2VsQ2xpY2spIHtcbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIGNhbmNlbENsaWNrOiBmYWxzZVxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIF90aGlzLnByb3BzLm9uQ2xpY2tJdGVtKGluZGV4LCBpdGVtKTtcblxuICAgICAgaWYgKGluZGV4ICE9PSBfdGhpcy5zdGF0ZS5zZWxlY3RlZEl0ZW0pIHtcbiAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHNlbGVjdGVkSXRlbTogaW5kZXhcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlT25DaGFuZ2VcIiwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XG4gICAgICBpZiAoX3JlYWN0LkNoaWxkcmVuLmNvdW50KF90aGlzLnByb3BzLmNoaWxkcmVuKSA8PSAxKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgX3RoaXMucHJvcHMub25DaGFuZ2UoaW5kZXgsIGl0ZW0pO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImhhbmRsZUNsaWNrVGh1bWJcIiwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XG4gICAgICBfdGhpcy5wcm9wcy5vbkNsaWNrVGh1bWIoaW5kZXgsIGl0ZW0pO1xuXG4gICAgICBfdGhpcy5tb3ZlVG8oaW5kZXgpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIm9uU3dpcGVTdGFydFwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgc3dpcGluZzogdHJ1ZVxuICAgICAgfSk7XG5cbiAgICAgIF90aGlzLnByb3BzLm9uU3dpcGVTdGFydChldmVudCk7XG5cbiAgICAgIF90aGlzLmNsZWFyQXV0b1BsYXkoKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJvblN3aXBlRW5kXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzd2lwaW5nOiBmYWxzZSxcbiAgICAgICAgY2FuY2VsQ2xpY2s6IGZhbHNlLFxuICAgICAgICBzd2lwZU1vdmVtZW50U3RhcnRlZDogZmFsc2VcbiAgICAgIH0pO1xuXG4gICAgICBfdGhpcy5wcm9wcy5vblN3aXBlRW5kKGV2ZW50KTtcblxuICAgICAgX3RoaXMuYXV0b1BsYXkoKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJvblN3aXBlTW92ZVwiLCBmdW5jdGlvbiAoZGVsdGEsIGV2ZW50KSB7XG4gICAgICBfdGhpcy5wcm9wcy5vblN3aXBlTW92ZShldmVudCk7XG5cbiAgICAgIHZhciBpc0hvcml6b250YWwgPSBfdGhpcy5wcm9wcy5heGlzID09PSAnaG9yaXpvbnRhbCc7XG5cbiAgICAgIHZhciBjaGlsZHJlbkxlbmd0aCA9IF9yZWFjdC5DaGlsZHJlbi5jb3VudChfdGhpcy5wcm9wcy5jaGlsZHJlbik7XG5cbiAgICAgIHZhciBpbml0aWFsQm91bmRyeSA9IDA7XG5cbiAgICAgIHZhciBjdXJyZW50UG9zaXRpb24gPSBfdGhpcy5nZXRQb3NpdGlvbihfdGhpcy5zdGF0ZS5zZWxlY3RlZEl0ZW0pO1xuXG4gICAgICB2YXIgZmluYWxCb3VuZHJ5ID0gX3RoaXMucHJvcHMuaW5maW5pdGVMb29wID8gX3RoaXMuZ2V0UG9zaXRpb24oY2hpbGRyZW5MZW5ndGggLSAxKSAtIDEwMCA6IF90aGlzLmdldFBvc2l0aW9uKGNoaWxkcmVuTGVuZ3RoIC0gMSk7XG4gICAgICB2YXIgYXhpc0RlbHRhID0gaXNIb3Jpem9udGFsID8gZGVsdGEueCA6IGRlbHRhLnk7XG4gICAgICB2YXIgaGFuZGxlZERlbHRhID0gYXhpc0RlbHRhOyAvLyBwcmV2ZW50IHVzZXIgZnJvbSBzd2lwaW5nIGxlZnQgb3V0IG9mIGJvdW5kYXJpZXNcblxuICAgICAgaWYgKGN1cnJlbnRQb3NpdGlvbiA9PT0gaW5pdGlhbEJvdW5kcnkgJiYgYXhpc0RlbHRhID4gMCkge1xuICAgICAgICBoYW5kbGVkRGVsdGEgPSAwO1xuICAgICAgfSAvLyBwcmV2ZW50IHVzZXIgZnJvbSBzd2lwaW5nIHJpZ2h0IG91dCBvZiBib3VuZGFyaWVzXG5cblxuICAgICAgaWYgKGN1cnJlbnRQb3NpdGlvbiA9PT0gZmluYWxCb3VuZHJ5ICYmIGF4aXNEZWx0YSA8IDApIHtcbiAgICAgICAgaGFuZGxlZERlbHRhID0gMDtcbiAgICAgIH1cblxuICAgICAgdmFyIHBvc2l0aW9uID0gY3VycmVudFBvc2l0aW9uICsgMTAwIC8gKF90aGlzLnN0YXRlLml0ZW1TaXplIC8gaGFuZGxlZERlbHRhKTtcblxuICAgICAgdmFyIGhhc01vdmVkID0gTWF0aC5hYnMoYXhpc0RlbHRhKSA+IF90aGlzLnByb3BzLnN3aXBlU2Nyb2xsVG9sZXJhbmNlO1xuXG4gICAgICBpZiAoX3RoaXMucHJvcHMuaW5maW5pdGVMb29wICYmIGhhc01vdmVkKSB7XG4gICAgICAgIC8vIFdoZW4gYWxsb3dpbmcgaW5maW5pdGUgbG9vcCwgaWYgd2Ugc2xpZGUgbGVmdCBmcm9tIHBvc2l0aW9uIDAgd2UgcmV2ZWFsIHRoZSBjbG9uZWQgbGFzdCBzbGlkZSB0aGF0IGFwcGVhcnMgYmVmb3JlIGl0XG4gICAgICAgIC8vIGlmIHdlIHNsaWRlIGV2ZW4gZnVydGhlciB3ZSBuZWVkIHRvIGp1bXAgdG8gb3RoZXIgc2lkZSBzbyBpdCBjYW4gY29udGludWUgLSBhbmQgdmljZSB2ZXJzYSBmb3IgdGhlIGxhc3Qgc2xpZGVcbiAgICAgICAgaWYgKF90aGlzLnN0YXRlLnNlbGVjdGVkSXRlbSA9PT0gMCAmJiBwb3NpdGlvbiA+IC0xMDApIHtcbiAgICAgICAgICBwb3NpdGlvbiAtPSBjaGlsZHJlbkxlbmd0aCAqIDEwMDtcbiAgICAgICAgfSBlbHNlIGlmIChfdGhpcy5zdGF0ZS5zZWxlY3RlZEl0ZW0gPT09IGNoaWxkcmVuTGVuZ3RoIC0gMSAmJiBwb3NpdGlvbiA8IC1jaGlsZHJlbkxlbmd0aCAqIDEwMCkge1xuICAgICAgICAgIHBvc2l0aW9uICs9IGNoaWxkcmVuTGVuZ3RoICogMTAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICghX3RoaXMucHJvcHMucHJldmVudE1vdmVtZW50VW50aWxTd2lwZVNjcm9sbFRvbGVyYW5jZSB8fCBoYXNNb3ZlZCB8fCBfdGhpcy5zdGF0ZS5zd2lwZU1vdmVtZW50U3RhcnRlZCkge1xuICAgICAgICBpZiAoIV90aGlzLnN0YXRlLnN3aXBlTW92ZW1lbnRTdGFydGVkKSB7XG4gICAgICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc3dpcGVNb3ZlbWVudFN0YXJ0ZWQ6IHRydWVcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzLnNldFBvc2l0aW9uKHBvc2l0aW9uKTtcbiAgICAgIH0gLy8gYWxsb3dzIHNjcm9sbCBpZiB0aGUgc3dpcGUgd2FzIHdpdGhpbiB0aGUgdG9sZXJhbmNlXG5cblxuICAgICAgaWYgKGhhc01vdmVkICYmICFfdGhpcy5zdGF0ZS5jYW5jZWxDbGljaykge1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgY2FuY2VsQ2xpY2s6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBoYXNNb3ZlZDtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJzZXRQb3NpdGlvblwiLCBmdW5jdGlvbiAocG9zaXRpb24sIGZvcmNlUmVmbG93KSB7XG4gICAgICB2YXIgbGlzdCA9IF9yZWFjdERvbS5kZWZhdWx0LmZpbmRET01Ob2RlKF90aGlzLmxpc3RSZWYpO1xuXG4gICAgICBpZiAobGlzdCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgICAgIFsnV2Via2l0VHJhbnNmb3JtJywgJ01velRyYW5zZm9ybScsICdNc1RyYW5zZm9ybScsICdPVHJhbnNmb3JtJywgJ3RyYW5zZm9ybScsICdtc1RyYW5zZm9ybSddLmZvckVhY2goZnVuY3Rpb24gKHByb3ApIHtcbiAgICAgICAgICBsaXN0LnN0eWxlW3Byb3BdID0gKDAsIF9DU1NUcmFuc2xhdGUuZGVmYXVsdCkocG9zaXRpb24sICclJywgX3RoaXMucHJvcHMuYXhpcyk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChmb3JjZVJlZmxvdykge1xuICAgICAgICAgIGxpc3Qub2Zmc2V0TGVmdDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInJlc2V0UG9zaXRpb25cIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGN1cnJlbnRQb3NpdGlvbiA9IF90aGlzLmdldFBvc2l0aW9uKF90aGlzLnN0YXRlLnNlbGVjdGVkSXRlbSk7XG5cbiAgICAgIF90aGlzLnNldFBvc2l0aW9uKGN1cnJlbnRQb3NpdGlvbik7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiZGVjcmVtZW50XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBwb3NpdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDE7XG4gICAgICB2YXIgZnJvbVN3aXBlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTtcblxuICAgICAgX3RoaXMubW92ZVRvKF90aGlzLnN0YXRlLnNlbGVjdGVkSXRlbSAtICh0eXBlb2YgcG9zaXRpb25zID09PSAnbnVtYmVyJyA/IHBvc2l0aW9ucyA6IDEpLCBmcm9tU3dpcGUpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImluY3JlbWVudFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgcG9zaXRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAxO1xuICAgICAgdmFyIGZyb21Td2lwZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7XG5cbiAgICAgIF90aGlzLm1vdmVUbyhfdGhpcy5zdGF0ZS5zZWxlY3RlZEl0ZW0gKyAodHlwZW9mIHBvc2l0aW9ucyA9PT0gJ251bWJlcicgPyBwb3NpdGlvbnMgOiAxKSwgZnJvbVN3aXBlKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJtb3ZlVG9cIiwgZnVuY3Rpb24gKHBvc2l0aW9uLCBmcm9tU3dpcGUpIHtcbiAgICAgIGlmICh0eXBlb2YgcG9zaXRpb24gIT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIGxhc3RQb3NpdGlvbiA9IF9yZWFjdC5DaGlsZHJlbi5jb3VudChfdGhpcy5wcm9wcy5jaGlsZHJlbikgLSAxO1xuICAgICAgdmFyIG5lZWRDbG9uZWRTbGlkZSA9IF90aGlzLnByb3BzLmluZmluaXRlTG9vcCAmJiAhZnJvbVN3aXBlICYmIChwb3NpdGlvbiA8IDAgfHwgcG9zaXRpb24gPiBsYXN0UG9zaXRpb24pO1xuICAgICAgdmFyIG9sZFBvc2l0aW9uID0gcG9zaXRpb247XG5cbiAgICAgIGlmIChwb3NpdGlvbiA8IDApIHtcbiAgICAgICAgcG9zaXRpb24gPSBfdGhpcy5wcm9wcy5pbmZpbml0ZUxvb3AgPyBsYXN0UG9zaXRpb24gOiAwO1xuICAgICAgfVxuXG4gICAgICBpZiAocG9zaXRpb24gPiBsYXN0UG9zaXRpb24pIHtcbiAgICAgICAgcG9zaXRpb24gPSBfdGhpcy5wcm9wcy5pbmZpbml0ZUxvb3AgPyAwIDogbGFzdFBvc2l0aW9uO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZENsb25lZFNsaWRlKSB7XG4gICAgICAgIC8vIHNldCBzd2lwaW5nIHRydWUgd291bGQgZGlzYWJsZSB0cmFuc2l0aW9uIHRpbWUsIHRoZW4gd2Ugc2V0IHNsaWRlciB0byBjbG9uZWQgcG9zaXRpb24gYW5kIGZvcmNlIGEgcmVmbG93XG4gICAgICAgIC8vIHRoaXMgaXMgb25seSBuZWVkZWQgZm9yIG5vbi1zd2lwaW5nIHNpdHVhdGlvblxuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgc3dpcGluZzogdHJ1ZVxuICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaWYgKG9sZFBvc2l0aW9uIDwgMCkge1xuICAgICAgICAgICAgaWYgKF90aGlzLnByb3BzLmNlbnRlck1vZGUgJiYgX3RoaXMucHJvcHMuY2VudGVyU2xpZGVQZXJjZW50YWdlICYmIF90aGlzLnByb3BzLmF4aXMgPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICAgICAgICBfdGhpcy5zZXRQb3NpdGlvbigtKGxhc3RQb3NpdGlvbiArIDIpICogX3RoaXMucHJvcHMuY2VudGVyU2xpZGVQZXJjZW50YWdlIC0gKDEwMCAtIF90aGlzLnByb3BzLmNlbnRlclNsaWRlUGVyY2VudGFnZSkgLyAyLCB0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIF90aGlzLnNldFBvc2l0aW9uKC0obGFzdFBvc2l0aW9uICsgMikgKiAxMDAsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAob2xkUG9zaXRpb24gPiBsYXN0UG9zaXRpb24pIHtcbiAgICAgICAgICAgIF90aGlzLnNldFBvc2l0aW9uKDAsIHRydWUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF90aGlzLnNlbGVjdEl0ZW0oe1xuICAgICAgICAgICAgc2VsZWN0ZWRJdGVtOiBwb3NpdGlvbixcbiAgICAgICAgICAgIHN3aXBpbmc6IGZhbHNlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuc2VsZWN0SXRlbSh7XG4gICAgICAgICAgLy8gaWYgaXQncyBub3QgYSBzbGlkZXIsIHdlIGRvbid0IG5lZWQgdG8gc2V0IHBvc2l0aW9uIGhlcmVcbiAgICAgICAgICBzZWxlY3RlZEl0ZW06IHBvc2l0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfSAvLyBkb24ndCByZXNldCBhdXRvIHBsYXkgd2hlbiBzdG9wIG9uIGhvdmVyIGlzIGVuYWJsZWQsIGRvaW5nIHNvIHdpbGwgdHJpZ2dlciBhIGNhbGwgdG8gYXV0byBwbGF5IG1vcmUgdGhhbiBvbmNlXG4gICAgICAvLyBhbmQgd2lsbCByZXN1bHQgaW4gdGhlIGludGVydmFsIGZ1bmN0aW9uIG5vdCBiZWluZyBjbGVhcmVkIGNvcnJlY3RseS5cblxuXG4gICAgICBpZiAoX3RoaXMuc3RhdGUuYXV0b1BsYXkgJiYgX3RoaXMuc3RhdGUuaXNNb3VzZUVudGVyZWQgPT09IGZhbHNlKSB7XG4gICAgICAgIF90aGlzLnJlc2V0QXV0b1BsYXkoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJvbkNsaWNrTmV4dFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy5pbmNyZW1lbnQoMSwgZmFsc2UpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIm9uQ2xpY2tQcmV2XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLmRlY3JlbWVudCgxLCBmYWxzZSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwib25Td2lwZUZvcndhcmRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuaW5jcmVtZW50KDEsIHRydWUpO1xuXG4gICAgICBpZiAoX3RoaXMucHJvcHMuZW11bGF0ZVRvdWNoKSB7XG4gICAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBjYW5jZWxDbGljazogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJvblN3aXBlQmFja3dhcmRzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLmRlY3JlbWVudCgxLCB0cnVlKTtcblxuICAgICAgaWYgKF90aGlzLnByb3BzLmVtdWxhdGVUb3VjaCkge1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgY2FuY2VsQ2xpY2s6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiY2hhbmdlSXRlbVwiLCBmdW5jdGlvbiAobmV3SW5kZXgpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoIWlzS2V5Ym9hcmRFdmVudChlKSB8fCBlLmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgICAgIF90aGlzLm1vdmVUbyhuZXdJbmRleCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2VsZWN0SXRlbVwiLCBmdW5jdGlvbiAoc3RhdGUsIGNiKSB7XG4gICAgICBfdGhpcy5zZXRTdGF0ZShzdGF0ZSwgY2IpO1xuXG4gICAgICBfdGhpcy5oYW5kbGVPbkNoYW5nZShzdGF0ZS5zZWxlY3RlZEl0ZW0sIF9yZWFjdC5DaGlsZHJlbi50b0FycmF5KF90aGlzLnByb3BzLmNoaWxkcmVuKVtzdGF0ZS5zZWxlY3RlZEl0ZW1dKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJnZXRJbml0aWFsSW1hZ2VcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHNlbGVjdGVkSXRlbSA9IF90aGlzLnByb3BzLnNlbGVjdGVkSXRlbTtcbiAgICAgIHZhciBpdGVtID0gX3RoaXMuaXRlbXNSZWYgJiYgX3RoaXMuaXRlbXNSZWZbc2VsZWN0ZWRJdGVtXTtcbiAgICAgIHZhciBpbWFnZXMgPSBpdGVtICYmIGl0ZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2ltZycpIHx8IFtdO1xuICAgICAgcmV0dXJuIGltYWdlc1swXTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJnZXRWYXJpYWJsZUl0ZW1IZWlnaHRcIiwgZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICB2YXIgaXRlbSA9IF90aGlzLml0ZW1zUmVmICYmIF90aGlzLml0ZW1zUmVmW3Bvc2l0aW9uXTtcblxuICAgICAgaWYgKF90aGlzLnN0YXRlLmhhc01vdW50ICYmIGl0ZW0gJiYgaXRlbS5jaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgdmFyIHNsaWRlSW1hZ2VzID0gaXRlbS5jaGlsZHJlblswXS5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaW1nJykgfHwgW107XG5cbiAgICAgICAgaWYgKHNsaWRlSW1hZ2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICB2YXIgaW1hZ2UgPSBzbGlkZUltYWdlc1swXTtcblxuICAgICAgICAgIGlmICghaW1hZ2UuY29tcGxldGUpIHtcbiAgICAgICAgICAgIC8vIGlmIHRoZSBpbWFnZSBpcyBzdGlsbCBsb2FkaW5nLCB0aGUgc2l6ZSB3b24ndCBiZSBhdmFpbGFibGUgc28gd2UgdHJpZ2dlciBhIG5ldyByZW5kZXIgYWZ0ZXIgaXQncyBkb25lXG4gICAgICAgICAgICB2YXIgb25JbWFnZUxvYWQgPSBmdW5jdGlvbiBvbkltYWdlTG9hZCgpIHtcbiAgICAgICAgICAgICAgX3RoaXMuZm9yY2VVcGRhdGUoKTtcblxuICAgICAgICAgICAgICBpbWFnZS5yZW1vdmVFdmVudExpc3RlbmVyKCdsb2FkJywgb25JbWFnZUxvYWQpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIG9uSW1hZ2VMb2FkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gLy8gdHJ5IHRvIGdldCBpbWcgZmlyc3QsIGlmIGltZyBub3QgdGhlcmUgZmluZCBmaXJzdCBkaXNwbGF5IHRhZ1xuXG5cbiAgICAgICAgdmFyIGRpc3BsYXlJdGVtID0gc2xpZGVJbWFnZXNbMF0gfHwgaXRlbS5jaGlsZHJlblswXTtcbiAgICAgICAgdmFyIGhlaWdodCA9IGRpc3BsYXlJdGVtLmNsaWVudEhlaWdodDtcbiAgICAgICAgcmV0dXJuIGhlaWdodCA+IDAgPyBoZWlnaHQgOiBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9KTtcblxuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgaW5pdGlhbGl6ZWQ6IGZhbHNlLFxuICAgICAgc2VsZWN0ZWRJdGVtOiBwcm9wcy5zZWxlY3RlZEl0ZW0sXG4gICAgICBoYXNNb3VudDogZmFsc2UsXG4gICAgICBpc01vdXNlRW50ZXJlZDogZmFsc2UsXG4gICAgICBhdXRvUGxheTogcHJvcHMuYXV0b1BsYXksXG4gICAgICBzd2lwaW5nOiBmYWxzZSxcbiAgICAgIHN3aXBlTW92ZW1lbnRTdGFydGVkOiBmYWxzZSxcbiAgICAgIGNhbmNlbENsaWNrOiBmYWxzZSxcbiAgICAgIGl0ZW1TaXplOiAxXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ2Fyb3VzZWwsIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKCF0aGlzLnByb3BzLmNoaWxkcmVuKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGhpcy5zZXR1cENhcm91c2VsKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNvbXBvbmVudERpZFVwZGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcbiAgICAgIGlmICghcHJldlByb3BzLmNoaWxkcmVuICYmIHRoaXMucHJvcHMuY2hpbGRyZW4gJiYgIXRoaXMuc3RhdGUuaW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgdGhpcy5zZXR1cENhcm91c2VsKCk7XG4gICAgICB9XG5cbiAgICAgIGlmICghcHJldlByb3BzLmF1dG9Gb2N1cyAmJiB0aGlzLnByb3BzLmF1dG9Gb2N1cykge1xuICAgICAgICB0aGlzLmZvcmNlRm9jdXMoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHByZXZTdGF0ZS5zd2lwaW5nICYmICF0aGlzLnN0YXRlLnN3aXBpbmcpIHtcbiAgICAgICAgLy8gV2Ugc3RvcHBlZCBzd2lwaW5nLCBlbnN1cmUgd2UgYXJlIGhlYWRpbmcgdG8gdGhlIG5ldy9jdXJyZW50IHNsaWRlIGFuZCBub3Qgc3R1Y2tcbiAgICAgICAgdGhpcy5yZXNldFBvc2l0aW9uKCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcmV2UHJvcHMuc2VsZWN0ZWRJdGVtICE9PSB0aGlzLnByb3BzLnNlbGVjdGVkSXRlbSB8fCBwcmV2UHJvcHMuY2VudGVyTW9kZSAhPT0gdGhpcy5wcm9wcy5jZW50ZXJNb2RlKSB7XG4gICAgICAgIHRoaXMudXBkYXRlU2l6ZXMoKTtcbiAgICAgICAgdGhpcy5tb3ZlVG8odGhpcy5wcm9wcy5zZWxlY3RlZEl0ZW0pO1xuICAgICAgfVxuXG4gICAgICBpZiAocHJldlByb3BzLmF1dG9QbGF5ICE9PSB0aGlzLnByb3BzLmF1dG9QbGF5KSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmF1dG9QbGF5KSB7XG4gICAgICAgICAgdGhpcy5zZXR1cEF1dG9QbGF5KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5kZXN0cm95QXV0b1BsYXkoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIGF1dG9QbGF5OiB0aGlzLnByb3BzLmF1dG9QbGF5XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsVW5tb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIHRoaXMuZGVzdHJveUNhcm91c2VsKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldHVwQ2Fyb3VzZWxcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0dXBDYXJvdXNlbCgpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLmJpbmRFdmVudHMoKTtcblxuICAgICAgaWYgKHRoaXMuc3RhdGUuYXV0b1BsYXkgJiYgX3JlYWN0LkNoaWxkcmVuLmNvdW50KHRoaXMucHJvcHMuY2hpbGRyZW4pID4gMSkge1xuICAgICAgICB0aGlzLnNldHVwQXV0b1BsYXkoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMucHJvcHMuYXV0b0ZvY3VzKSB7XG4gICAgICAgIHRoaXMuZm9yY2VGb2N1cygpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaW5pdGlhbGl6ZWQ6IHRydWVcbiAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGluaXRpYWxJbWFnZSA9IF90aGlzMi5nZXRJbml0aWFsSW1hZ2UoKTtcblxuICAgICAgICBpZiAoaW5pdGlhbEltYWdlICYmICFpbml0aWFsSW1hZ2UuY29tcGxldGUpIHtcbiAgICAgICAgICAvLyBpZiBpdCdzIGEgY2Fyb3VzZWwgb2YgaW1hZ2VzLCB3ZSBzZXQgdGhlIG1vdW50IHN0YXRlIGFmdGVyIHRoZSBmaXJzdCBpbWFnZSBpcyBsb2FkZWRcbiAgICAgICAgICBpbml0aWFsSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIF90aGlzMi5zZXRNb3VudFN0YXRlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpczIuc2V0TW91bnRTdGF0ZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGVzdHJveUNhcm91c2VsXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlc3Ryb3lDYXJvdXNlbCgpIHtcbiAgICAgIGlmICh0aGlzLnN0YXRlLmluaXRpYWxpemVkKSB7XG4gICAgICAgIHRoaXMudW5iaW5kRXZlbnRzKCk7XG4gICAgICAgIHRoaXMuZGVzdHJveUF1dG9QbGF5KCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNldHVwQXV0b1BsYXlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0dXBBdXRvUGxheSgpIHtcbiAgICAgIHRoaXMuYXV0b1BsYXkoKTtcbiAgICAgIHZhciBjYXJvdXNlbFdyYXBwZXIgPSB0aGlzLmNhcm91c2VsV3JhcHBlclJlZjtcblxuICAgICAgaWYgKHRoaXMucHJvcHMuc3RvcE9uSG92ZXIgJiYgY2Fyb3VzZWxXcmFwcGVyKSB7XG4gICAgICAgIGNhcm91c2VsV3JhcHBlci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgdGhpcy5zdG9wT25Ib3Zlcik7XG4gICAgICAgIGNhcm91c2VsV3JhcHBlci5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgdGhpcy5zdGFydE9uTGVhdmUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJkZXN0cm95QXV0b1BsYXlcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVzdHJveUF1dG9QbGF5KCkge1xuICAgICAgdGhpcy5jbGVhckF1dG9QbGF5KCk7XG4gICAgICB2YXIgY2Fyb3VzZWxXcmFwcGVyID0gdGhpcy5jYXJvdXNlbFdyYXBwZXJSZWY7XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLnN0b3BPbkhvdmVyICYmIGNhcm91c2VsV3JhcHBlcikge1xuICAgICAgICBjYXJvdXNlbFdyYXBwZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsIHRoaXMuc3RvcE9uSG92ZXIpO1xuICAgICAgICBjYXJvdXNlbFdyYXBwZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsIHRoaXMuc3RhcnRPbkxlYXZlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiYmluZEV2ZW50c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBiaW5kRXZlbnRzKCkge1xuICAgICAgLy8gYXMgdGhlIHdpZHRocyBhcmUgY2FsY3VsYXRlZCwgd2UgbmVlZCB0byByZXNpemVcbiAgICAgIC8vIHRoZSBjYXJvdXNlbCB3aGVuIHRoZSB3aW5kb3cgaXMgcmVzaXplZFxuICAgICAgKDAsIF93aW5kb3cuZGVmYXVsdCkoKS5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnVwZGF0ZVNpemVzKTsgLy8gaXNzdWUgIzIgLSBpbWFnZSBsb2FkaW5nIHNtYWxsZXJcblxuICAgICAgKDAsIF93aW5kb3cuZGVmYXVsdCkoKS5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgdGhpcy51cGRhdGVTaXplcyk7XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLnVzZUtleWJvYXJkQXJyb3dzKSB7XG4gICAgICAgICgwLCBfZG9jdW1lbnQuZGVmYXVsdCkoKS5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5uYXZpZ2F0ZVdpdGhLZXlib2FyZCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInVuYmluZEV2ZW50c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1bmJpbmRFdmVudHMoKSB7XG4gICAgICAvLyByZW1vdmluZyBsaXN0ZW5lcnNcbiAgICAgICgwLCBfd2luZG93LmRlZmF1bHQpKCkucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy51cGRhdGVTaXplcyk7XG4gICAgICAoMCwgX3dpbmRvdy5kZWZhdWx0KSgpLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCB0aGlzLnVwZGF0ZVNpemVzKTtcbiAgICAgIHZhciBpbml0aWFsSW1hZ2UgPSB0aGlzLmdldEluaXRpYWxJbWFnZSgpO1xuXG4gICAgICBpZiAoaW5pdGlhbEltYWdlKSB7XG4gICAgICAgIGluaXRpYWxJbWFnZS5yZW1vdmVFdmVudExpc3RlbmVyKCdsb2FkJywgdGhpcy5zZXRNb3VudFN0YXRlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMucHJvcHMudXNlS2V5Ym9hcmRBcnJvd3MpIHtcbiAgICAgICAgKDAsIF9kb2N1bWVudC5kZWZhdWx0KSgpLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLm5hdmlnYXRlV2l0aEtleWJvYXJkKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZm9yY2VGb2N1c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JjZUZvY3VzKCkge1xuICAgICAgdmFyIF90aGlzJGNhcm91c2VsV3JhcHBlcjtcblxuICAgICAgKF90aGlzJGNhcm91c2VsV3JhcHBlciA9IHRoaXMuY2Fyb3VzZWxXcmFwcGVyUmVmKSA9PT0gbnVsbCB8fCBfdGhpcyRjYXJvdXNlbFdyYXBwZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGNhcm91c2VsV3JhcHBlci5mb2N1cygpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJnZXRQb3NpdGlvblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQb3NpdGlvbihpbmRleCkge1xuICAgICAgaWYgKHRoaXMucHJvcHMuaW5maW5pdGVMb29wKSB7XG4gICAgICAgIC8vIGluZGV4IGhhcyB0byBiZSBhZGRlZCBieSAxIGJlY2F1c2Ugb2YgdGhlIGZpcnN0IGNsb25lZCBzbGlkZVxuICAgICAgICArK2luZGV4O1xuICAgICAgfVxuXG4gICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICB9XG5cbiAgICAgIHZhciBjaGlsZHJlbkxlbmd0aCA9IF9yZWFjdC5DaGlsZHJlbi5jb3VudCh0aGlzLnByb3BzLmNoaWxkcmVuKTtcblxuICAgICAgaWYgKHRoaXMucHJvcHMuY2VudGVyTW9kZSAmJiB0aGlzLnByb3BzLmF4aXMgPT09ICdob3Jpem9udGFsJykge1xuICAgICAgICB2YXIgY3VycmVudFBvc2l0aW9uID0gLWluZGV4ICogdGhpcy5wcm9wcy5jZW50ZXJTbGlkZVBlcmNlbnRhZ2U7XG4gICAgICAgIHZhciBsYXN0UG9zaXRpb24gPSBjaGlsZHJlbkxlbmd0aCAtIDE7XG5cbiAgICAgICAgaWYgKGluZGV4ICYmIChpbmRleCAhPT0gbGFzdFBvc2l0aW9uIHx8IHRoaXMucHJvcHMuaW5maW5pdGVMb29wKSkge1xuICAgICAgICAgIGN1cnJlbnRQb3NpdGlvbiArPSAoMTAwIC0gdGhpcy5wcm9wcy5jZW50ZXJTbGlkZVBlcmNlbnRhZ2UpIC8gMjtcbiAgICAgICAgfSBlbHNlIGlmIChpbmRleCA9PT0gbGFzdFBvc2l0aW9uKSB7XG4gICAgICAgICAgY3VycmVudFBvc2l0aW9uICs9IDEwMCAtIHRoaXMucHJvcHMuY2VudGVyU2xpZGVQZXJjZW50YWdlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGN1cnJlbnRQb3NpdGlvbjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIC1pbmRleCAqIDEwMDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVySXRlbXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVySXRlbXMoaXNDbG9uZSkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy5wcm9wcy5jaGlsZHJlbikge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfcmVhY3QuQ2hpbGRyZW4ubWFwKHRoaXMucHJvcHMuY2hpbGRyZW4sIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgICAgICB2YXIgc2xpZGVQcm9wcyA9IHtcbiAgICAgICAgICByZWY6IGZ1bmN0aW9uIHJlZihlKSB7XG4gICAgICAgICAgICByZXR1cm4gX3RoaXMzLnNldEl0ZW1zUmVmKGUsIGluZGV4KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGtleTogJ2l0ZW1LZXknICsgaW5kZXggKyAoaXNDbG9uZSA/ICdjbG9uZScgOiAnJyksXG4gICAgICAgICAgY2xhc3NOYW1lOiBfY3NzQ2xhc3Nlcy5kZWZhdWx0LklURU0odHJ1ZSwgaW5kZXggPT09IF90aGlzMy5zdGF0ZS5zZWxlY3RlZEl0ZW0pLFxuICAgICAgICAgIG9uQ2xpY2s6IF90aGlzMy5oYW5kbGVDbGlja0l0ZW0uYmluZChfdGhpczMsIGluZGV4LCBpdGVtKVxuICAgICAgICB9O1xuICAgICAgICB2YXIgZXh0cmFQcm9wcyA9IHt9O1xuXG4gICAgICAgIGlmIChfdGhpczMucHJvcHMuY2VudGVyTW9kZSAmJiBfdGhpczMucHJvcHMuYXhpcyA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICAgICAgZXh0cmFQcm9wcy5zdHlsZSA9IHtcbiAgICAgICAgICAgIG1pbldpZHRoOiBfdGhpczMucHJvcHMuY2VudGVyU2xpZGVQZXJjZW50YWdlICsgJyUnXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImxpXCIsIF9leHRlbmRzKHt9LCBzbGlkZVByb3BzLCBleHRyYVByb3BzKSwgX3RoaXMzLnByb3BzLnJlbmRlckl0ZW0oaXRlbSwge1xuICAgICAgICAgIGlzU2VsZWN0ZWQ6IGluZGV4ID09PSBfdGhpczMuc3RhdGUuc2VsZWN0ZWRJdGVtXG4gICAgICAgIH0pKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJDb250cm9sc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJDb250cm9scygpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIHNob3dJbmRpY2F0b3JzID0gX3RoaXMkcHJvcHMuc2hvd0luZGljYXRvcnMsXG4gICAgICAgICAgbGFiZWxzID0gX3RoaXMkcHJvcHMubGFiZWxzLFxuICAgICAgICAgIHJlbmRlckluZGljYXRvciA9IF90aGlzJHByb3BzLnJlbmRlckluZGljYXRvcixcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzLmNoaWxkcmVuO1xuXG4gICAgICBpZiAoIXNob3dJbmRpY2F0b3JzKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJjb250cm9sLWRvdHNcIlxuICAgICAgfSwgX3JlYWN0LkNoaWxkcmVuLm1hcChjaGlsZHJlbiwgZnVuY3Rpb24gKF8sIGluZGV4KSB7XG4gICAgICAgIHJldHVybiByZW5kZXJJbmRpY2F0b3IgJiYgcmVuZGVySW5kaWNhdG9yKF90aGlzNC5jaGFuZ2VJdGVtKGluZGV4KSwgaW5kZXggPT09IF90aGlzNC5zdGF0ZS5zZWxlY3RlZEl0ZW0sIGluZGV4LCBsYWJlbHMuaXRlbSk7XG4gICAgICB9KSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclN0YXR1c1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJTdGF0dXMoKSB7XG4gICAgICBpZiAoIXRoaXMucHJvcHMuc2hvd1N0YXR1cykge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicFwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJjYXJvdXNlbC1zdGF0dXNcIlxuICAgICAgfSwgdGhpcy5wcm9wcy5zdGF0dXNGb3JtYXR0ZXIodGhpcy5zdGF0ZS5zZWxlY3RlZEl0ZW0gKyAxLCBfcmVhY3QuQ2hpbGRyZW4uY291bnQodGhpcy5wcm9wcy5jaGlsZHJlbikpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyVGh1bWJzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlclRodW1icygpIHtcbiAgICAgIGlmICghdGhpcy5wcm9wcy5zaG93VGh1bWJzIHx8ICF0aGlzLnByb3BzLmNoaWxkcmVuIHx8IF9yZWFjdC5DaGlsZHJlbi5jb3VudCh0aGlzLnByb3BzLmNoaWxkcmVuKSA9PT0gMCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9UaHVtYnMuZGVmYXVsdCwge1xuICAgICAgICByZWY6IHRoaXMuc2V0VGh1bWJzUmVmLFxuICAgICAgICBvblNlbGVjdEl0ZW06IHRoaXMuaGFuZGxlQ2xpY2tUaHVtYixcbiAgICAgICAgc2VsZWN0ZWRJdGVtOiB0aGlzLnN0YXRlLnNlbGVjdGVkSXRlbSxcbiAgICAgICAgdHJhbnNpdGlvblRpbWU6IHRoaXMucHJvcHMudHJhbnNpdGlvblRpbWUsXG4gICAgICAgIHRodW1iV2lkdGg6IHRoaXMucHJvcHMudGh1bWJXaWR0aCxcbiAgICAgICAgbGFiZWxzOiB0aGlzLnByb3BzLmxhYmVsc1xuICAgICAgfSwgdGhpcy5wcm9wcy5yZW5kZXJUaHVtYnModGhpcy5wcm9wcy5jaGlsZHJlbikpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCBfcmVhY3QuQ2hpbGRyZW4uY291bnQodGhpcy5wcm9wcy5jaGlsZHJlbikgPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciBpc1N3aXBlYWJsZSA9IHRoaXMucHJvcHMuc3dpcGVhYmxlICYmIF9yZWFjdC5DaGlsZHJlbi5jb3VudCh0aGlzLnByb3BzLmNoaWxkcmVuKSA+IDE7XG4gICAgICB2YXIgaXNIb3Jpem9udGFsID0gdGhpcy5wcm9wcy5heGlzID09PSAnaG9yaXpvbnRhbCc7XG4gICAgICB2YXIgY2FuU2hvd0Fycm93cyA9IHRoaXMucHJvcHMuc2hvd0Fycm93cyAmJiBfcmVhY3QuQ2hpbGRyZW4uY291bnQodGhpcy5wcm9wcy5jaGlsZHJlbikgPiAxOyAvLyBzaG93IGxlZnQgYXJyb3c/XG5cbiAgICAgIHZhciBoYXNQcmV2ID0gY2FuU2hvd0Fycm93cyAmJiAodGhpcy5zdGF0ZS5zZWxlY3RlZEl0ZW0gPiAwIHx8IHRoaXMucHJvcHMuaW5maW5pdGVMb29wKSB8fCBmYWxzZTsgLy8gc2hvdyByaWdodCBhcnJvd1xuXG4gICAgICB2YXIgaGFzTmV4dCA9IGNhblNob3dBcnJvd3MgJiYgKHRoaXMuc3RhdGUuc2VsZWN0ZWRJdGVtIDwgX3JlYWN0LkNoaWxkcmVuLmNvdW50KHRoaXMucHJvcHMuY2hpbGRyZW4pIC0gMSB8fCB0aGlzLnByb3BzLmluZmluaXRlTG9vcCkgfHwgZmFsc2U7IC8vIG9iaiB0byBob2xkIHRoZSB0cmFuc2Zvcm1hdGlvbnMgYW5kIHN0eWxlc1xuXG4gICAgICB2YXIgaXRlbUxpc3RTdHlsZXMgPSB7fTtcbiAgICAgIHZhciBjdXJyZW50UG9zaXRpb24gPSB0aGlzLmdldFBvc2l0aW9uKHRoaXMuc3RhdGUuc2VsZWN0ZWRJdGVtKTsgLy8gaWYgM2QgaXMgYXZhaWxhYmxlLCBsZXQncyB0YWtlIGFkdmFudGFnZSBvZiB0aGUgcGVyZm9ybWFuY2Ugb2YgdHJhbnNmb3JtXG5cbiAgICAgIHZhciB0cmFuc2Zvcm1Qcm9wID0gKDAsIF9DU1NUcmFuc2xhdGUuZGVmYXVsdCkoY3VycmVudFBvc2l0aW9uLCAnJScsIHRoaXMucHJvcHMuYXhpcyk7XG4gICAgICB2YXIgdHJhbnNpdGlvblRpbWUgPSB0aGlzLnByb3BzLnRyYW5zaXRpb25UaW1lICsgJ21zJztcbiAgICAgIGl0ZW1MaXN0U3R5bGVzID0ge1xuICAgICAgICBXZWJraXRUcmFuc2Zvcm06IHRyYW5zZm9ybVByb3AsXG4gICAgICAgIE1velRyYW5zZm9ybTogdHJhbnNmb3JtUHJvcCxcbiAgICAgICAgTXNUcmFuc2Zvcm06IHRyYW5zZm9ybVByb3AsXG4gICAgICAgIE9UcmFuc2Zvcm06IHRyYW5zZm9ybVByb3AsXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNmb3JtUHJvcCxcbiAgICAgICAgbXNUcmFuc2Zvcm06IHRyYW5zZm9ybVByb3BcbiAgICAgIH07XG5cbiAgICAgIGlmICghdGhpcy5zdGF0ZS5zd2lwaW5nKSB7XG4gICAgICAgIGl0ZW1MaXN0U3R5bGVzID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBpdGVtTGlzdFN0eWxlcyksIHt9LCB7XG4gICAgICAgICAgV2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uVGltZSxcbiAgICAgICAgICBNb3pUcmFuc2l0aW9uRHVyYXRpb246IHRyYW5zaXRpb25UaW1lLFxuICAgICAgICAgIE1zVHJhbnNpdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uVGltZSxcbiAgICAgICAgICBPVHJhbnNpdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uVGltZSxcbiAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb246IHRyYW5zaXRpb25UaW1lLFxuICAgICAgICAgIG1zVHJhbnNpdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uVGltZVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdmFyIGl0ZW1zQ2xvbmUgPSB0aGlzLnJlbmRlckl0ZW1zKHRydWUpO1xuICAgICAgdmFyIGZpcnN0Q2xvbmUgPSBpdGVtc0Nsb25lLnNoaWZ0KCk7XG4gICAgICB2YXIgbGFzdENsb25lID0gaXRlbXNDbG9uZS5wb3AoKTtcbiAgICAgIHZhciBzd2lwZXJQcm9wcyA9IHtcbiAgICAgICAgY2xhc3NOYW1lOiBfY3NzQ2xhc3Nlcy5kZWZhdWx0LlNMSURFUih0cnVlLCB0aGlzLnN0YXRlLnN3aXBpbmcpLFxuICAgICAgICBvblN3aXBlTW92ZTogdGhpcy5vblN3aXBlTW92ZSxcbiAgICAgICAgb25Td2lwZVN0YXJ0OiB0aGlzLm9uU3dpcGVTdGFydCxcbiAgICAgICAgb25Td2lwZUVuZDogdGhpcy5vblN3aXBlRW5kLFxuICAgICAgICBzdHlsZTogaXRlbUxpc3RTdHlsZXMsXG4gICAgICAgIHRvbGVyYW5jZTogdGhpcy5wcm9wcy5zd2lwZVNjcm9sbFRvbGVyYW5jZVxuICAgICAgfTtcbiAgICAgIHZhciBjb250YWluZXJTdHlsZXMgPSB7fTtcblxuICAgICAgaWYgKGlzSG9yaXpvbnRhbCkge1xuICAgICAgICBzd2lwZXJQcm9wcy5vblN3aXBlTGVmdCA9IHRoaXMub25Td2lwZUZvcndhcmQ7XG4gICAgICAgIHN3aXBlclByb3BzLm9uU3dpcGVSaWdodCA9IHRoaXMub25Td2lwZUJhY2t3YXJkcztcblxuICAgICAgICBpZiAodGhpcy5wcm9wcy5keW5hbWljSGVpZ2h0KSB7XG4gICAgICAgICAgdmFyIGl0ZW1IZWlnaHQgPSB0aGlzLmdldFZhcmlhYmxlSXRlbUhlaWdodCh0aGlzLnN0YXRlLnNlbGVjdGVkSXRlbSk7XG4gICAgICAgICAgc3dpcGVyUHJvcHMuc3R5bGUuaGVpZ2h0ID0gaXRlbUhlaWdodCB8fCAnYXV0byc7XG4gICAgICAgICAgY29udGFpbmVyU3R5bGVzLmhlaWdodCA9IGl0ZW1IZWlnaHQgfHwgJ2F1dG8nO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzd2lwZXJQcm9wcy5vblN3aXBlVXAgPSB0aGlzLnByb3BzLnZlcnRpY2FsU3dpcGUgPT09ICduYXR1cmFsJyA/IHRoaXMub25Td2lwZUJhY2t3YXJkcyA6IHRoaXMub25Td2lwZUZvcndhcmQ7XG4gICAgICAgIHN3aXBlclByb3BzLm9uU3dpcGVEb3duID0gdGhpcy5wcm9wcy52ZXJ0aWNhbFN3aXBlID09PSAnbmF0dXJhbCcgPyB0aGlzLm9uU3dpcGVGb3J3YXJkIDogdGhpcy5vblN3aXBlQmFja3dhcmRzO1xuICAgICAgICBzd2lwZXJQcm9wcy5zdHlsZS5oZWlnaHQgPSB0aGlzLnN0YXRlLml0ZW1TaXplO1xuICAgICAgICBjb250YWluZXJTdHlsZXMuaGVpZ2h0ID0gdGhpcy5zdGF0ZS5pdGVtU2l6ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBfY3NzQ2xhc3Nlcy5kZWZhdWx0LlJPT1QodGhpcy5wcm9wcy5jbGFzc05hbWUpLFxuICAgICAgICByZWY6IHRoaXMuc2V0Q2Fyb3VzZWxXcmFwcGVyUmVmLFxuICAgICAgICB0YWJJbmRleDogMFxuICAgICAgfSwgLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IF9jc3NDbGFzc2VzLmRlZmF1bHQuQ0FST1VTRUwodHJ1ZSksXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgd2lkdGg6IHRoaXMucHJvcHMud2lkdGhcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcy5yZW5kZXJDb250cm9scygpLCB0aGlzLnByb3BzLnJlbmRlckFycm93UHJldih0aGlzLm9uQ2xpY2tQcmV2LCBoYXNQcmV2LCB0aGlzLnByb3BzLmxhYmVscy5sZWZ0QXJyb3cpLCAvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogX2Nzc0NsYXNzZXMuZGVmYXVsdC5XUkFQUEVSKHRydWUsIHRoaXMucHJvcHMuYXhpcyksXG4gICAgICAgIHN0eWxlOiBjb250YWluZXJTdHlsZXNcbiAgICAgIH0sIGlzU3dpcGVhYmxlID8gLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0RWFzeVN3aXBlLmRlZmF1bHQsIF9leHRlbmRzKHtcbiAgICAgICAgdGFnTmFtZTogXCJ1bFwiLFxuICAgICAgICBpbm5lclJlZjogdGhpcy5zZXRMaXN0UmVmXG4gICAgICB9LCBzd2lwZXJQcm9wcywge1xuICAgICAgICBhbGxvd01vdXNlRXZlbnRzOiB0aGlzLnByb3BzLmVtdWxhdGVUb3VjaFxuICAgICAgfSksIHRoaXMucHJvcHMuaW5maW5pdGVMb29wICYmIGxhc3RDbG9uZSwgdGhpcy5yZW5kZXJJdGVtcygpLCB0aGlzLnByb3BzLmluZmluaXRlTG9vcCAmJiBmaXJzdENsb25lKSA6IC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwidWxcIiwge1xuICAgICAgICBjbGFzc05hbWU6IF9jc3NDbGFzc2VzLmRlZmF1bHQuU0xJREVSKHRydWUsIHRoaXMuc3RhdGUuc3dpcGluZyksXG4gICAgICAgIHJlZjogZnVuY3Rpb24gcmVmKG5vZGUpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM1LnNldExpc3RSZWYobm9kZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHN0eWxlOiBpdGVtTGlzdFN0eWxlc1xuICAgICAgfSwgdGhpcy5wcm9wcy5pbmZpbml0ZUxvb3AgJiYgbGFzdENsb25lLCB0aGlzLnJlbmRlckl0ZW1zKCksIHRoaXMucHJvcHMuaW5maW5pdGVMb29wICYmIGZpcnN0Q2xvbmUpKSwgdGhpcy5wcm9wcy5yZW5kZXJBcnJvd05leHQodGhpcy5vbkNsaWNrTmV4dCwgaGFzTmV4dCwgdGhpcy5wcm9wcy5sYWJlbHMucmlnaHRBcnJvdyksIHRoaXMucmVuZGVyU3RhdHVzKCkpLCB0aGlzLnJlbmRlclRodW1icygpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ2Fyb3VzZWw7XG59KF9yZWFjdC5kZWZhdWx0LkNvbXBvbmVudCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IENhcm91c2VsO1xuXG5fZGVmaW5lUHJvcGVydHkoQ2Fyb3VzZWwsIFwiZGlzcGxheU5hbWVcIiwgJ0Nhcm91c2VsJyk7XG5cbl9kZWZpbmVQcm9wZXJ0eShDYXJvdXNlbCwgXCJkZWZhdWx0UHJvcHNcIiwge1xuICBheGlzOiAnaG9yaXpvbnRhbCcsXG4gIGNlbnRlclNsaWRlUGVyY2VudGFnZTogODAsXG4gIGludGVydmFsOiAzMDAwLFxuICBsYWJlbHM6IHtcbiAgICBsZWZ0QXJyb3c6ICdwcmV2aW91cyBzbGlkZSAvIGl0ZW0nLFxuICAgIHJpZ2h0QXJyb3c6ICduZXh0IHNsaWRlIC8gaXRlbScsXG4gICAgaXRlbTogJ3NsaWRlIGl0ZW0nXG4gIH0sXG4gIG9uQ2xpY2tJdGVtOiBub29wLFxuICBvbkNsaWNrVGh1bWI6IG5vb3AsXG4gIG9uQ2hhbmdlOiBub29wLFxuICBvblN3aXBlU3RhcnQ6IGZ1bmN0aW9uIG9uU3dpcGVTdGFydCgpIHt9LFxuICBvblN3aXBlRW5kOiBmdW5jdGlvbiBvblN3aXBlRW5kKCkge30sXG4gIG9uU3dpcGVNb3ZlOiBmdW5jdGlvbiBvblN3aXBlTW92ZSgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG4gIHByZXZlbnRNb3ZlbWVudFVudGlsU3dpcGVTY3JvbGxUb2xlcmFuY2U6IGZhbHNlLFxuICByZW5kZXJBcnJvd1ByZXY6IGZ1bmN0aW9uIHJlbmRlckFycm93UHJldihvbkNsaWNrSGFuZGxlciwgaGFzUHJldiwgbGFiZWwpIHtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgICAgdHlwZTogXCJidXR0b25cIixcbiAgICAgIFwiYXJpYS1sYWJlbFwiOiBsYWJlbCxcbiAgICAgIGNsYXNzTmFtZTogX2Nzc0NsYXNzZXMuZGVmYXVsdC5BUlJPV19QUkVWKCFoYXNQcmV2KSxcbiAgICAgIG9uQ2xpY2s6IG9uQ2xpY2tIYW5kbGVyXG4gICAgfSk7XG4gIH0sXG4gIHJlbmRlckFycm93TmV4dDogZnVuY3Rpb24gcmVuZGVyQXJyb3dOZXh0KG9uQ2xpY2tIYW5kbGVyLCBoYXNOZXh0LCBsYWJlbCkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgXCJhcmlhLWxhYmVsXCI6IGxhYmVsLFxuICAgICAgY2xhc3NOYW1lOiBfY3NzQ2xhc3Nlcy5kZWZhdWx0LkFSUk9XX05FWFQoIWhhc05leHQpLFxuICAgICAgb25DbGljazogb25DbGlja0hhbmRsZXJcbiAgICB9KTtcbiAgfSxcbiAgcmVuZGVySW5kaWNhdG9yOiBmdW5jdGlvbiByZW5kZXJJbmRpY2F0b3Iob25DbGlja0hhbmRsZXIsIGlzU2VsZWN0ZWQsIGluZGV4LCBsYWJlbCkge1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImxpXCIsIHtcbiAgICAgIGNsYXNzTmFtZTogX2Nzc0NsYXNzZXMuZGVmYXVsdC5ET1QoaXNTZWxlY3RlZCksXG4gICAgICBvbkNsaWNrOiBvbkNsaWNrSGFuZGxlcixcbiAgICAgIG9uS2V5RG93bjogb25DbGlja0hhbmRsZXIsXG4gICAgICB2YWx1ZTogaW5kZXgsXG4gICAgICBrZXk6IGluZGV4LFxuICAgICAgcm9sZTogXCJidXR0b25cIixcbiAgICAgIHRhYkluZGV4OiAwLFxuICAgICAgXCJhcmlhLWxhYmVsXCI6IFwiXCIuY29uY2F0KGxhYmVsLCBcIiBcIikuY29uY2F0KGluZGV4ICsgMSlcbiAgICB9KTtcbiAgfSxcbiAgcmVuZGVySXRlbTogZnVuY3Rpb24gcmVuZGVySXRlbShpdGVtKSB7XG4gICAgcmV0dXJuIGl0ZW07XG4gIH0sXG4gIHJlbmRlclRodW1iczogZnVuY3Rpb24gcmVuZGVyVGh1bWJzKGNoaWxkcmVuKSB7XG4gICAgdmFyIGltYWdlcyA9IF9yZWFjdC5DaGlsZHJlbi5tYXAoY2hpbGRyZW4sIGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgaW1nID0gaXRlbTsgLy8gaWYgdGhlIGl0ZW0gaXMgbm90IGFuIGltYWdlLCB0cnkgdG8gZmluZCB0aGUgZmlyc3QgaW1hZ2UgaW4gdGhlIGl0ZW0ncyBjaGlsZHJlbi5cblxuICAgICAgaWYgKGl0ZW0udHlwZSAhPT0gJ2ltZycpIHtcbiAgICAgICAgaW1nID0gX3JlYWN0LkNoaWxkcmVuLnRvQXJyYXkoaXRlbS5wcm9wcy5jaGlsZHJlbikuZmluZChmdW5jdGlvbiAoY2hpbGRyZW4pIHtcbiAgICAgICAgICByZXR1cm4gY2hpbGRyZW4udHlwZSA9PT0gJ2ltZyc7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWltZykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW1nO1xuICAgIH0pO1xuXG4gICAgaWYgKGltYWdlcy5maWx0ZXIoZnVuY3Rpb24gKGltYWdlKSB7XG4gICAgICByZXR1cm4gaW1hZ2U7XG4gICAgfSkubGVuZ3RoID09PSAwKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJObyBpbWFnZXMgZm91bmQhIENhbid0IGJ1aWxkIHRoZSB0aHVtYiBsaXN0IHdpdGhvdXQgaW1hZ2VzLiBJZiB5b3UgZG9uJ3QgbmVlZCB0aHVtYnMsIHNldCBzaG93VGh1bWJzPXtmYWxzZX0gaW4gdGhlIENhcm91c2VsLiBOb3RlIHRoYXQgaXQncyBub3QgcG9zc2libGUgdG8gZ2V0IGltYWdlcyByZW5kZXJlZCBpbnNpZGUgY3VzdG9tIGNvbXBvbmVudHMuIE1vcmUgaW5mbyBhdCBodHRwczovL2dpdGh1Yi5jb20vbGVhbmRyb3dkL3JlYWN0LXJlc3BvbnNpdmUtY2Fyb3VzZWwvYmxvYi9tYXN0ZXIvVFJPVUJMRVNIT09USU5HLm1kXCIpO1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIHJldHVybiBpbWFnZXM7XG4gIH0sXG4gIHN0YXR1c0Zvcm1hdHRlcjogZGVmYXVsdFN0YXR1c0Zvcm1hdHRlcixcbiAgc2VsZWN0ZWRJdGVtOiAwLFxuICBzaG93QXJyb3dzOiB0cnVlLFxuICBzaG93SW5kaWNhdG9yczogdHJ1ZSxcbiAgc2hvd1N0YXR1czogdHJ1ZSxcbiAgc2hvd1RodW1iczogdHJ1ZSxcbiAgc3RvcE9uSG92ZXI6IHRydWUsXG4gIHN3aXBlU2Nyb2xsVG9sZXJhbmNlOiA1LFxuICBzd2lwZWFibGU6IHRydWUsXG4gIHRyYW5zaXRpb25UaW1lOiAzNTAsXG4gIHZlcnRpY2FsU3dpcGU6ICdzdGFuZGFyZCcsXG4gIHdpZHRoOiAnMTAwJSdcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcInJlYWN0XCIpKTtcblxudmFyIF9jc3NDbGFzc2VzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vY3NzQ2xhc3Nlc1wiKSk7XG5cbnZhciBfZGltZW5zaW9ucyA9IHJlcXVpcmUoXCIuLi9kaW1lbnNpb25zXCIpO1xuXG52YXIgX0NTU1RyYW5zbGF0ZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL0NTU1RyYW5zbGF0ZVwiKSk7XG5cbnZhciBfcmVhY3RFYXN5U3dpcGUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdC1lYXN5LXN3aXBlXCIpKTtcblxudmFyIF93aW5kb3cgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi9zaGltcy93aW5kb3dcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKSB7IGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDsgdmFyIGNhY2hlID0gbmV3IFdlYWtNYXAoKTsgX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKCkgeyByZXR1cm4gY2FjaGU7IH07IHJldHVybiBjYWNoZTsgfVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgX3R5cGVvZihvYmopICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikgeyByZXR1cm4geyBkZWZhdWx0OiBvYmogfTsgfSB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUoKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgeyB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDsgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfVxuXG5mdW5jdGlvbiBfdHlwZW9mKG9iaikgeyBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIF9zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7IH1cblxuZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7IG8uX19wcm90b19fID0gcDsgcmV0dXJuIG87IH07IHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7IH1cblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxuXG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKFJlZmxlY3QuY29uc3RydWN0KERhdGUsIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5mdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyBfZ2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3QuZ2V0UHJvdG90eXBlT2YgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2YobykgeyByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pOyB9OyByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pOyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBpc0tleWJvYXJkRXZlbnQgPSBmdW5jdGlvbiBpc0tleWJvYXJkRXZlbnQoZSkge1xuICByZXR1cm4gZS5oYXNPd25Qcm9wZXJ0eSgna2V5Jyk7XG59O1xuXG52YXIgVGh1bWJzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhUaHVtYnMsIF9Db21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoVGh1bWJzKTtcblxuICBmdW5jdGlvbiBUaHVtYnMoX3Byb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRodW1icyk7XG5cbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIF9wcm9wcyk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaXRlbXNXcmFwcGVyUmVmXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaXRlbXNMaXN0UmVmXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwidGh1bWJzUmVmXCIsIHZvaWQgMCk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2V0SXRlbXNXcmFwcGVyUmVmXCIsIGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICBfdGhpcy5pdGVtc1dyYXBwZXJSZWYgPSBub2RlO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNldEl0ZW1zTGlzdFJlZlwiLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgX3RoaXMuaXRlbXNMaXN0UmVmID0gbm9kZTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJzZXRUaHVtYnNSZWZcIiwgZnVuY3Rpb24gKG5vZGUsIGluZGV4KSB7XG4gICAgICBpZiAoIV90aGlzLnRodW1ic1JlZikge1xuICAgICAgICBfdGhpcy50aHVtYnNSZWYgPSBbXTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMudGh1bWJzUmVmW2luZGV4XSA9IG5vZGU7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwidXBkYXRlU2l6ZXNcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCFfdGhpcy5wcm9wcy5jaGlsZHJlbiB8fCAhX3RoaXMuaXRlbXNXcmFwcGVyUmVmIHx8ICFfdGhpcy50aHVtYnNSZWYpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgdG90YWwgPSBfcmVhY3QuQ2hpbGRyZW4uY291bnQoX3RoaXMucHJvcHMuY2hpbGRyZW4pO1xuXG4gICAgICB2YXIgd3JhcHBlclNpemUgPSBfdGhpcy5pdGVtc1dyYXBwZXJSZWYuY2xpZW50V2lkdGg7XG4gICAgICB2YXIgaXRlbVNpemUgPSBfdGhpcy5wcm9wcy50aHVtYldpZHRoID8gX3RoaXMucHJvcHMudGh1bWJXaWR0aCA6ICgwLCBfZGltZW5zaW9ucy5vdXRlcldpZHRoKShfdGhpcy50aHVtYnNSZWZbMF0pO1xuICAgICAgdmFyIHZpc2libGVJdGVtcyA9IE1hdGguZmxvb3Iod3JhcHBlclNpemUgLyBpdGVtU2l6ZSk7XG4gICAgICB2YXIgbGFzdFBvc2l0aW9uID0gdG90YWwgLSB2aXNpYmxlSXRlbXM7XG4gICAgICB2YXIgc2hvd0Fycm93cyA9IHZpc2libGVJdGVtcyA8IHRvdGFsO1xuXG4gICAgICBfdGhpcy5zZXRTdGF0ZShmdW5jdGlvbiAoX3N0YXRlLCBwcm9wcykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGl0ZW1TaXplOiBpdGVtU2l6ZSxcbiAgICAgICAgICB2aXNpYmxlSXRlbXM6IHZpc2libGVJdGVtcyxcbiAgICAgICAgICBmaXJzdEl0ZW06IHNob3dBcnJvd3MgPyBfdGhpcy5nZXRGaXJzdEl0ZW0ocHJvcHMuc2VsZWN0ZWRJdGVtKSA6IDAsXG4gICAgICAgICAgbGFzdFBvc2l0aW9uOiBsYXN0UG9zaXRpb24sXG4gICAgICAgICAgc2hvd0Fycm93czogc2hvd0Fycm93c1xuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlQ2xpY2tJdGVtXCIsIGZ1bmN0aW9uIChpbmRleCwgaXRlbSwgZSkge1xuICAgICAgaWYgKCFpc0tleWJvYXJkRXZlbnQoZSkgfHwgZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgICAgdmFyIGhhbmRsZXIgPSBfdGhpcy5wcm9wcy5vblNlbGVjdEl0ZW07XG5cbiAgICAgICAgaWYgKHR5cGVvZiBoYW5kbGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgaGFuZGxlcihpbmRleCwgaXRlbSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJvblN3aXBlU3RhcnRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzd2lwaW5nOiB0cnVlXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJvblN3aXBlRW5kXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgc3dpcGluZzogZmFsc2VcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIm9uU3dpcGVNb3ZlXCIsIGZ1bmN0aW9uIChkZWx0YSkge1xuICAgICAgdmFyIGRlbHRhWCA9IGRlbHRhLng7XG5cbiAgICAgIGlmICghX3RoaXMuc3RhdGUuaXRlbVNpemUgfHwgIV90aGlzLml0ZW1zV3JhcHBlclJlZikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHZhciBsZWZ0Qm91bmRhcnkgPSAwO1xuICAgICAgdmFyIGN1cnJlbnRQb3NpdGlvbiA9IC1fdGhpcy5zdGF0ZS5maXJzdEl0ZW0gKiBfdGhpcy5zdGF0ZS5pdGVtU2l6ZTtcbiAgICAgIHZhciBsYXN0TGVmdEJvdW5kYXJ5ID0gLV90aGlzLnN0YXRlLnZpc2libGVJdGVtcyAqIF90aGlzLnN0YXRlLml0ZW1TaXplOyAvLyBwcmV2ZW50IHVzZXIgZnJvbSBzd2lwaW5nIGxlZnQgb3V0IG9mIGJvdW5kYXJpZXNcblxuICAgICAgaWYgKGN1cnJlbnRQb3NpdGlvbiA9PT0gbGVmdEJvdW5kYXJ5ICYmIGRlbHRhWCA+IDApIHtcbiAgICAgICAgZGVsdGFYID0gMDtcbiAgICAgIH0gLy8gcHJldmVudCB1c2VyIGZyb20gc3dpcGluZyByaWdodCBvdXQgb2YgYm91bmRhcmllc1xuXG5cbiAgICAgIGlmIChjdXJyZW50UG9zaXRpb24gPT09IGxhc3RMZWZ0Qm91bmRhcnkgJiYgZGVsdGFYIDwgMCkge1xuICAgICAgICBkZWx0YVggPSAwO1xuICAgICAgfVxuXG4gICAgICB2YXIgd3JhcHBlclNpemUgPSBfdGhpcy5pdGVtc1dyYXBwZXJSZWYuY2xpZW50V2lkdGg7XG4gICAgICB2YXIgcG9zaXRpb24gPSBjdXJyZW50UG9zaXRpb24gKyAxMDAgLyAod3JhcHBlclNpemUgLyBkZWx0YVgpOyAvLyBpZiAzZCBpc24ndCBhdmFpbGFibGUgd2Ugd2lsbCB1c2UgbGVmdCB0byBtb3ZlXG5cbiAgICAgIGlmIChfdGhpcy5pdGVtc0xpc3RSZWYpIHtcbiAgICAgICAgWydXZWJraXRUcmFuc2Zvcm0nLCAnTW96VHJhbnNmb3JtJywgJ01zVHJhbnNmb3JtJywgJ09UcmFuc2Zvcm0nLCAndHJhbnNmb3JtJywgJ21zVHJhbnNmb3JtJ10uZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICAgICAgICAgIF90aGlzLml0ZW1zTGlzdFJlZi5zdHlsZVtwcm9wXSA9ICgwLCBfQ1NTVHJhbnNsYXRlLmRlZmF1bHQpKHBvc2l0aW9uLCAnJScsIF90aGlzLnByb3BzLmF4aXMpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2xpZGVSaWdodFwiLCBmdW5jdGlvbiAocG9zaXRpb25zKSB7XG4gICAgICBfdGhpcy5tb3ZlVG8oX3RoaXMuc3RhdGUuZmlyc3RJdGVtIC0gKHR5cGVvZiBwb3NpdGlvbnMgPT09ICdudW1iZXInID8gcG9zaXRpb25zIDogMSkpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNsaWRlTGVmdFwiLCBmdW5jdGlvbiAocG9zaXRpb25zKSB7XG4gICAgICBfdGhpcy5tb3ZlVG8oX3RoaXMuc3RhdGUuZmlyc3RJdGVtICsgKHR5cGVvZiBwb3NpdGlvbnMgPT09ICdudW1iZXInID8gcG9zaXRpb25zIDogMSkpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcIm1vdmVUb1wiLCBmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgIC8vIHBvc2l0aW9uIGNhbid0IGJlIGxvd2VyIHRoYW4gMFxuICAgICAgcG9zaXRpb24gPSBwb3NpdGlvbiA8IDAgPyAwIDogcG9zaXRpb247IC8vIHBvc2l0aW9uIGNhbid0IGJlIGhpZ2hlciB0aGFuIGxhc3QgcG9zdGlvblxuXG4gICAgICBwb3NpdGlvbiA9IHBvc2l0aW9uID49IF90aGlzLnN0YXRlLmxhc3RQb3NpdGlvbiA/IF90aGlzLnN0YXRlLmxhc3RQb3NpdGlvbiA6IHBvc2l0aW9uO1xuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGZpcnN0SXRlbTogcG9zaXRpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBzZWxlY3RlZEl0ZW06IF9wcm9wcy5zZWxlY3RlZEl0ZW0sXG4gICAgICBzd2lwaW5nOiBmYWxzZSxcbiAgICAgIHNob3dBcnJvd3M6IGZhbHNlLFxuICAgICAgZmlyc3RJdGVtOiAwLFxuICAgICAgdmlzaWJsZUl0ZW1zOiAwLFxuICAgICAgbGFzdFBvc2l0aW9uOiAwXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoVGh1bWJzLCBbe1xuICAgIGtleTogXCJjb21wb25lbnREaWRNb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIHRoaXMuc2V0dXBUaHVtYnMoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMocHJvcHMpIHtcbiAgICAgIGlmIChwcm9wcy5zZWxlY3RlZEl0ZW0gIT09IHRoaXMuc3RhdGUuc2VsZWN0ZWRJdGVtKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHNlbGVjdGVkSXRlbTogcHJvcHMuc2VsZWN0ZWRJdGVtLFxuICAgICAgICAgIGZpcnN0SXRlbTogdGhpcy5nZXRGaXJzdEl0ZW0ocHJvcHMuc2VsZWN0ZWRJdGVtKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkVXBkYXRlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLmNoaWxkcmVuID09PSBwcmV2UHJvcHMuY2hpbGRyZW4pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSAvLyBUaGlzIHdpbGwgY2FwdHVyZSBhbnkgc2l6ZSBjaGFuZ2VzIGZvciBhcnJvdyBhZGp1c3RtZW50cyBldGMuXG4gICAgICAvLyB1c3VhbGx5IGluIHRoZSBzYW1lIHJlbmRlciBjeWNsZSBzbyB3ZSBkb24ndCBzZWUgYW55IGZsaWNrZXJzXG5cblxuICAgICAgdGhpcy51cGRhdGVTaXplcygpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsVW5tb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIHRoaXMuZGVzdHJveVRodW1icygpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzZXR1cFRodW1ic1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXR1cFRodW1icygpIHtcbiAgICAgIC8vIGFzIHRoZSB3aWR0aHMgYXJlIGNhbGN1bGF0ZWQsIHdlIG5lZWQgdG8gcmVzaXplXG4gICAgICAvLyB0aGUgY2Fyb3VzZWwgd2hlbiB0aGUgd2luZG93IGlzIHJlc2l6ZWRcbiAgICAgICgwLCBfd2luZG93LmRlZmF1bHQpKCkuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy51cGRhdGVTaXplcyk7IC8vIGlzc3VlICMyIC0gaW1hZ2UgbG9hZGluZyBzbWFsbGVyXG5cbiAgICAgICgwLCBfd2luZG93LmRlZmF1bHQpKCkuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIHRoaXMudXBkYXRlU2l6ZXMpOyAvLyB3aGVuIHRoZSBjb21wb25lbnQgaXMgcmVuZGVyZWQgd2UgbmVlZCB0byBjYWxjdWxhdGVcbiAgICAgIC8vIHRoZSBjb250YWluZXIgc2l6ZSB0byBhZGp1c3QgdGhlIHJlc3BvbnNpdmUgYmVoYXZpb3VyXG5cbiAgICAgIHRoaXMudXBkYXRlU2l6ZXMoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGVzdHJveVRodW1ic1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZXN0cm95VGh1bWJzKCkge1xuICAgICAgLy8gcmVtb3ZpbmcgbGlzdGVuZXJzXG4gICAgICAoMCwgX3dpbmRvdy5kZWZhdWx0KSgpLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMudXBkYXRlU2l6ZXMpO1xuICAgICAgKDAsIF93aW5kb3cuZGVmYXVsdCkoKS5yZW1vdmVFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgdGhpcy51cGRhdGVTaXplcyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldEZpcnN0SXRlbVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGaXJzdEl0ZW0oc2VsZWN0ZWRJdGVtKSB7XG4gICAgICB2YXIgZmlyc3RJdGVtID0gc2VsZWN0ZWRJdGVtO1xuXG4gICAgICBpZiAoc2VsZWN0ZWRJdGVtID49IHRoaXMuc3RhdGUubGFzdFBvc2l0aW9uKSB7XG4gICAgICAgIGZpcnN0SXRlbSA9IHRoaXMuc3RhdGUubGFzdFBvc2l0aW9uO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2VsZWN0ZWRJdGVtIDwgdGhpcy5zdGF0ZS5maXJzdEl0ZW0gKyB0aGlzLnN0YXRlLnZpc2libGVJdGVtcykge1xuICAgICAgICBmaXJzdEl0ZW0gPSB0aGlzLnN0YXRlLmZpcnN0SXRlbTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNlbGVjdGVkSXRlbSA8IHRoaXMuc3RhdGUuZmlyc3RJdGVtKSB7XG4gICAgICAgIGZpcnN0SXRlbSA9IHNlbGVjdGVkSXRlbTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZpcnN0SXRlbTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVySXRlbXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVySXRlbXMoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChpbWcsIGluZGV4KSB7XG4gICAgICAgIHZhciBpdGVtQ2xhc3MgPSBfY3NzQ2xhc3Nlcy5kZWZhdWx0LklURU0oZmFsc2UsIGluZGV4ID09PSBfdGhpczIuc3RhdGUuc2VsZWN0ZWRJdGVtKTtcblxuICAgICAgICB2YXIgdGh1bWJQcm9wcyA9IHtcbiAgICAgICAgICBrZXk6IGluZGV4LFxuICAgICAgICAgIHJlZjogZnVuY3Rpb24gcmVmKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczIuc2V0VGh1bWJzUmVmKGUsIGluZGV4KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGNsYXNzTmFtZTogaXRlbUNsYXNzLFxuICAgICAgICAgIG9uQ2xpY2s6IF90aGlzMi5oYW5kbGVDbGlja0l0ZW0uYmluZChfdGhpczIsIGluZGV4LCBfdGhpczIucHJvcHMuY2hpbGRyZW5baW5kZXhdKSxcbiAgICAgICAgICBvbktleURvd246IF90aGlzMi5oYW5kbGVDbGlja0l0ZW0uYmluZChfdGhpczIsIGluZGV4LCBfdGhpczIucHJvcHMuY2hpbGRyZW5baW5kZXhdKSxcbiAgICAgICAgICAnYXJpYS1sYWJlbCc6IFwiXCIuY29uY2F0KF90aGlzMi5wcm9wcy5sYWJlbHMuaXRlbSwgXCIgXCIpLmNvbmNhdChpbmRleCArIDEpLFxuICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICB3aWR0aDogX3RoaXMyLnByb3BzLnRodW1iV2lkdGhcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImxpXCIsIF9leHRlbmRzKHt9LCB0aHVtYlByb3BzLCB7XG4gICAgICAgICAgcm9sZTogXCJidXR0b25cIixcbiAgICAgICAgICB0YWJJbmRleDogMFxuICAgICAgICB9KSwgaW1nKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIGlmICghdGhpcy5wcm9wcy5jaGlsZHJlbikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdmFyIGlzU3dpcGVhYmxlID0gX3JlYWN0LkNoaWxkcmVuLmNvdW50KHRoaXMucHJvcHMuY2hpbGRyZW4pID4gMTsgLy8gc2hvdyBsZWZ0IGFycm93P1xuXG4gICAgICB2YXIgaGFzUHJldiA9IHRoaXMuc3RhdGUuc2hvd0Fycm93cyAmJiB0aGlzLnN0YXRlLmZpcnN0SXRlbSA+IDA7IC8vIHNob3cgcmlnaHQgYXJyb3dcblxuICAgICAgdmFyIGhhc05leHQgPSB0aGlzLnN0YXRlLnNob3dBcnJvd3MgJiYgdGhpcy5zdGF0ZS5maXJzdEl0ZW0gPCB0aGlzLnN0YXRlLmxhc3RQb3NpdGlvbjsgLy8gb2JqIHRvIGhvbGQgdGhlIHRyYW5zZm9ybWF0aW9ucyBhbmQgc3R5bGVzXG5cbiAgICAgIHZhciBpdGVtTGlzdFN0eWxlcyA9IHt9O1xuICAgICAgdmFyIGN1cnJlbnRQb3NpdGlvbiA9IC10aGlzLnN0YXRlLmZpcnN0SXRlbSAqICh0aGlzLnN0YXRlLml0ZW1TaXplIHx8IDApO1xuICAgICAgdmFyIHRyYW5zZm9ybVByb3AgPSAoMCwgX0NTU1RyYW5zbGF0ZS5kZWZhdWx0KShjdXJyZW50UG9zaXRpb24sICdweCcsIHRoaXMucHJvcHMuYXhpcyk7XG4gICAgICB2YXIgdHJhbnNpdGlvblRpbWUgPSB0aGlzLnByb3BzLnRyYW5zaXRpb25UaW1lICsgJ21zJztcbiAgICAgIGl0ZW1MaXN0U3R5bGVzID0ge1xuICAgICAgICBXZWJraXRUcmFuc2Zvcm06IHRyYW5zZm9ybVByb3AsXG4gICAgICAgIE1velRyYW5zZm9ybTogdHJhbnNmb3JtUHJvcCxcbiAgICAgICAgTXNUcmFuc2Zvcm06IHRyYW5zZm9ybVByb3AsXG4gICAgICAgIE9UcmFuc2Zvcm06IHRyYW5zZm9ybVByb3AsXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNmb3JtUHJvcCxcbiAgICAgICAgbXNUcmFuc2Zvcm06IHRyYW5zZm9ybVByb3AsXG4gICAgICAgIFdlYmtpdFRyYW5zaXRpb25EdXJhdGlvbjogdHJhbnNpdGlvblRpbWUsXG4gICAgICAgIE1velRyYW5zaXRpb25EdXJhdGlvbjogdHJhbnNpdGlvblRpbWUsXG4gICAgICAgIE1zVHJhbnNpdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uVGltZSxcbiAgICAgICAgT1RyYW5zaXRpb25EdXJhdGlvbjogdHJhbnNpdGlvblRpbWUsXG4gICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbjogdHJhbnNpdGlvblRpbWUsXG4gICAgICAgIG1zVHJhbnNpdGlvbkR1cmF0aW9uOiB0cmFuc2l0aW9uVGltZVxuICAgICAgfTtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogX2Nzc0NsYXNzZXMuZGVmYXVsdC5DQVJPVVNFTChmYWxzZSlcbiAgICAgIH0sIC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBfY3NzQ2xhc3Nlcy5kZWZhdWx0LldSQVBQRVIoZmFsc2UpLFxuICAgICAgICByZWY6IHRoaXMuc2V0SXRlbXNXcmFwcGVyUmVmXG4gICAgICB9LCAvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgICAgIHR5cGU6IFwiYnV0dG9uXCIsXG4gICAgICAgIGNsYXNzTmFtZTogX2Nzc0NsYXNzZXMuZGVmYXVsdC5BUlJPV19QUkVWKCFoYXNQcmV2KSxcbiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMzLnNsaWRlUmlnaHQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMucHJvcHMubGFiZWxzLmxlZnRBcnJvd1xuICAgICAgfSksIGlzU3dpcGVhYmxlID8gLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0RWFzeVN3aXBlLmRlZmF1bHQsIHtcbiAgICAgICAgdGFnTmFtZTogXCJ1bFwiLFxuICAgICAgICBjbGFzc05hbWU6IF9jc3NDbGFzc2VzLmRlZmF1bHQuU0xJREVSKGZhbHNlLCB0aGlzLnN0YXRlLnN3aXBpbmcpLFxuICAgICAgICBvblN3aXBlTGVmdDogdGhpcy5zbGlkZUxlZnQsXG4gICAgICAgIG9uU3dpcGVSaWdodDogdGhpcy5zbGlkZVJpZ2h0LFxuICAgICAgICBvblN3aXBlTW92ZTogdGhpcy5vblN3aXBlTW92ZSxcbiAgICAgICAgb25Td2lwZVN0YXJ0OiB0aGlzLm9uU3dpcGVTdGFydCxcbiAgICAgICAgb25Td2lwZUVuZDogdGhpcy5vblN3aXBlRW5kLFxuICAgICAgICBzdHlsZTogaXRlbUxpc3RTdHlsZXMsXG4gICAgICAgIGlubmVyUmVmOiB0aGlzLnNldEl0ZW1zTGlzdFJlZlxuICAgICAgfSwgdGhpcy5yZW5kZXJJdGVtcygpKSA6IC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwidWxcIiwge1xuICAgICAgICBjbGFzc05hbWU6IF9jc3NDbGFzc2VzLmRlZmF1bHQuU0xJREVSKGZhbHNlLCB0aGlzLnN0YXRlLnN3aXBpbmcpLFxuICAgICAgICByZWY6IGZ1bmN0aW9uIHJlZihub2RlKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMy5zZXRJdGVtc0xpc3RSZWYobm9kZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHN0eWxlOiBpdGVtTGlzdFN0eWxlc1xuICAgICAgfSwgdGhpcy5yZW5kZXJJdGVtcygpKSwgLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgICAgICB0eXBlOiBcImJ1dHRvblwiLFxuICAgICAgICBjbGFzc05hbWU6IF9jc3NDbGFzc2VzLmRlZmF1bHQuQVJST1dfTkVYVCghaGFzTmV4dCksXG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMy5zbGlkZUxlZnQoKTtcbiAgICAgICAgfSxcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMucHJvcHMubGFiZWxzLnJpZ2h0QXJyb3dcbiAgICAgIH0pKSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFRodW1icztcbn0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFRodW1icztcblxuX2RlZmluZVByb3BlcnR5KFRodW1icywgXCJkaXNwbGF5TmFtZVwiLCAnVGh1bWJzJyk7XG5cbl9kZWZpbmVQcm9wZXJ0eShUaHVtYnMsIFwiZGVmYXVsdFByb3BzXCIsIHtcbiAgYXhpczogJ2hvcml6b250YWwnLFxuICBsYWJlbHM6IHtcbiAgICBsZWZ0QXJyb3c6ICdwcmV2aW91cyBzbGlkZSAvIGl0ZW0nLFxuICAgIHJpZ2h0QXJyb3c6ICduZXh0IHNsaWRlIC8gaXRlbScsXG4gICAgaXRlbTogJ3NsaWRlIGl0ZW0nXG4gIH0sXG4gIHNlbGVjdGVkSXRlbTogMCxcbiAgdGh1bWJXaWR0aDogODAsXG4gIHRyYW5zaXRpb25UaW1lOiAzNTBcbn0pOyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX2NsYXNzbmFtZXMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJjbGFzc25hbWVzXCIpKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxudmFyIF9kZWZhdWx0ID0ge1xuICBST09UOiBmdW5jdGlvbiBST09UKGN1c3RvbUNsYXNzTmFtZSkge1xuICAgIHJldHVybiAoMCwgX2NsYXNzbmFtZXMuZGVmYXVsdCkoX2RlZmluZVByb3BlcnR5KHtcbiAgICAgICdjYXJvdXNlbC1yb290JzogdHJ1ZVxuICAgIH0sIGN1c3RvbUNsYXNzTmFtZSB8fCAnJywgISFjdXN0b21DbGFzc05hbWUpKTtcbiAgfSxcbiAgQ0FST1VTRUw6IGZ1bmN0aW9uIENBUk9VU0VMKGlzU2xpZGVyKSB7XG4gICAgcmV0dXJuICgwLCBfY2xhc3NuYW1lcy5kZWZhdWx0KSh7XG4gICAgICBjYXJvdXNlbDogdHJ1ZSxcbiAgICAgICdjYXJvdXNlbC1zbGlkZXInOiBpc1NsaWRlclxuICAgIH0pO1xuICB9LFxuICBXUkFQUEVSOiBmdW5jdGlvbiBXUkFQUEVSKGlzU2xpZGVyLCBheGlzKSB7XG4gICAgcmV0dXJuICgwLCBfY2xhc3NuYW1lcy5kZWZhdWx0KSh7XG4gICAgICAndGh1bWJzLXdyYXBwZXInOiAhaXNTbGlkZXIsXG4gICAgICAnc2xpZGVyLXdyYXBwZXInOiBpc1NsaWRlcixcbiAgICAgICdheGlzLWhvcml6b250YWwnOiBheGlzID09PSAnaG9yaXpvbnRhbCcsXG4gICAgICAnYXhpcy12ZXJ0aWNhbCc6IGF4aXMgIT09ICdob3Jpem9udGFsJ1xuICAgIH0pO1xuICB9LFxuICBTTElERVI6IGZ1bmN0aW9uIFNMSURFUihpc1NsaWRlciwgaXNTd2lwaW5nKSB7XG4gICAgcmV0dXJuICgwLCBfY2xhc3NuYW1lcy5kZWZhdWx0KSh7XG4gICAgICB0aHVtYnM6ICFpc1NsaWRlcixcbiAgICAgIHNsaWRlcjogaXNTbGlkZXIsXG4gICAgICBhbmltYXRlZDogIWlzU3dpcGluZ1xuICAgIH0pO1xuICB9LFxuICBJVEVNOiBmdW5jdGlvbiBJVEVNKGlzU2xpZGVyLCBzZWxlY3RlZCwgcHJldmlvdXMpIHtcbiAgICByZXR1cm4gKDAsIF9jbGFzc25hbWVzLmRlZmF1bHQpKHtcbiAgICAgIHRodW1iOiAhaXNTbGlkZXIsXG4gICAgICBzbGlkZTogaXNTbGlkZXIsXG4gICAgICBzZWxlY3RlZDogc2VsZWN0ZWQsXG4gICAgICBwcmV2aW91czogcHJldmlvdXNcbiAgICB9KTtcbiAgfSxcbiAgQVJST1dfUFJFVjogZnVuY3Rpb24gQVJST1dfUFJFVihkaXNhYmxlZCkge1xuICAgIHJldHVybiAoMCwgX2NsYXNzbmFtZXMuZGVmYXVsdCkoe1xuICAgICAgJ2NvbnRyb2wtYXJyb3cgY29udHJvbC1wcmV2JzogdHJ1ZSxcbiAgICAgICdjb250cm9sLWRpc2FibGVkJzogZGlzYWJsZWRcbiAgICB9KTtcbiAgfSxcbiAgQVJST1dfTkVYVDogZnVuY3Rpb24gQVJST1dfTkVYVChkaXNhYmxlZCkge1xuICAgIHJldHVybiAoMCwgX2NsYXNzbmFtZXMuZGVmYXVsdCkoe1xuICAgICAgJ2NvbnRyb2wtYXJyb3cgY29udHJvbC1uZXh0JzogdHJ1ZSxcbiAgICAgICdjb250cm9sLWRpc2FibGVkJzogZGlzYWJsZWRcbiAgICB9KTtcbiAgfSxcbiAgRE9UOiBmdW5jdGlvbiBET1Qoc2VsZWN0ZWQpIHtcbiAgICByZXR1cm4gKDAsIF9jbGFzc25hbWVzLmRlZmF1bHQpKHtcbiAgICAgIGRvdDogdHJ1ZSxcbiAgICAgIHNlbGVjdGVkOiBzZWxlY3RlZFxuICAgIH0pO1xuICB9XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm91dGVyV2lkdGggPSB2b2lkIDA7XG5cbnZhciBvdXRlcldpZHRoID0gZnVuY3Rpb24gb3V0ZXJXaWR0aChlbCkge1xuICB2YXIgd2lkdGggPSBlbC5vZmZzZXRXaWR0aDtcbiAgdmFyIHN0eWxlID0gZ2V0Q29tcHV0ZWRTdHlsZShlbCk7XG4gIHdpZHRoICs9IHBhcnNlSW50KHN0eWxlLm1hcmdpbkxlZnQpICsgcGFyc2VJbnQoc3R5bGUubWFyZ2luUmlnaHQpO1xuICByZXR1cm4gd2lkdGg7XG59O1xuXG5leHBvcnRzLm91dGVyV2lkdGggPSBvdXRlcldpZHRoOyIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ2Fyb3VzZWxcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX0Nhcm91c2VsLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGh1bWJzXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9UaHVtYnMuZGVmYXVsdDtcbiAgfVxufSk7XG5cbnZhciBfQ2Fyb3VzZWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvQ2Fyb3VzZWxcIikpO1xuXG52YXIgX1RodW1icyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vY29tcG9uZW50cy9UaHVtYnNcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfSIsIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX2RlZmF1bHQgPSBmdW5jdGlvbiBfZGVmYXVsdCgpIHtcbiAgcmV0dXJuIGRvY3VtZW50O1xufTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG5cbnZhciBfZGVmYXVsdCA9IGZ1bmN0aW9uIF9kZWZhdWx0KCkge1xuICByZXR1cm4gd2luZG93O1xufTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFycikge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFycikgPT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG4iLCJ2YXIgaXNhcnJheSA9IHJlcXVpcmUoJ2lzYXJyYXknKVxuXG4vKipcbiAqIEV4cG9zZSBgcGF0aFRvUmVnZXhwYC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBwYXRoVG9SZWdleHBcbm1vZHVsZS5leHBvcnRzLnBhcnNlID0gcGFyc2Vcbm1vZHVsZS5leHBvcnRzLmNvbXBpbGUgPSBjb21waWxlXG5tb2R1bGUuZXhwb3J0cy50b2tlbnNUb0Z1bmN0aW9uID0gdG9rZW5zVG9GdW5jdGlvblxubW9kdWxlLmV4cG9ydHMudG9rZW5zVG9SZWdFeHAgPSB0b2tlbnNUb1JlZ0V4cFxuXG4vKipcbiAqIFRoZSBtYWluIHBhdGggbWF0Y2hpbmcgcmVnZXhwIHV0aWxpdHkuXG4gKlxuICogQHR5cGUge1JlZ0V4cH1cbiAqL1xudmFyIFBBVEhfUkVHRVhQID0gbmV3IFJlZ0V4cChbXG4gIC8vIE1hdGNoIGVzY2FwZWQgY2hhcmFjdGVycyB0aGF0IHdvdWxkIG90aGVyd2lzZSBhcHBlYXIgaW4gZnV0dXJlIG1hdGNoZXMuXG4gIC8vIFRoaXMgYWxsb3dzIHRoZSB1c2VyIHRvIGVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCB3b24ndCB0cmFuc2Zvcm0uXG4gICcoXFxcXFxcXFwuKScsXG4gIC8vIE1hdGNoIEV4cHJlc3Mtc3R5bGUgcGFyYW1ldGVycyBhbmQgdW4tbmFtZWQgcGFyYW1ldGVycyB3aXRoIGEgcHJlZml4XG4gIC8vIGFuZCBvcHRpb25hbCBzdWZmaXhlcy4gTWF0Y2hlcyBhcHBlYXIgYXM6XG4gIC8vXG4gIC8vIFwiLzp0ZXN0KFxcXFxkKyk/XCIgPT4gW1wiL1wiLCBcInRlc3RcIiwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgXCI/XCIsIHVuZGVmaW5lZF1cbiAgLy8gXCIvcm91dGUoXFxcXGQrKVwiICA9PiBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCJcXGQrXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkXVxuICAvLyBcIi8qXCIgICAgICAgICAgICA9PiBbXCIvXCIsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgXCIqXCJdXG4gICcoW1xcXFwvLl0pPyg/Oig/OlxcXFw6KFxcXFx3KykoPzpcXFxcKCgoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpXSkrKVxcXFwpKT98XFxcXCgoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKV0pKylcXFxcKSkoWysqP10pP3woXFxcXCopKSdcbl0uam9pbignfCcpLCAnZycpXG5cbi8qKlxuICogUGFyc2UgYSBzdHJpbmcgZm9yIHRoZSByYXcgdG9rZW5zLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHN0clxuICogQHBhcmFtICB7T2JqZWN0PX0gb3B0aW9uc1xuICogQHJldHVybiB7IUFycmF5fVxuICovXG5mdW5jdGlvbiBwYXJzZSAoc3RyLCBvcHRpb25zKSB7XG4gIHZhciB0b2tlbnMgPSBbXVxuICB2YXIga2V5ID0gMFxuICB2YXIgaW5kZXggPSAwXG4gIHZhciBwYXRoID0gJydcbiAgdmFyIGRlZmF1bHREZWxpbWl0ZXIgPSBvcHRpb25zICYmIG9wdGlvbnMuZGVsaW1pdGVyIHx8ICcvJ1xuICB2YXIgcmVzXG5cbiAgd2hpbGUgKChyZXMgPSBQQVRIX1JFR0VYUC5leGVjKHN0cikpICE9IG51bGwpIHtcbiAgICB2YXIgbSA9IHJlc1swXVxuICAgIHZhciBlc2NhcGVkID0gcmVzWzFdXG4gICAgdmFyIG9mZnNldCA9IHJlcy5pbmRleFxuICAgIHBhdGggKz0gc3RyLnNsaWNlKGluZGV4LCBvZmZzZXQpXG4gICAgaW5kZXggPSBvZmZzZXQgKyBtLmxlbmd0aFxuXG4gICAgLy8gSWdub3JlIGFscmVhZHkgZXNjYXBlZCBzZXF1ZW5jZXMuXG4gICAgaWYgKGVzY2FwZWQpIHtcbiAgICAgIHBhdGggKz0gZXNjYXBlZFsxXVxuICAgICAgY29udGludWVcbiAgICB9XG5cbiAgICB2YXIgbmV4dCA9IHN0cltpbmRleF1cbiAgICB2YXIgcHJlZml4ID0gcmVzWzJdXG4gICAgdmFyIG5hbWUgPSByZXNbM11cbiAgICB2YXIgY2FwdHVyZSA9IHJlc1s0XVxuICAgIHZhciBncm91cCA9IHJlc1s1XVxuICAgIHZhciBtb2RpZmllciA9IHJlc1s2XVxuICAgIHZhciBhc3RlcmlzayA9IHJlc1s3XVxuXG4gICAgLy8gUHVzaCB0aGUgY3VycmVudCBwYXRoIG9udG8gdGhlIHRva2Vucy5cbiAgICBpZiAocGF0aCkge1xuICAgICAgdG9rZW5zLnB1c2gocGF0aClcbiAgICAgIHBhdGggPSAnJ1xuICAgIH1cblxuICAgIHZhciBwYXJ0aWFsID0gcHJlZml4ICE9IG51bGwgJiYgbmV4dCAhPSBudWxsICYmIG5leHQgIT09IHByZWZpeFxuICAgIHZhciByZXBlYXQgPSBtb2RpZmllciA9PT0gJysnIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgb3B0aW9uYWwgPSBtb2RpZmllciA9PT0gJz8nIHx8IG1vZGlmaWVyID09PSAnKidcbiAgICB2YXIgZGVsaW1pdGVyID0gcmVzWzJdIHx8IGRlZmF1bHREZWxpbWl0ZXJcbiAgICB2YXIgcGF0dGVybiA9IGNhcHR1cmUgfHwgZ3JvdXBcblxuICAgIHRva2Vucy5wdXNoKHtcbiAgICAgIG5hbWU6IG5hbWUgfHwga2V5KyssXG4gICAgICBwcmVmaXg6IHByZWZpeCB8fCAnJyxcbiAgICAgIGRlbGltaXRlcjogZGVsaW1pdGVyLFxuICAgICAgb3B0aW9uYWw6IG9wdGlvbmFsLFxuICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICBwYXJ0aWFsOiBwYXJ0aWFsLFxuICAgICAgYXN0ZXJpc2s6ICEhYXN0ZXJpc2ssXG4gICAgICBwYXR0ZXJuOiBwYXR0ZXJuID8gZXNjYXBlR3JvdXAocGF0dGVybikgOiAoYXN0ZXJpc2sgPyAnLionIDogJ1teJyArIGVzY2FwZVN0cmluZyhkZWxpbWl0ZXIpICsgJ10rPycpXG4gICAgfSlcbiAgfVxuXG4gIC8vIE1hdGNoIGFueSBjaGFyYWN0ZXJzIHN0aWxsIHJlbWFpbmluZy5cbiAgaWYgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHBhdGggKz0gc3RyLnN1YnN0cihpbmRleClcbiAgfVxuXG4gIC8vIElmIHRoZSBwYXRoIGV4aXN0cywgcHVzaCBpdCBvbnRvIHRoZSBlbmQuXG4gIGlmIChwYXRoKSB7XG4gICAgdG9rZW5zLnB1c2gocGF0aClcbiAgfVxuXG4gIHJldHVybiB0b2tlbnNcbn1cblxuLyoqXG4gKiBDb21waWxlIGEgc3RyaW5nIHRvIGEgdGVtcGxhdGUgZnVuY3Rpb24gZm9yIHRoZSBwYXRoLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gICAgICAgICAgICAgc3RyXG4gKiBAcGFyYW0gIHtPYmplY3Q9fSAgICAgICAgICAgIG9wdGlvbnNcbiAqIEByZXR1cm4geyFmdW5jdGlvbihPYmplY3Q9LCBPYmplY3Q9KX1cbiAqL1xuZnVuY3Rpb24gY29tcGlsZSAoc3RyLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb0Z1bmN0aW9uKHBhcnNlKHN0ciwgb3B0aW9ucyksIG9wdGlvbnMpXG59XG5cbi8qKlxuICogUHJldHRpZXIgZW5jb2Rpbmcgb2YgVVJJIHBhdGggc2VnbWVudHMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlbmNvZGVVUklDb21wb25lbnRQcmV0dHkgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvW1xcLz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgdGhlIGFzdGVyaXNrIHBhcmFtZXRlci4gU2ltaWxhciB0byBgcHJldHR5YCwgYnV0IGFsbG93cyBzbGFzaGVzLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ31cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuZnVuY3Rpb24gZW5jb2RlQXN0ZXJpc2sgKHN0cikge1xuICByZXR1cm4gZW5jb2RlVVJJKHN0cikucmVwbGFjZSgvWz8jXS9nLCBmdW5jdGlvbiAoYykge1xuICAgIHJldHVybiAnJScgKyBjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKClcbiAgfSlcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBtZXRob2QgZm9yIHRyYW5zZm9ybWluZyB0b2tlbnMgaW50byB0aGUgcGF0aCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9GdW5jdGlvbiAodG9rZW5zLCBvcHRpb25zKSB7XG4gIC8vIENvbXBpbGUgYWxsIHRoZSB0b2tlbnMgaW50byByZWdleHBzLlxuICB2YXIgbWF0Y2hlcyA9IG5ldyBBcnJheSh0b2tlbnMubGVuZ3RoKVxuXG4gIC8vIENvbXBpbGUgYWxsIHRoZSBwYXR0ZXJucyBiZWZvcmUgY29tcGlsYXRpb24uXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbnNbaV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBtYXRjaGVzW2ldID0gbmV3IFJlZ0V4cCgnXig/OicgKyB0b2tlbnNbaV0ucGF0dGVybiArICcpJCcsIGZsYWdzKG9wdGlvbnMpKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAob2JqLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSAnJ1xuICAgIHZhciBkYXRhID0gb2JqIHx8IHt9XG4gICAgdmFyIG9wdGlvbnMgPSBvcHRzIHx8IHt9XG4gICAgdmFyIGVuY29kZSA9IG9wdGlvbnMucHJldHR5ID8gZW5jb2RlVVJJQ29tcG9uZW50UHJldHR5IDogZW5jb2RlVVJJQ29tcG9uZW50XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHBhdGggKz0gdG9rZW5cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB2YXIgdmFsdWUgPSBkYXRhW3Rva2VuLm5hbWVdXG4gICAgICB2YXIgc2VnbWVudFxuXG4gICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICBpZiAodG9rZW4ub3B0aW9uYWwpIHtcbiAgICAgICAgICAvLyBQcmVwZW5kIHBhcnRpYWwgc2VnbWVudCBwcmVmaXhlcy5cbiAgICAgICAgICBpZiAodG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgICAgcGF0aCArPSB0b2tlbi5wcmVmaXhcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gYmUgZGVmaW5lZCcpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGlzYXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGlmICghdG9rZW4ucmVwZWF0KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgXCInICsgdG9rZW4ubmFtZSArICdcIiB0byBub3QgcmVwZWF0LCBidXQgcmVjZWl2ZWQgYCcgKyBKU09OLnN0cmluZ2lmeSh2YWx1ZSkgKyAnYCcpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBcIicgKyB0b2tlbi5uYW1lICsgJ1wiIHRvIG5vdCBiZSBlbXB0eScpXG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICAgIHNlZ21lbnQgPSBlbmNvZGUodmFsdWVbal0pXG5cbiAgICAgICAgICBpZiAoIW1hdGNoZXNbaV0udGVzdChzZWdtZW50KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYWxsIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIGAnICsgSlNPTi5zdHJpbmdpZnkoc2VnbWVudCkgKyAnYCcpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcGF0aCArPSAoaiA9PT0gMCA/IHRva2VuLnByZWZpeCA6IHRva2VuLmRlbGltaXRlcikgKyBzZWdtZW50XG4gICAgICAgIH1cblxuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzZWdtZW50ID0gdG9rZW4uYXN0ZXJpc2sgPyBlbmNvZGVBc3Rlcmlzayh2YWx1ZSkgOiBlbmNvZGUodmFsdWUpXG5cbiAgICAgIGlmICghbWF0Y2hlc1tpXS50ZXN0KHNlZ21lbnQpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIFwiJyArIHRva2VuLm5hbWUgKyAnXCIgdG8gbWF0Y2ggXCInICsgdG9rZW4ucGF0dGVybiArICdcIiwgYnV0IHJlY2VpdmVkIFwiJyArIHNlZ21lbnQgKyAnXCInKVxuICAgICAgfVxuXG4gICAgICBwYXRoICs9IHRva2VuLnByZWZpeCArIHNlZ21lbnRcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aFxuICB9XG59XG5cbi8qKlxuICogRXNjYXBlIGEgcmVndWxhciBleHByZXNzaW9uIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmcgKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoLyhbLisqPz1eIToke30oKVtcXF18XFwvXFxcXF0pL2csICdcXFxcJDEnKVxufVxuXG4vKipcbiAqIEVzY2FwZSB0aGUgY2FwdHVyaW5nIGdyb3VwIGJ5IGVzY2FwaW5nIHNwZWNpYWwgY2hhcmFjdGVycyBhbmQgbWVhbmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGdyb3VwXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUdyb3VwIChncm91cCkge1xuICByZXR1cm4gZ3JvdXAucmVwbGFjZSgvKFs9ITokXFwvKCldKS9nLCAnXFxcXCQxJylcbn1cblxuLyoqXG4gKiBBdHRhY2ggdGhlIGtleXMgYXMgYSBwcm9wZXJ0eSBvZiB0aGUgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHJlXG4gKiBAcGFyYW0gIHtBcnJheX0gICBrZXlzXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBhdHRhY2hLZXlzIChyZSwga2V5cykge1xuICByZS5rZXlzID0ga2V5c1xuICByZXR1cm4gcmVcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGZsYWdzIGZvciBhIHJlZ2V4cCBmcm9tIHRoZSBvcHRpb25zLlxuICpcbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBmbGFncyAob3B0aW9ucykge1xuICByZXR1cm4gb3B0aW9ucyAmJiBvcHRpb25zLnNlbnNpdGl2ZSA/ICcnIDogJ2knXG59XG5cbi8qKlxuICogUHVsbCBvdXQga2V5cyBmcm9tIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFSZWdFeHB9IHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHJlZ2V4cFRvUmVnZXhwIChwYXRoLCBrZXlzKSB7XG4gIC8vIFVzZSBhIG5lZ2F0aXZlIGxvb2thaGVhZCB0byBtYXRjaCBvbmx5IGNhcHR1cmluZyBncm91cHMuXG4gIHZhciBncm91cHMgPSBwYXRoLnNvdXJjZS5tYXRjaCgvXFwoKD8hXFw/KS9nKVxuXG4gIGlmIChncm91cHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3Vwcy5sZW5ndGg7IGkrKykge1xuICAgICAga2V5cy5wdXNoKHtcbiAgICAgICAgbmFtZTogaSxcbiAgICAgICAgcHJlZml4OiBudWxsLFxuICAgICAgICBkZWxpbWl0ZXI6IG51bGwsXG4gICAgICAgIG9wdGlvbmFsOiBmYWxzZSxcbiAgICAgICAgcmVwZWF0OiBmYWxzZSxcbiAgICAgICAgcGFydGlhbDogZmFsc2UsXG4gICAgICAgIGFzdGVyaXNrOiBmYWxzZSxcbiAgICAgICAgcGF0dGVybjogbnVsbFxuICAgICAgfSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhwYXRoLCBrZXlzKVxufVxuXG4vKipcbiAqIFRyYW5zZm9ybSBhbiBhcnJheSBpbnRvIGEgcmVnZXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gIHBhdGhcbiAqIEBwYXJhbSAge0FycmF5fSAgIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIGFycmF5VG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgdmFyIHBhcnRzID0gW11cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICBwYXJ0cy5wdXNoKHBhdGhUb1JlZ2V4cChwYXRoW2ldLCBrZXlzLCBvcHRpb25zKS5zb3VyY2UpXG4gIH1cblxuICB2YXIgcmVnZXhwID0gbmV3IFJlZ0V4cCgnKD86JyArIHBhcnRzLmpvaW4oJ3wnKSArICcpJywgZmxhZ3Mob3B0aW9ucykpXG5cbiAgcmV0dXJuIGF0dGFjaEtleXMocmVnZXhwLCBrZXlzKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHBhdGggcmVnZXhwIGZyb20gc3RyaW5nIGlucHV0LlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHBhdGhcbiAqIEBwYXJhbSAgeyFBcnJheX0gIGtleXNcbiAqIEBwYXJhbSAgeyFPYmplY3R9IG9wdGlvbnNcbiAqIEByZXR1cm4geyFSZWdFeHB9XG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvUmVnZXhwIChwYXRoLCBrZXlzLCBvcHRpb25zKSB7XG4gIHJldHVybiB0b2tlbnNUb1JlZ0V4cChwYXJzZShwYXRoLCBvcHRpb25zKSwga2V5cywgb3B0aW9ucylcbn1cblxuLyoqXG4gKiBFeHBvc2UgYSBmdW5jdGlvbiBmb3IgdGFraW5nIHRva2VucyBhbmQgcmV0dXJuaW5nIGEgUmVnRXhwLlxuICpcbiAqIEBwYXJhbSAgeyFBcnJheX0gICAgICAgICAgdG9rZW5zXG4gKiBAcGFyYW0gIHsoQXJyYXl8T2JqZWN0KT19IGtleXNcbiAqIEBwYXJhbSAge09iamVjdD19ICAgICAgICAgb3B0aW9uc1xuICogQHJldHVybiB7IVJlZ0V4cH1cbiAqL1xuZnVuY3Rpb24gdG9rZW5zVG9SZWdFeHAgKHRva2Vucywga2V5cywgb3B0aW9ucykge1xuICBpZiAoIWlzYXJyYXkoa2V5cykpIHtcbiAgICBvcHRpb25zID0gLyoqIEB0eXBlIHshT2JqZWN0fSAqLyAoa2V5cyB8fCBvcHRpb25zKVxuICAgIGtleXMgPSBbXVxuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge31cblxuICB2YXIgc3RyaWN0ID0gb3B0aW9ucy5zdHJpY3RcbiAgdmFyIGVuZCA9IG9wdGlvbnMuZW5kICE9PSBmYWxzZVxuICB2YXIgcm91dGUgPSAnJ1xuXG4gIC8vIEl0ZXJhdGUgb3ZlciB0aGUgdG9rZW5zIGFuZCBjcmVhdGUgb3VyIHJlZ2V4cCBzdHJpbmcuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG5cbiAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgcm91dGUgKz0gZXNjYXBlU3RyaW5nKHRva2VuKVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcHJlZml4ID0gZXNjYXBlU3RyaW5nKHRva2VuLnByZWZpeClcbiAgICAgIHZhciBjYXB0dXJlID0gJyg/OicgKyB0b2tlbi5wYXR0ZXJuICsgJyknXG5cbiAgICAgIGtleXMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHRva2VuLnJlcGVhdCkge1xuICAgICAgICBjYXB0dXJlICs9ICcoPzonICsgcHJlZml4ICsgY2FwdHVyZSArICcpKidcbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuLm9wdGlvbmFsKSB7XG4gICAgICAgIGlmICghdG9rZW4ucGFydGlhbCkge1xuICAgICAgICAgIGNhcHR1cmUgPSAnKD86JyArIHByZWZpeCArICcoJyArIGNhcHR1cmUgKyAnKSk/J1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNhcHR1cmUgPSBwcmVmaXggKyAnKCcgKyBjYXB0dXJlICsgJyk/J1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXB0dXJlID0gcHJlZml4ICsgJygnICsgY2FwdHVyZSArICcpJ1xuICAgICAgfVxuXG4gICAgICByb3V0ZSArPSBjYXB0dXJlXG4gICAgfVxuICB9XG5cbiAgdmFyIGRlbGltaXRlciA9IGVzY2FwZVN0cmluZyhvcHRpb25zLmRlbGltaXRlciB8fCAnLycpXG4gIHZhciBlbmRzV2l0aERlbGltaXRlciA9IHJvdXRlLnNsaWNlKC1kZWxpbWl0ZXIubGVuZ3RoKSA9PT0gZGVsaW1pdGVyXG5cbiAgLy8gSW4gbm9uLXN0cmljdCBtb2RlIHdlIGFsbG93IGEgc2xhc2ggYXQgdGhlIGVuZCBvZiBtYXRjaC4gSWYgdGhlIHBhdGggdG9cbiAgLy8gbWF0Y2ggYWxyZWFkeSBlbmRzIHdpdGggYSBzbGFzaCwgd2UgcmVtb3ZlIGl0IGZvciBjb25zaXN0ZW5jeS4gVGhlIHNsYXNoXG4gIC8vIGlzIHZhbGlkIGF0IHRoZSBlbmQgb2YgYSBwYXRoIG1hdGNoLCBub3QgaW4gdGhlIG1pZGRsZS4gVGhpcyBpcyBpbXBvcnRhbnRcbiAgLy8gaW4gbm9uLWVuZGluZyBtb2RlLCB3aGVyZSBcIi90ZXN0L1wiIHNob3VsZG4ndCBtYXRjaCBcIi90ZXN0Ly9yb3V0ZVwiLlxuICBpZiAoIXN0cmljdCkge1xuICAgIHJvdXRlID0gKGVuZHNXaXRoRGVsaW1pdGVyID8gcm91dGUuc2xpY2UoMCwgLWRlbGltaXRlci5sZW5ndGgpIDogcm91dGUpICsgJyg/OicgKyBkZWxpbWl0ZXIgKyAnKD89JCkpPydcbiAgfVxuXG4gIGlmIChlbmQpIHtcbiAgICByb3V0ZSArPSAnJCdcbiAgfSBlbHNlIHtcbiAgICAvLyBJbiBub24tZW5kaW5nIG1vZGUsIHdlIG5lZWQgdGhlIGNhcHR1cmluZyBncm91cHMgdG8gbWF0Y2ggYXMgbXVjaCBhc1xuICAgIC8vIHBvc3NpYmxlIGJ5IHVzaW5nIGEgcG9zaXRpdmUgbG9va2FoZWFkIHRvIHRoZSBlbmQgb3IgbmV4dCBwYXRoIHNlZ21lbnQuXG4gICAgcm91dGUgKz0gc3RyaWN0ICYmIGVuZHNXaXRoRGVsaW1pdGVyID8gJycgOiAnKD89JyArIGRlbGltaXRlciArICd8JCknXG4gIH1cblxuICByZXR1cm4gYXR0YWNoS2V5cyhuZXcgUmVnRXhwKCdeJyArIHJvdXRlLCBmbGFncyhvcHRpb25zKSksIGtleXMpXG59XG5cbi8qKlxuICogTm9ybWFsaXplIHRoZSBnaXZlbiBwYXRoIHN0cmluZywgcmV0dXJuaW5nIGEgcmVndWxhciBleHByZXNzaW9uLlxuICpcbiAqIEFuIGVtcHR5IGFycmF5IGNhbiBiZSBwYXNzZWQgaW4gZm9yIHRoZSBrZXlzLCB3aGljaCB3aWxsIGhvbGQgdGhlXG4gKiBwbGFjZWhvbGRlciBrZXkgZGVzY3JpcHRpb25zLiBGb3IgZXhhbXBsZSwgdXNpbmcgYC91c2VyLzppZGAsIGBrZXlzYCB3aWxsXG4gKiBjb250YWluIGBbeyBuYW1lOiAnaWQnLCBkZWxpbWl0ZXI6ICcvJywgb3B0aW9uYWw6IGZhbHNlLCByZXBlYXQ6IGZhbHNlIH1dYC5cbiAqXG4gKiBAcGFyYW0gIHsoc3RyaW5nfFJlZ0V4cHxBcnJheSl9IHBhdGhcbiAqIEBwYXJhbSAgeyhBcnJheXxPYmplY3QpPX0gICAgICAga2V5c1xuICogQHBhcmFtICB7T2JqZWN0PX0gICAgICAgICAgICAgICBvcHRpb25zXG4gKiBAcmV0dXJuIHshUmVnRXhwfVxuICovXG5mdW5jdGlvbiBwYXRoVG9SZWdleHAgKHBhdGgsIGtleXMsIG9wdGlvbnMpIHtcbiAgaWYgKCFpc2FycmF5KGtleXMpKSB7XG4gICAgb3B0aW9ucyA9IC8qKiBAdHlwZSB7IU9iamVjdH0gKi8gKGtleXMgfHwgb3B0aW9ucylcbiAgICBrZXlzID0gW11cbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgaWYgKHBhdGggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICByZXR1cm4gcmVnZXhwVG9SZWdleHAocGF0aCwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSlcbiAgfVxuXG4gIGlmIChpc2FycmF5KHBhdGgpKSB7XG4gICAgcmV0dXJuIGFycmF5VG9SZWdleHAoLyoqIEB0eXBlIHshQXJyYXl9ICovIChwYXRoKSwgLyoqIEB0eXBlIHshQXJyYXl9ICovIChrZXlzKSwgb3B0aW9ucylcbiAgfVxuXG4gIHJldHVybiBzdHJpbmdUb1JlZ2V4cCgvKiogQHR5cGUge3N0cmluZ30gKi8gKHBhdGgpLCAvKiogQHR5cGUgeyFBcnJheX0gKi8gKGtleXMpLCBvcHRpb25zKVxufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi41LjJcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBtPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLHk9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTI7biYmU3ltYm9sLmZvcihcInJlYWN0LnBsYWNlaG9sZGVyXCIpO1xudmFyIHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEEoYSxiLGQsYyxlLGcsaCxmKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgaz1bZCxjLGUsZyxoLGZdLGw9MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBrW2wrK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiBCKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZD1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZCs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7QSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGQpfXZhciBDPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxEPXt9O1xuZnVuY3Rpb24gRShhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfUUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307RS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hP0IoXCI4NVwiKTp2b2lkIDA7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtFLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBGKCl7fUYucHJvdG90eXBlPUUucHJvdG90eXBlO2Z1bmN0aW9uIEcoYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZHx8Q312YXIgSD1HLnByb3RvdHlwZT1uZXcgRjtcbkguY29uc3RydWN0b3I9RzttKEgsRS5wcm90b3R5cGUpO0guaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEk9e2N1cnJlbnQ6bnVsbCxjdXJyZW50RGlzcGF0Y2hlcjpudWxsfSxKPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksSz17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTChhLGIsZCl7dmFyIGM9dm9pZCAwLGU9e30sZz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihjIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSi5jYWxsKGIsYykmJiFLLmhhc093blByb3BlcnR5KGMpJiYoZVtjXT1iW2NdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1kO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGs9QXJyYXkoZiksbD0wO2w8ZjtsKyspa1tsXT1hcmd1bWVudHNbbCsyXTtlLmNoaWxkcmVuPWt9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGMgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWVbY10mJihlW2NdPWZbY10pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpJLmN1cnJlbnR9fVxuZnVuY3Rpb24gTShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixkLGMpe2lmKFAubGVuZ3RoKXt2YXIgZT1QLnBvcCgpO2UucmVzdWx0PWE7ZS5rZXlQcmVmaXg9YjtlLmZ1bmM9ZDtlLmNvbnRleHQ9YztlLmNvdW50PTA7cmV0dXJuIGV9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj16JiZhW3pdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZT1hLm5leHQoKSkuZG9uZTspZT1lLnZhbHVlLGY9YitUKGUsaCsrKSxnKz1TKGUsZixkLGMpO2Vsc2VcIm9iamVjdFwiPT09ZSYmKGQ9XCJcIithLEIoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmQsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGQpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixkKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBWKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGFhKGEsYixkKXt2YXIgYz1hLnJlc3VsdCxlPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1coYSxjLGQsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTihhKSYmKGE9TShhLGUrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpK2QpKSxjLnB1c2goYSkpfWZ1bmN0aW9uIFcoYSxiLGQsYyxlKXt2YXIgZz1cIlwiO251bGwhPWQmJihnPShcIlwiK2QpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIik7Yj1RKGIsZyxjLGUpO1UoYSxhYSxiKTtSKGIpfWZ1bmN0aW9uIGJhKGEsYil7dmFyIGQ9SS5jdXJyZW50RGlzcGF0Y2hlcjtudWxsPT09ZD9CKFwiMjc3XCIpOnZvaWQgMDtyZXR1cm4gZC5yZWFkQ29udGV4dChhLGIpfVxudmFyIFg9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGQpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGM9W107VyhhLGMsbnVsbCxiLGQpO3JldHVybiBjfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO2I9UShudWxsLG51bGwsYixkKTtVKGEsVixiKTtSKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVShhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1coYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtOKGEpP3ZvaWQgMDpCKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpFLFB1cmVDb21wb25lbnQ6RyxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6Yixcbl9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbCx1bnN0YWJsZV9yZWFkOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07YS5Db25zdW1lcj1hO2EudW5zdGFibGVfcmVhZD1iYS5iaW5kKG51bGwsYSk7cmV0dXJuIGF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxGcmFnbWVudDpyLFN0cmljdE1vZGU6dCx1bnN0YWJsZV9Bc3luY01vZGU6eCx1bnN0YWJsZV9Qcm9maWxlcjp1LGNyZWF0ZUVsZW1lbnQ6TCxjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGQpe251bGw9PT1hfHx2b2lkIDA9PT1hP0IoXCIyNjdcIixhKTp2b2lkIDA7dmFyIGM9dm9pZCAwLGU9bSh7fSxhLnByb3BzKSxnPWEua2V5LGg9YS5yZWYsZj1hLl9vd25lcjtpZihudWxsIT1iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1JLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTtcbnZhciBrPXZvaWQgMDthLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMmJihrPWEudHlwZS5kZWZhdWx0UHJvcHMpO2ZvcihjIGluIGIpSi5jYWxsKGIsYykmJiFLLmhhc093blByb3BlcnR5KGMpJiYoZVtjXT12b2lkIDA9PT1iW2NdJiZ2b2lkIDAhPT1rP2tbY106YltjXSl9Yz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWMpZS5jaGlsZHJlbj1kO2Vsc2UgaWYoMTxjKXtrPUFycmF5KGMpO2Zvcih2YXIgbD0wO2w8YztsKyspa1tsXT1hcmd1bWVudHNbbCsyXTtlLmNoaWxkcmVuPWt9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmcscmVmOmgscHJvcHM6ZSxfb3duZXI6Zn19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9TC5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50Ok4sdmVyc2lvbjpcIjE2LjUuMlwiLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpJLFxuYXNzaWduOm19fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHR8fFo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuNS4yXG4gKiBzY2hlZHVsZS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgYz1udWxsLGU9ITEsZj0hMSxnPVwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3csbD17dGltZVJlbWFpbmluZzpnP2Z1bmN0aW9uKCl7dmFyIGE9aCgpLXBlcmZvcm1hbmNlLm5vdygpO3JldHVybiAwPGE/YTowfTpmdW5jdGlvbigpe3ZhciBhPWgoKS1EYXRlLm5vdygpO3JldHVybiAwPGE/YTowfSxkaWRUaW1lb3V0OiExfTtmdW5jdGlvbiBtKCl7aWYoIWUpe3ZhciBhPWMudGltZXNPdXRBdDtmP24oKTpmPSEwO3AocSxhKX19ZnVuY3Rpb24gcigpe3ZhciBhPWMsYj1jLm5leHQ7aWYoYz09PWIpYz1udWxsO2Vsc2V7dmFyIGQ9Yy5wcmV2aW91cztjPWQubmV4dD1iO2IucHJldmlvdXM9ZH1hLm5leHQ9YS5wcmV2aW91cz1udWxsO2E9YS5jYWxsYmFjazthKGwpfVxuZnVuY3Rpb24gcShhKXtlPSEwO2wuZGlkVGltZW91dD1hO3RyeXtpZihhKWZvcig7bnVsbCE9PWM7KXt2YXIgYj1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKGMudGltZXNPdXRBdDw9Yil7ZG8gcigpO3doaWxlKG51bGwhPT1jJiZjLnRpbWVzT3V0QXQ8PWIpfWVsc2UgYnJlYWt9ZWxzZSBpZihudWxsIT09Yyl7ZG8gcigpO3doaWxlKG51bGwhPT1jJiYwPGgoKS1leHBvcnRzLnVuc3RhYmxlX25vdygpKX19ZmluYWxseXtlPSExLG51bGwhPT1jP20oYyk6Zj0hMX19XG52YXIgdD1EYXRlLHU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsdj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsdz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lP3JlcXVlc3RBbmltYXRpb25GcmFtZTp2b2lkIDAseD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2FuY2VsQW5pbWF0aW9uRnJhbWU/Y2FuY2VsQW5pbWF0aW9uRnJhbWU6dm9pZCAwLHksejtmdW5jdGlvbiBBKGEpe3k9dyhmdW5jdGlvbihiKXt2KHopO2EoYil9KTt6PXUoZnVuY3Rpb24oKXt4KHkpO2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LDEwMCl9aWYoZyl7dmFyIEI9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gQi5ub3coKX19ZWxzZSBleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB0Lm5vdygpfTt2YXIgcCxuLGg7XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdyl7dmFyIEM9LTE7cD1mdW5jdGlvbihhKXtDPXNldFRpbWVvdXQoYSwwLCEwKX07bj1mdW5jdGlvbigpe2NsZWFyVGltZW91dChDKX07aD1mdW5jdGlvbigpe3JldHVybiAwfX1lbHNlIGlmKHdpbmRvdy5fc2NoZWRNb2NrKXt2YXIgRD13aW5kb3cuX3NjaGVkTW9jaztwPURbMF07bj1EWzFdO2g9RFsyXX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB3JiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB4JiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIikpO1xudmFyIEU9bnVsbCxGPSExLEc9LTEsSD0hMSxJPSExLEo9MCxLPTMzLEw9MzM7aD1mdW5jdGlvbigpe3JldHVybiBKfTt2YXIgTT1cIl9fcmVhY3RJZGxlQ2FsbGJhY2skXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsZnVuY3Rpb24oYSl7aWYoYS5zb3VyY2U9PT13aW5kb3cmJmEuZGF0YT09PU0pe0Y9ITE7dmFyIGI9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTthPSExO2lmKDA+PUotYilpZigtMSE9PUcmJkc8PWIpYT0hMDtlbHNle0h8fChIPSEwLEEoTikpO3JldHVybn1HPS0xO2I9RTtFPW51bGw7aWYobnVsbCE9PWIpe0k9ITA7dHJ5e2IoYSl9ZmluYWxseXtJPSExfX19fSwhMSk7dmFyIE49ZnVuY3Rpb24oYSl7SD0hMTt2YXIgYj1hLUorTDtiPEwmJks8TD8oOD5iJiYoYj04KSxMPWI8Sz9LOmIpOks9YjtKPWErTDtGfHwoRj0hMCx3aW5kb3cucG9zdE1lc3NhZ2UoTSxcIipcIikpfTtwPWZ1bmN0aW9uKGEsXG5iKXtFPWE7Rz1iO0k/d2luZG93LnBvc3RNZXNzYWdlKE0sXCIqXCIpOkh8fChIPSEwLEEoTikpfTtuPWZ1bmN0aW9uKCl7RT1udWxsO0Y9ITE7Rz0tMX19ZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZVdvcms9ZnVuY3Rpb24oYSxiKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO2I9dm9pZCAwIT09YiYmbnVsbCE9PWImJm51bGwhPT1iLnRpbWVvdXQmJnZvaWQgMCE9PWIudGltZW91dD9kK2IudGltZW91dDpkKzVFMzthPXtjYWxsYmFjazphLHRpbWVzT3V0QXQ6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH07aWYobnVsbD09PWMpYz1hLm5leHQ9YS5wcmV2aW91cz1hLG0oYyk7ZWxzZXtkPW51bGw7dmFyIGs9Yztkb3tpZihrLnRpbWVzT3V0QXQ+Yil7ZD1rO2JyZWFrfWs9ay5uZXh0fXdoaWxlKGshPT1jKTtudWxsPT09ZD9kPWM6ZD09PWMmJihjPWEsbShjKSk7Yj1kLnByZXZpb3VzO2IubmV4dD1kLnByZXZpb3VzPWE7YS5uZXh0PWQ7YS5wcmV2aW91cz1ifXJldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfY2FuY2VsU2NoZWR1bGVkV29yaz1mdW5jdGlvbihhKXt2YXIgYj1hLm5leHQ7aWYobnVsbCE9PWIpe2lmKGI9PT1hKWM9bnVsbDtlbHNle2E9PT1jJiYoYz1iKTt2YXIgZD1hLnByZXZpb3VzO2QubmV4dD1iO2IucHJldmlvdXM9ZH1hLm5leHQ9YS5wcmV2aW91cz1udWxsfX07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vY2Fyb3VzZWwubWluLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vY2Fyb3VzZWwubWluLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jYXJvdXNlbC5taW4uY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0FwcC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9BcHAuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0FwcC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL05hdmlnYXRpb24uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vTmF2aWdhdGlvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vTmF2aWdhdGlvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1Byb2plY3REaXNwbGF5LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1Byb2plY3REaXNwbGF5LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9Qcm9qZWN0RGlzcGxheS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1Byb2ZpbGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vUHJvZmlsZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vUHJvZmlsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1Zpc3VhbHMuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vVmlzdWFscy5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vVmlzdWFscy5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Jhc2Uuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmFzZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYmFzZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc2V0LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc2V0LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZXNldC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0ge307XG5cbnZhclx0bWVtb2l6ZSA9IGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbztcblxuXHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikgbWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0cmV0dXJuIG1lbW87XG5cdH07XG59O1xuXG52YXIgaXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuXHQvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuXHQvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG5cdC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcblx0Ly8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG5cdC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuXHRyZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG59KTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uICh0YXJnZXQsIHBhcmVudCkge1xuICBpZiAocGFyZW50KXtcbiAgICByZXR1cm4gcGFyZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbiAgfVxuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xufTtcblxudmFyIGdldEVsZW1lbnQgPSAoZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vID0ge307XG5cblx0cmV0dXJuIGZ1bmN0aW9uKHRhcmdldCwgcGFyZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgcGFzc2luZyBmdW5jdGlvbiBpbiBvcHRpb25zLCB0aGVuIHVzZSBpdCBmb3IgcmVzb2x2ZSBcImhlYWRcIiBlbGVtZW50LlxuICAgICAgICAgICAgICAgIC8vIFVzZWZ1bCBmb3IgU2hhZG93IFJvb3Qgc3R5bGUgaS5lXG4gICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgIC8vICAgaW5zZXJ0SW50bzogZnVuY3Rpb24gKCkgeyByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb29cIikuc2hhZG93Um9vdCB9XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBnZXRUYXJnZXQuY2FsbCh0aGlzLCB0YXJnZXQsIHBhcmVudCk7XG5cdFx0XHQvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXHRcdFx0aWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1t0YXJnZXRdXG5cdH07XG59KSgpO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlLCB0YXJnZXQpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXG5cdGlmKG9wdGlvbnMuYXR0cnMubm9uY2UgPT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBub25jZSA9IGdldE5vbmNlKCk7XG5cdFx0aWYgKG5vbmNlKSB7XG5cdFx0XHRvcHRpb25zLmF0dHJzLm5vbmNlID0gbm9uY2U7XG5cdFx0fVxuXHR9XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXHRvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXG5cdGFkZEF0dHJzKGxpbmssIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayk7XG5cblx0cmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJzIChlbCwgYXR0cnMpIHtcblx0T2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gZ2V0Tm9uY2UoKSB7XG5cdGlmICh0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHRyZXR1cm4gX193ZWJwYWNrX25vbmNlX187XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsInZhciBtYXAgPSB7XG5cdFwiLi9jYXJvdXNlbC0xLmpwZ1wiOiA3MjM0LFxuXHRcIi4vY2Fyb3VzZWwtMi5qcGdcIjogNzg0Myxcblx0XCIuL2Nhcm91c2VsLTMuanBnXCI6IDY4NDJcbn07XG5cblxuZnVuY3Rpb24gd2VicGFja0NvbnRleHQocmVxKSB7XG5cdHZhciBpZCA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpO1xuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhpZCk7XG59XG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKSB7XG5cdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8obWFwLCByZXEpKSB7XG5cdFx0dmFyIGUgPSBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiICsgcmVxICsgXCInXCIpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBtYXBbcmVxXTtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSAxMTY4OyIsInZhciBtYXAgPSB7XG5cdFwiLi9nYW1lcy9hc3Rlcm9pZHMuanBnXCI6IDU3ODUsXG5cdFwiLi9nYW1lcy9maXNoaW5nLWVudGVycHJpc2VzLmpwZ1wiOiA0NTEwLFxuXHRcIi4vZ2FtZXMvb3ZlcnNlZXIuanBnXCI6IDczMTEsXG5cdFwiLi9wb3J0Zm9saW8vY3ludHJhc2FmZS5qcGdcIjogMjkxNCxcblx0XCIuL3BvcnRmb2xpby9mYW5saXRlLWVuZ2luZWVyaW5nLmpwZ1wiOiA4NDI4LFxuXHRcIi4vcG9ydGZvbGlvL2lvdGEtb25saW5lLmpwZ1wiOiA5NTczLFxuXHRcIi4vcG9ydGZvbGlvL2xvdmVsb3R1cy5qcGdcIjogMzU3MCxcblx0XCIuL3BvcnRmb2xpby9vcGluaW9uYXRlZC5qcGdcIjogMTcwMSxcblx0XCIuL3BvcnRmb2xpby9zaW5lc3RhdHMuanBnXCI6IDgwMDQsXG5cdFwiLi9wb3J0Zm9saW8vc3Vkby1uZXdzLmpwZ1wiOiA3NTgzLFxuXHRcIi4vcHJvZmlsZS9oZWFkc2hvdC5qcGdcIjogNDYyNCxcblx0XCIuL3Zpc3VhbHMvYWJzdHJhY3Qtc3F1YXJlcy5qcGdcIjogOTg0MCxcblx0XCIuL3Zpc3VhbHMvYm91bmNpbmctbGFzZXIuanBnXCI6IDY2MDAsXG5cdFwiLi92aXN1YWxzL2Nhcm91c2VsL2Nhcm91c2VsLTEuanBnXCI6IDcyMzQsXG5cdFwiLi92aXN1YWxzL2Nhcm91c2VsL2Nhcm91c2VsLTIuanBnXCI6IDc4NDMsXG5cdFwiLi92aXN1YWxzL2Nhcm91c2VsL2Nhcm91c2VsLTMuanBnXCI6IDY4NDIsXG5cdFwiLi92aXN1YWxzL2N1YmljLWF1ZGlvLXZpc3VhbGl6ZXIuanBnXCI6IDY2NDEsXG5cdFwiLi92aXN1YWxzL2ZhbGxpbmctbGlnaHRzLmpwZ1wiOiA0OTI4LFxuXHRcIi4vdmlzdWFscy9mYWxsaW5nLXRleHQuanBnXCI6IDg1NzAsXG5cdFwiLi92aXN1YWxzL2Z1dHVyaXN0aWMtYXVkaW8tdmlzdWFsaXplci5qcGdcIjogMjMzMixcblx0XCIuL3Zpc3VhbHMvZ2VvbWV0cmljLWNvbnN0ZWxsYXRpb25zLmpwZ1wiOiAyMTEsXG5cdFwiLi92aXN1YWxzL2dyYWRpZW50LWNpcmN1aXQuanBnXCI6IDQ5MzAsXG5cdFwiLi92aXN1YWxzL21ldGVvci1zaG93ZXIuanBnXCI6IDYyNjEsXG5cdFwiLi92aXN1YWxzL3JhaW5ib3ctYmxhY2staG9sZS5qcGdcIjogOTY5NCxcblx0XCIuL3Zpc3VhbHMvcmFpbmRyb3BzLmpwZ1wiOiAxMjAsXG5cdFwiLi92aXN1YWxzL3JhbmRvbS13YWxrZXJzLmpwZ1wiOiAxNzAwLFxuXHRcIi4vdmlzdWFscy9yZWFjaGluZy1hcm1zLmpwZ1wiOiAzNDk2LFxuXHRcIi4vdmlzdWFscy9yb3RhdGluZy1zcGlyYWwuanBnXCI6IDYwNjFcbn07XG5cblxuZnVuY3Rpb24gd2VicGFja0NvbnRleHQocmVxKSB7XG5cdHZhciBpZCA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpO1xuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhpZCk7XG59XG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKSB7XG5cdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8obWFwLCByZXEpKSB7XG5cdFx0dmFyIGUgPSBuZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiICsgcmVxICsgXCInXCIpO1xuXHRcdGUuY29kZSA9ICdNT0RVTEVfTk9UX0ZPVU5EJztcblx0XHR0aHJvdyBlO1xuXHR9XG5cdHJldHVybiBtYXBbcmVxXTtcbn1cbndlYnBhY2tDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQ29udGV4dEtleXMoKSB7XG5cdHJldHVybiBPYmplY3Qua2V5cyhtYXApO1xufTtcbndlYnBhY2tDb250ZXh0LnJlc29sdmUgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmU7XG5tb2R1bGUuZXhwb3J0cyA9IHdlYnBhY2tDb250ZXh0O1xud2VicGFja0NvbnRleHQuaWQgPSA5OTA7IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdGlmIChjYWNoZWRNb2R1bGUuZXJyb3IgIT09IHVuZGVmaW5lZCkgdGhyb3cgY2FjaGVkTW9kdWxlLmVycm9yO1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0bG9hZGVkOiBmYWxzZSxcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHR0cnkge1xuXHRcdHZhciBleGVjT3B0aW9ucyA9IHsgaWQ6IG1vZHVsZUlkLCBtb2R1bGU6IG1vZHVsZSwgZmFjdG9yeTogX193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0sIHJlcXVpcmU6IF9fd2VicGFja19yZXF1aXJlX18gfTtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmkuZm9yRWFjaChmdW5jdGlvbihoYW5kbGVyKSB7IGhhbmRsZXIoZXhlY09wdGlvbnMpOyB9KTtcblx0XHRtb2R1bGUgPSBleGVjT3B0aW9ucy5tb2R1bGU7XG5cdFx0ZXhlY09wdGlvbnMuZmFjdG9yeS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBleGVjT3B0aW9ucy5yZXF1aXJlKTtcblx0fSBjYXRjaChlKSB7XG5cdFx0bW9kdWxlLmVycm9yID0gZTtcblx0XHR0aHJvdyBlO1xuXHR9XG5cblx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuXHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4vLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuX193ZWJwYWNrX3JlcXVpcmVfXy5jID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fO1xuXG4vLyBleHBvc2UgdGhlIG1vZHVsZSBleGVjdXRpb24gaW50ZXJjZXB0b3Jcbl9fd2VicGFja19yZXF1aXJlX18uaSA9IFtdO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIi8vIFRoaXMgZnVuY3Rpb24gYWxsb3cgdG8gcmVmZXJlbmNlIGFsbCBjaHVua3Ncbl9fd2VicGFja19yZXF1aXJlX18uaHUgPSAoY2h1bmtJZCkgPT4ge1xuXHQvLyByZXR1cm4gdXJsIGZvciBmaWxlbmFtZXMgYmFzZWQgb24gdGVtcGxhdGVcblx0cmV0dXJuIFwiXCIgKyBjaHVua0lkICsgXCIuXCIgKyBfX3dlYnBhY2tfcmVxdWlyZV9fLmgoKSArIFwiLmhvdC11cGRhdGUuanNcIjtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5obXJGID0gKCkgPT4gKFwibWFpbi5cIiArIF9fd2VicGFja19yZXF1aXJlX18uaCgpICsgXCIuaG90LXVwZGF0ZS5qc29uXCIpOyIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjE1OTQzNDYyM2MxZWJhMDUzYThjXCIpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmhtZCA9IChtb2R1bGUpID0+IHtcblx0bW9kdWxlID0gT2JqZWN0LmNyZWF0ZShtb2R1bGUpO1xuXHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsICdleHBvcnRzJywge1xuXHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0c2V0OiAoKSA9PiB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ0VTIE1vZHVsZXMgbWF5IG5vdCBhc3NpZ24gbW9kdWxlLmV4cG9ydHMgb3IgZXhwb3J0cy4qLCBVc2UgRVNNIGV4cG9ydCBzeW50YXgsIGluc3RlYWQ6ICcgKyBtb2R1bGUuaWQpO1xuXHRcdH1cblx0fSk7XG5cdHJldHVybiBtb2R1bGU7XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgY3VycmVudE1vZHVsZURhdGEgPSB7fTtcbnZhciBpbnN0YWxsZWRNb2R1bGVzID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jO1xuXG4vLyBtb2R1bGUgYW5kIHJlcXVpcmUgY3JlYXRpb25cbnZhciBjdXJyZW50Q2hpbGRNb2R1bGU7XG52YXIgY3VycmVudFBhcmVudHMgPSBbXTtcblxuLy8gc3RhdHVzXG52YXIgcmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzID0gW107XG52YXIgY3VycmVudFN0YXR1cyA9IFwiaWRsZVwiO1xuXG4vLyB3aGlsZSBkb3dubG9hZGluZ1xudmFyIGJsb2NraW5nUHJvbWlzZXM7XG5cbi8vIFRoZSB1cGRhdGUgaW5mb1xudmFyIGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzO1xudmFyIHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcztcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckQgPSBjdXJyZW50TW9kdWxlRGF0YTtcblxuX193ZWJwYWNrX3JlcXVpcmVfXy5pLnB1c2goZnVuY3Rpb24gKG9wdGlvbnMpIHtcblx0dmFyIG1vZHVsZSA9IG9wdGlvbnMubW9kdWxlO1xuXHR2YXIgcmVxdWlyZSA9IGNyZWF0ZVJlcXVpcmUob3B0aW9ucy5yZXF1aXJlLCBvcHRpb25zLmlkKTtcblx0bW9kdWxlLmhvdCA9IGNyZWF0ZU1vZHVsZUhvdE9iamVjdChvcHRpb25zLmlkLCBtb2R1bGUpO1xuXHRtb2R1bGUucGFyZW50cyA9IGN1cnJlbnRQYXJlbnRzO1xuXHRtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0Y3VycmVudFBhcmVudHMgPSBbXTtcblx0b3B0aW9ucy5yZXF1aXJlID0gcmVxdWlyZTtcbn0pO1xuXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmhtckMgPSB7fTtcbl9fd2VicGFja19yZXF1aXJlX18uaG1ySSA9IHt9O1xuXG5mdW5jdGlvbiBjcmVhdGVSZXF1aXJlKHJlcXVpcmUsIG1vZHVsZUlkKSB7XG5cdHZhciBtZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuXHRpZiAoIW1lKSByZXR1cm4gcmVxdWlyZTtcblx0dmFyIGZuID0gZnVuY3Rpb24gKHJlcXVlc3QpIHtcblx0XHRpZiAobWUuaG90LmFjdGl2ZSkge1xuXHRcdFx0aWYgKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0pIHtcblx0XHRcdFx0dmFyIHBhcmVudHMgPSBpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdLnBhcmVudHM7XG5cdFx0XHRcdGlmIChwYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpID09PSAtMSkge1xuXHRcdFx0XHRcdHBhcmVudHMucHVzaChtb2R1bGVJZCk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGN1cnJlbnRQYXJlbnRzID0gW21vZHVsZUlkXTtcblx0XHRcdFx0Y3VycmVudENoaWxkTW9kdWxlID0gcmVxdWVzdDtcblx0XHRcdH1cblx0XHRcdGlmIChtZS5jaGlsZHJlbi5pbmRleE9mKHJlcXVlc3QpID09PSAtMSkge1xuXHRcdFx0XHRtZS5jaGlsZHJlbi5wdXNoKHJlcXVlc3QpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjb25zb2xlLndhcm4oXG5cdFx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICtcblx0XHRcdFx0XHRyZXF1ZXN0ICtcblx0XHRcdFx0XHRcIikgZnJvbSBkaXNwb3NlZCBtb2R1bGUgXCIgK1xuXHRcdFx0XHRcdG1vZHVsZUlkXG5cdFx0XHQpO1xuXHRcdFx0Y3VycmVudFBhcmVudHMgPSBbXTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlcXVpcmUocmVxdWVzdCk7XG5cdH07XG5cdHZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSBmdW5jdGlvbiAobmFtZSkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHJldHVybiByZXF1aXJlW25hbWVdO1xuXHRcdFx0fSxcblx0XHRcdHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG5cdFx0XHRcdHJlcXVpcmVbbmFtZV0gPSB2YWx1ZTtcblx0XHRcdH1cblx0XHR9O1xuXHR9O1xuXHRmb3IgKHZhciBuYW1lIGluIHJlcXVpcmUpIHtcblx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHJlcXVpcmUsIG5hbWUpICYmIG5hbWUgIT09IFwiZVwiKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sIG5hbWUsIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcihuYW1lKSk7XG5cdFx0fVxuXHR9XG5cdGZuLmUgPSBmdW5jdGlvbiAoY2h1bmtJZCkge1xuXHRcdHJldHVybiB0cmFja0Jsb2NraW5nUHJvbWlzZShyZXF1aXJlLmUoY2h1bmtJZCkpO1xuXHR9O1xuXHRyZXR1cm4gZm47XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU1vZHVsZUhvdE9iamVjdChtb2R1bGVJZCwgbWUpIHtcblx0dmFyIF9tYWluID0gY3VycmVudENoaWxkTW9kdWxlICE9PSBtb2R1bGVJZDtcblx0dmFyIGhvdCA9IHtcblx0XHQvLyBwcml2YXRlIHN0dWZmXG5cdFx0X2FjY2VwdGVkRGVwZW5kZW5jaWVzOiB7fSxcblx0XHRfYWNjZXB0ZWRFcnJvckhhbmRsZXJzOiB7fSxcblx0XHRfZGVjbGluZWREZXBlbmRlbmNpZXM6IHt9LFxuXHRcdF9zZWxmQWNjZXB0ZWQ6IGZhbHNlLFxuXHRcdF9zZWxmRGVjbGluZWQ6IGZhbHNlLFxuXHRcdF9zZWxmSW52YWxpZGF0ZWQ6IGZhbHNlLFxuXHRcdF9kaXNwb3NlSGFuZGxlcnM6IFtdLFxuXHRcdF9tYWluOiBfbWFpbixcblx0XHRfcmVxdWlyZVNlbGY6IGZ1bmN0aW9uICgpIHtcblx0XHRcdGN1cnJlbnRQYXJlbnRzID0gbWUucGFyZW50cy5zbGljZSgpO1xuXHRcdFx0Y3VycmVudENoaWxkTW9kdWxlID0gX21haW4gPyB1bmRlZmluZWQgOiBtb2R1bGVJZDtcblx0XHRcdF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpO1xuXHRcdH0sXG5cblx0XHQvLyBNb2R1bGUgQVBJXG5cdFx0YWN0aXZlOiB0cnVlLFxuXHRcdGFjY2VwdDogZnVuY3Rpb24gKGRlcCwgY2FsbGJhY2ssIGVycm9ySGFuZGxlcikge1xuXHRcdFx0aWYgKGRlcCA9PT0gdW5kZWZpbmVkKSBob3QuX3NlbGZBY2NlcHRlZCA9IHRydWU7XG5cdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcImZ1bmN0aW9uXCIpIGhvdC5fc2VsZkFjY2VwdGVkID0gZGVwO1xuXHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIiAmJiBkZXAgIT09IG51bGwpIHtcblx0XHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkZXAubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbiAoKSB7fTtcblx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRXJyb3JIYW5kbGVyc1tkZXBbaV1dID0gZXJyb3JIYW5kbGVyO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcF0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbiAoKSB7fTtcblx0XHRcdFx0aG90Ll9hY2NlcHRlZEVycm9ySGFuZGxlcnNbZGVwXSA9IGVycm9ySGFuZGxlcjtcblx0XHRcdH1cblx0XHR9LFxuXHRcdGRlY2xpbmU6IGZ1bmN0aW9uIChkZXApIHtcblx0XHRcdGlmIChkZXAgPT09IHVuZGVmaW5lZCkgaG90Ll9zZWxmRGVjbGluZWQgPSB0cnVlO1xuXHRcdFx0ZWxzZSBpZiAodHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIiAmJiBkZXAgIT09IG51bGwpXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKVxuXHRcdFx0XHRcdGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IHRydWU7XG5cdFx0XHRlbHNlIGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwXSA9IHRydWU7XG5cdFx0fSxcblx0XHRkaXNwb3NlOiBmdW5jdGlvbiAoY2FsbGJhY2spIHtcblx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuXHRcdH0sXG5cdFx0YWRkRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuXHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XG5cdFx0fSxcblx0XHRyZW1vdmVEaXNwb3NlSGFuZGxlcjogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG5cdFx0XHR2YXIgaWR4ID0gaG90Ll9kaXNwb3NlSGFuZGxlcnMuaW5kZXhPZihjYWxsYmFjayk7XG5cdFx0XHRpZiAoaWR4ID49IDApIGhvdC5fZGlzcG9zZUhhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xuXHRcdH0sXG5cdFx0aW52YWxpZGF0ZTogZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhpcy5fc2VsZkludmFsaWRhdGVkID0gdHJ1ZTtcblx0XHRcdHN3aXRjaCAoY3VycmVudFN0YXR1cykge1xuXHRcdFx0XHRjYXNlIFwiaWRsZVwiOlxuXHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzID0gW107XG5cdFx0XHRcdFx0T2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1ySVtrZXldKFxuXHRcdFx0XHRcdFx0XHRtb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnNcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0c2V0U3RhdHVzKFwicmVhZHlcIik7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJyZWFkeVwiOlxuXHRcdFx0XHRcdE9iamVjdC5rZXlzKF9fd2VicGFja19yZXF1aXJlX18uaG1ySSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtcklba2V5XShcblx0XHRcdFx0XHRcdFx0bW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwicHJlcGFyZVwiOlxuXHRcdFx0XHRjYXNlIFwiY2hlY2tcIjpcblx0XHRcdFx0Y2FzZSBcImRpc3Bvc2VcIjpcblx0XHRcdFx0Y2FzZSBcImFwcGx5XCI6XG5cdFx0XHRcdFx0KHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyA9IHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyB8fCBbXSkucHVzaChcblx0XHRcdFx0XHRcdG1vZHVsZUlkXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHQvLyBpZ25vcmUgcmVxdWVzdHMgaW4gZXJyb3Igc3RhdGVzXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIE1hbmFnZW1lbnQgQVBJXG5cdFx0Y2hlY2s6IGhvdENoZWNrLFxuXHRcdGFwcGx5OiBob3RBcHBseSxcblx0XHRzdGF0dXM6IGZ1bmN0aW9uIChsKSB7XG5cdFx0XHRpZiAoIWwpIHJldHVybiBjdXJyZW50U3RhdHVzO1xuXHRcdFx0cmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XG5cdFx0fSxcblx0XHRhZGRTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbiAobCkge1xuXHRcdFx0cmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XG5cdFx0fSxcblx0XHRyZW1vdmVTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbiAobCkge1xuXHRcdFx0dmFyIGlkeCA9IHJlZ2lzdGVyZWRTdGF0dXNIYW5kbGVycy5pbmRleE9mKGwpO1xuXHRcdFx0aWYgKGlkeCA+PSAwKSByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMuc3BsaWNlKGlkeCwgMSk7XG5cdFx0fSxcblxuXHRcdC8vaW5oZXJpdCBmcm9tIHByZXZpb3VzIGRpc3Bvc2UgY2FsbFxuXHRcdGRhdGE6IGN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXVxuXHR9O1xuXHRjdXJyZW50Q2hpbGRNb2R1bGUgPSB1bmRlZmluZWQ7XG5cdHJldHVybiBob3Q7XG59XG5cbmZ1bmN0aW9uIHNldFN0YXR1cyhuZXdTdGF0dXMpIHtcblx0Y3VycmVudFN0YXR1cyA9IG5ld1N0YXR1cztcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCByZWdpc3RlcmVkU3RhdHVzSGFuZGxlcnMubGVuZ3RoOyBpKyspXG5cdFx0cmVnaXN0ZXJlZFN0YXR1c0hhbmRsZXJzW2ldLmNhbGwobnVsbCwgbmV3U3RhdHVzKTtcbn1cblxuZnVuY3Rpb24gdHJhY2tCbG9ja2luZ1Byb21pc2UocHJvbWlzZSkge1xuXHRzd2l0Y2ggKGN1cnJlbnRTdGF0dXMpIHtcblx0XHRjYXNlIFwicmVhZHlcIjpcblx0XHRcdHNldFN0YXR1cyhcInByZXBhcmVcIik7XG5cdFx0XHRibG9ja2luZ1Byb21pc2VzLnB1c2gocHJvbWlzZSk7XG5cdFx0XHR3YWl0Rm9yQmxvY2tpbmdQcm9taXNlcyhmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdHNldFN0YXR1cyhcInJlYWR5XCIpO1xuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gcHJvbWlzZTtcblx0XHRjYXNlIFwicHJlcGFyZVwiOlxuXHRcdFx0YmxvY2tpbmdQcm9taXNlcy5wdXNoKHByb21pc2UpO1xuXHRcdFx0cmV0dXJuIHByb21pc2U7XG5cdFx0ZGVmYXVsdDpcblx0XHRcdHJldHVybiBwcm9taXNlO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHdhaXRGb3JCbG9ja2luZ1Byb21pc2VzKGZuKSB7XG5cdGlmIChibG9ja2luZ1Byb21pc2VzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIGZuKCk7XG5cdHZhciBibG9ja2VyID0gYmxvY2tpbmdQcm9taXNlcztcblx0YmxvY2tpbmdQcm9taXNlcyA9IFtdO1xuXHRyZXR1cm4gUHJvbWlzZS5hbGwoYmxvY2tlcikudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuIHdhaXRGb3JCbG9ja2luZ1Byb21pc2VzKGZuKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGhvdENoZWNrKGFwcGx5T25VcGRhdGUpIHtcblx0aWYgKGN1cnJlbnRTdGF0dXMgIT09IFwiaWRsZVwiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiY2hlY2soKSBpcyBvbmx5IGFsbG93ZWQgaW4gaWRsZSBzdGF0dXNcIik7XG5cdH1cblx0c2V0U3RhdHVzKFwiY2hlY2tcIik7XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLmhtck0oKS50aGVuKGZ1bmN0aW9uICh1cGRhdGUpIHtcblx0XHRpZiAoIXVwZGF0ZSkge1xuXHRcdFx0c2V0U3RhdHVzKGFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzKCkgPyBcInJlYWR5XCIgOiBcImlkbGVcIik7XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9XG5cblx0XHRzZXRTdGF0dXMoXCJwcmVwYXJlXCIpO1xuXG5cdFx0dmFyIHVwZGF0ZWRNb2R1bGVzID0gW107XG5cdFx0YmxvY2tpbmdQcm9taXNlcyA9IFtdO1xuXHRcdGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzID0gW107XG5cblx0XHRyZXR1cm4gUHJvbWlzZS5hbGwoXG5cdFx0XHRPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckMpLnJlZHVjZShmdW5jdGlvbiAoXG5cdFx0XHRcdHByb21pc2VzLFxuXHRcdFx0XHRrZXlcblx0XHRcdCkge1xuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtckNba2V5XShcblx0XHRcdFx0XHR1cGRhdGUuYyxcblx0XHRcdFx0XHR1cGRhdGUucixcblx0XHRcdFx0XHR1cGRhdGUubSxcblx0XHRcdFx0XHRwcm9taXNlcyxcblx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVycyxcblx0XHRcdFx0XHR1cGRhdGVkTW9kdWxlc1xuXHRcdFx0XHQpO1xuXHRcdFx0XHRyZXR1cm4gcHJvbWlzZXM7XG5cdFx0XHR9LFxuXHRcdFx0W10pXG5cdFx0KS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiB3YWl0Rm9yQmxvY2tpbmdQcm9taXNlcyhmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdGlmIChhcHBseU9uVXBkYXRlKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGludGVybmFsQXBwbHkoYXBwbHlPblVwZGF0ZSk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c2V0U3RhdHVzKFwicmVhZHlcIik7XG5cblx0XHRcdFx0XHRyZXR1cm4gdXBkYXRlZE1vZHVsZXM7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gaG90QXBwbHkob3B0aW9ucykge1xuXHRpZiAoY3VycmVudFN0YXR1cyAhPT0gXCJyZWFkeVwiKSB7XG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiYXBwbHkoKSBpcyBvbmx5IGFsbG93ZWQgaW4gcmVhZHkgc3RhdHVzXCIpO1xuXHRcdH0pO1xuXHR9XG5cdHJldHVybiBpbnRlcm5hbEFwcGx5KG9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiBpbnRlcm5hbEFwcGx5KG9wdGlvbnMpIHtcblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0YXBwbHlJbnZhbGlkYXRlZE1vZHVsZXMoKTtcblxuXHR2YXIgcmVzdWx0cyA9IGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzLm1hcChmdW5jdGlvbiAoaGFuZGxlcikge1xuXHRcdHJldHVybiBoYW5kbGVyKG9wdGlvbnMpO1xuXHR9KTtcblx0Y3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMgPSB1bmRlZmluZWQ7XG5cblx0dmFyIGVycm9ycyA9IHJlc3VsdHNcblx0XHQubWFwKGZ1bmN0aW9uIChyKSB7XG5cdFx0XHRyZXR1cm4gci5lcnJvcjtcblx0XHR9KVxuXHRcdC5maWx0ZXIoQm9vbGVhbik7XG5cblx0aWYgKGVycm9ycy5sZW5ndGggPiAwKSB7XG5cdFx0c2V0U3RhdHVzKFwiYWJvcnRcIik7XG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhyb3cgZXJyb3JzWzBdO1xuXHRcdH0pO1xuXHR9XG5cblx0Ly8gTm93IGluIFwiZGlzcG9zZVwiIHBoYXNlXG5cdHNldFN0YXR1cyhcImRpc3Bvc2VcIik7XG5cblx0cmVzdWx0cy5mb3JFYWNoKGZ1bmN0aW9uIChyZXN1bHQpIHtcblx0XHRpZiAocmVzdWx0LmRpc3Bvc2UpIHJlc3VsdC5kaXNwb3NlKCk7XG5cdH0pO1xuXG5cdC8vIE5vdyBpbiBcImFwcGx5XCIgcGhhc2Vcblx0c2V0U3RhdHVzKFwiYXBwbHlcIik7XG5cblx0dmFyIGVycm9yO1xuXHR2YXIgcmVwb3J0RXJyb3IgPSBmdW5jdGlvbiAoZXJyKSB7XG5cdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG5cdH07XG5cblx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xuXHRyZXN1bHRzLmZvckVhY2goZnVuY3Rpb24gKHJlc3VsdCkge1xuXHRcdGlmIChyZXN1bHQuYXBwbHkpIHtcblx0XHRcdHZhciBtb2R1bGVzID0gcmVzdWx0LmFwcGx5KHJlcG9ydEVycm9yKTtcblx0XHRcdGlmIChtb2R1bGVzKSB7XG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKG1vZHVsZXNbaV0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcblxuXHQvLyBoYW5kbGUgZXJyb3JzIGluIGFjY2VwdCBoYW5kbGVycyBhbmQgc2VsZiBhY2NlcHRlZCBtb2R1bGUgbG9hZFxuXHRpZiAoZXJyb3IpIHtcblx0XHRzZXRTdGF0dXMoXCJmYWlsXCIpO1xuXHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdHRocm93IGVycm9yO1xuXHRcdH0pO1xuXHR9XG5cblx0aWYgKHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcykge1xuXHRcdHJldHVybiBpbnRlcm5hbEFwcGx5KG9wdGlvbnMpLnRoZW4oZnVuY3Rpb24gKGxpc3QpIHtcblx0XHRcdG91dGRhdGVkTW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChtb2R1bGVJZCkge1xuXHRcdFx0XHRpZiAobGlzdC5pbmRleE9mKG1vZHVsZUlkKSA8IDApIGxpc3QucHVzaChtb2R1bGVJZCk7XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiBsaXN0O1xuXHRcdH0pO1xuXHR9XG5cblx0c2V0U3RhdHVzKFwiaWRsZVwiKTtcblx0cmV0dXJuIFByb21pc2UucmVzb2x2ZShvdXRkYXRlZE1vZHVsZXMpO1xufVxuXG5mdW5jdGlvbiBhcHBseUludmFsaWRhdGVkTW9kdWxlcygpIHtcblx0aWYgKHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcykge1xuXHRcdGlmICghY3VycmVudFVwZGF0ZUFwcGx5SGFuZGxlcnMpIGN1cnJlbnRVcGRhdGVBcHBseUhhbmRsZXJzID0gW107XG5cdFx0T2JqZWN0LmtleXMoX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRcdHF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChtb2R1bGVJZCkge1xuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmhtcklba2V5XShcblx0XHRcdFx0XHRtb2R1bGVJZCxcblx0XHRcdFx0XHRjdXJyZW50VXBkYXRlQXBwbHlIYW5kbGVyc1xuXHRcdFx0XHQpO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdFx0cXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzID0gdW5kZWZpbmVkO1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIvXCI7IiwiLy8gbm8gYmFzZVVSSVxuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbnZhciBjdXJyZW50VXBkYXRlZE1vZHVsZXNMaXN0O1xudmFyIHdhaXRpbmdVcGRhdGVSZXNvbHZlcyA9IHt9O1xuZnVuY3Rpb24gbG9hZFVwZGF0ZUNodW5rKGNodW5rSWQpIHtcblx0cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcblx0XHR3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0gPSByZXNvbHZlO1xuXHRcdC8vIHN0YXJ0IHVwZGF0ZSBjaHVuayBsb2FkaW5nXG5cdFx0dmFyIHVybCA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIF9fd2VicGFja19yZXF1aXJlX18uaHUoY2h1bmtJZCk7XG5cdFx0Ly8gY3JlYXRlIGVycm9yIGJlZm9yZSBzdGFjayB1bndvdW5kIHRvIGdldCB1c2VmdWwgc3RhY2t0cmFjZSBsYXRlclxuXHRcdHZhciBlcnJvciA9IG5ldyBFcnJvcigpO1xuXHRcdHZhciBsb2FkaW5nRW5kZWQgPSAoZXZlbnQpID0+IHtcblx0XHRcdGlmKHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSkge1xuXHRcdFx0XHR3YWl0aW5nVXBkYXRlUmVzb2x2ZXNbY2h1bmtJZF0gPSB1bmRlZmluZWRcblx0XHRcdFx0dmFyIGVycm9yVHlwZSA9IGV2ZW50ICYmIChldmVudC50eXBlID09PSAnbG9hZCcgPyAnbWlzc2luZycgOiBldmVudC50eXBlKTtcblx0XHRcdFx0dmFyIHJlYWxTcmMgPSBldmVudCAmJiBldmVudC50YXJnZXQgJiYgZXZlbnQudGFyZ2V0LnNyYztcblx0XHRcdFx0ZXJyb3IubWVzc2FnZSA9ICdMb2FkaW5nIGhvdCB1cGRhdGUgY2h1bmsgJyArIGNodW5rSWQgKyAnIGZhaWxlZC5cXG4oJyArIGVycm9yVHlwZSArICc6ICcgKyByZWFsU3JjICsgJyknO1xuXHRcdFx0XHRlcnJvci5uYW1lID0gJ0NodW5rTG9hZEVycm9yJztcblx0XHRcdFx0ZXJyb3IudHlwZSA9IGVycm9yVHlwZTtcblx0XHRcdFx0ZXJyb3IucmVxdWVzdCA9IHJlYWxTcmM7XG5cdFx0XHRcdHJlamVjdChlcnJvcik7XG5cdFx0XHR9XG5cdFx0fTtcblx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmwodXJsLCBsb2FkaW5nRW5kZWQpO1xuXHR9KTtcbn1cblxuc2VsZltcIndlYnBhY2tIb3RVcGRhdGVtcnNwZXJyeV9naXRodWJfaW9cIl0gPSAoY2h1bmtJZCwgbW9yZU1vZHVsZXMsIHJ1bnRpbWUpID0+IHtcblx0Zm9yKHZhciBtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XG5cdFx0XHRjdXJyZW50VXBkYXRlW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcblx0XHRcdGlmKGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QpIGN1cnJlbnRVcGRhdGVkTW9kdWxlc0xpc3QucHVzaChtb2R1bGVJZCk7XG5cdFx0fVxuXHR9XG5cdGlmKHJ1bnRpbWUpIGN1cnJlbnRVcGRhdGVSdW50aW1lLnB1c2gocnVudGltZSk7XG5cdGlmKHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSkge1xuXHRcdHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSgpO1xuXHRcdHdhaXRpbmdVcGRhdGVSZXNvbHZlc1tjaHVua0lkXSA9IHVuZGVmaW5lZDtcblx0fVxufTtcblxudmFyIGN1cnJlbnRVcGRhdGVDaHVua3M7XG52YXIgY3VycmVudFVwZGF0ZTtcbnZhciBjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcztcbnZhciBjdXJyZW50VXBkYXRlUnVudGltZTtcbmZ1bmN0aW9uIGFwcGx5SGFuZGxlcihvcHRpb25zKSB7XG5cdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmYpIGRlbGV0ZSBfX3dlYnBhY2tfcmVxdWlyZV9fLmYuanNvbnBIbXI7XG5cdGN1cnJlbnRVcGRhdGVDaHVua3MgPSB1bmRlZmluZWQ7XG5cdGZ1bmN0aW9uIGdldEFmZmVjdGVkTW9kdWxlRWZmZWN0cyh1cGRhdGVNb2R1bGVJZCkge1xuXHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbdXBkYXRlTW9kdWxlSWRdO1xuXHRcdHZhciBvdXRkYXRlZERlcGVuZGVuY2llcyA9IHt9O1xuXG5cdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLm1hcChmdW5jdGlvbiAoaWQpIHtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdGNoYWluOiBbaWRdLFxuXHRcdFx0XHRpZDogaWRcblx0XHRcdH07XG5cdFx0fSk7XG5cdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcblx0XHRcdHZhciBxdWV1ZUl0ZW0gPSBxdWV1ZS5wb3AoKTtcblx0XHRcdHZhciBtb2R1bGVJZCA9IHF1ZXVlSXRlbS5pZDtcblx0XHRcdHZhciBjaGFpbiA9IHF1ZXVlSXRlbS5jaGFpbjtcblx0XHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdO1xuXHRcdFx0aWYgKFxuXHRcdFx0XHQhbW9kdWxlIHx8XG5cdFx0XHRcdChtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWQgJiYgIW1vZHVsZS5ob3QuX3NlbGZJbnZhbGlkYXRlZClcblx0XHRcdClcblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRpZiAobW9kdWxlLmhvdC5fc2VsZkRlY2xpbmVkKSB7XG5cdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0dHlwZTogXCJzZWxmLWRlY2xpbmVkXCIsXG5cdFx0XHRcdFx0Y2hhaW46IGNoYWluLFxuXHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0aWYgKG1vZHVsZS5ob3QuX21haW4pIHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHR0eXBlOiBcInVuYWNjZXB0ZWRcIixcblx0XHRcdFx0XHRjaGFpbjogY2hhaW4sXG5cdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1vZHVsZS5wYXJlbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdHZhciBwYXJlbnRJZCA9IG1vZHVsZS5wYXJlbnRzW2ldO1xuXHRcdFx0XHR2YXIgcGFyZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW3BhcmVudElkXTtcblx0XHRcdFx0aWYgKCFwYXJlbnQpIGNvbnRpbnVlO1xuXHRcdFx0XHRpZiAocGFyZW50LmhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdHR5cGU6IFwiZGVjbGluZWRcIixcblx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG5cdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRwYXJlbnRJZDogcGFyZW50SWRcblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmIChvdXRkYXRlZE1vZHVsZXMuaW5kZXhPZihwYXJlbnRJZCkgIT09IC0xKSBjb250aW51ZTtcblx0XHRcdFx0aWYgKHBhcmVudC5ob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xuXHRcdFx0XHRcdGlmICghb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdKVxuXHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdID0gW107XG5cdFx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdLCBbbW9kdWxlSWRdKTtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkZWxldGUgb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdO1xuXHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMucHVzaChwYXJlbnRJZCk7XG5cdFx0XHRcdHF1ZXVlLnB1c2goe1xuXHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG5cdFx0XHRcdFx0aWQ6IHBhcmVudElkXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB7XG5cdFx0XHR0eXBlOiBcImFjY2VwdGVkXCIsXG5cdFx0XHRtb2R1bGVJZDogdXBkYXRlTW9kdWxlSWQsXG5cdFx0XHRvdXRkYXRlZE1vZHVsZXM6IG91dGRhdGVkTW9kdWxlcyxcblx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzOiBvdXRkYXRlZERlcGVuZGVuY2llc1xuXHRcdH07XG5cdH1cblxuXHRmdW5jdGlvbiBhZGRBbGxUb1NldChhLCBiKSB7XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IGJbaV07XG5cdFx0XHRpZiAoYS5pbmRleE9mKGl0ZW0pID09PSAtMSkgYS5wdXNoKGl0ZW0pO1xuXHRcdH1cblx0fVxuXG5cdC8vIGF0IGJlZ2luIGFsbCB1cGRhdGVzIG1vZHVsZXMgYXJlIG91dGRhdGVkXG5cdC8vIHRoZSBcIm91dGRhdGVkXCIgc3RhdHVzIGNhbiBwcm9wYWdhdGUgdG8gcGFyZW50cyBpZiB0aGV5IGRvbid0IGFjY2VwdCB0aGUgY2hpbGRyZW5cblx0dmFyIG91dGRhdGVkRGVwZW5kZW5jaWVzID0ge307XG5cdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcblx0dmFyIGFwcGxpZWRVcGRhdGUgPSB7fTtcblxuXHR2YXIgd2FyblVuZXhwZWN0ZWRSZXF1aXJlID0gZnVuY3Rpb24gd2FyblVuZXhwZWN0ZWRSZXF1aXJlKG1vZHVsZSkge1xuXHRcdGNvbnNvbGUud2Fybihcblx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICsgbW9kdWxlLmlkICsgXCIpIHRvIGRpc3Bvc2VkIG1vZHVsZVwiXG5cdFx0KTtcblx0fTtcblxuXHRmb3IgKHZhciBtb2R1bGVJZCBpbiBjdXJyZW50VXBkYXRlKSB7XG5cdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhjdXJyZW50VXBkYXRlLCBtb2R1bGVJZCkpIHtcblx0XHRcdHZhciBuZXdNb2R1bGVGYWN0b3J5ID0gY3VycmVudFVwZGF0ZVttb2R1bGVJZF07XG5cdFx0XHQvKiogQHR5cGUge1RPRE99ICovXG5cdFx0XHR2YXIgcmVzdWx0O1xuXHRcdFx0aWYgKG5ld01vZHVsZUZhY3RvcnkpIHtcblx0XHRcdFx0cmVzdWx0ID0gZ2V0QWZmZWN0ZWRNb2R1bGVFZmZlY3RzKG1vZHVsZUlkKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJlc3VsdCA9IHtcblx0XHRcdFx0XHR0eXBlOiBcImRpc3Bvc2VkXCIsXG5cdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0XHQvKiogQHR5cGUge0Vycm9yfGZhbHNlfSAqL1xuXHRcdFx0dmFyIGFib3J0RXJyb3IgPSBmYWxzZTtcblx0XHRcdHZhciBkb0FwcGx5ID0gZmFsc2U7XG5cdFx0XHR2YXIgZG9EaXNwb3NlID0gZmFsc2U7XG5cdFx0XHR2YXIgY2hhaW5JbmZvID0gXCJcIjtcblx0XHRcdGlmIChyZXN1bHQuY2hhaW4pIHtcblx0XHRcdFx0Y2hhaW5JbmZvID0gXCJcXG5VcGRhdGUgcHJvcGFnYXRpb246IFwiICsgcmVzdWx0LmNoYWluLmpvaW4oXCIgLT4gXCIpO1xuXHRcdFx0fVxuXHRcdFx0c3dpdGNoIChyZXN1bHQudHlwZSkge1xuXHRcdFx0XHRjYXNlIFwic2VsZi1kZWNsaW5lZFwiOlxuXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGVjbGluZWQpIG9wdGlvbnMub25EZWNsaW5lZChyZXN1bHQpO1xuXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcblx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG5cdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIG9mIHNlbGYgZGVjbGluZTogXCIgK1xuXHRcdFx0XHRcdFx0XHRcdHJlc3VsdC5tb2R1bGVJZCArXG5cdFx0XHRcdFx0XHRcdFx0Y2hhaW5JbmZvXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwiZGVjbGluZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRlY2xpbmVkKSBvcHRpb25zLm9uRGVjbGluZWQocmVzdWx0KTtcblx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRGVjbGluZWQpXG5cdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuXHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBvZiBkZWNsaW5lZCBkZXBlbmRlbmN5OiBcIiArXG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm1vZHVsZUlkICtcblx0XHRcdFx0XHRcdFx0XHRcIiBpbiBcIiArXG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0LnBhcmVudElkICtcblx0XHRcdFx0XHRcdFx0XHRjaGFpbkluZm9cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJ1bmFjY2VwdGVkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25VbmFjY2VwdGVkKSBvcHRpb25zLm9uVW5hY2NlcHRlZChyZXN1bHQpO1xuXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVVbmFjY2VwdGVkKVxuXHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcblx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2UgXCIgKyBtb2R1bGVJZCArIFwiIGlzIG5vdCBhY2NlcHRlZFwiICsgY2hhaW5JbmZvXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwiYWNjZXB0ZWRcIjpcblx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkFjY2VwdGVkKSBvcHRpb25zLm9uQWNjZXB0ZWQocmVzdWx0KTtcblx0XHRcdFx0XHRkb0FwcGx5ID0gdHJ1ZTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0Y2FzZSBcImRpc3Bvc2VkXCI6XG5cdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EaXNwb3NlZCkgb3B0aW9ucy5vbkRpc3Bvc2VkKHJlc3VsdCk7XG5cdFx0XHRcdFx0ZG9EaXNwb3NlID0gdHJ1ZTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJVbmV4Y2VwdGlvbiB0eXBlIFwiICsgcmVzdWx0LnR5cGUpO1xuXHRcdFx0fVxuXHRcdFx0aWYgKGFib3J0RXJyb3IpIHtcblx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRlcnJvcjogYWJvcnRFcnJvclxuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdFx0aWYgKGRvQXBwbHkpIHtcblx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSBuZXdNb2R1bGVGYWN0b3J5O1xuXHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIHJlc3VsdC5vdXRkYXRlZE1vZHVsZXMpO1xuXHRcdFx0XHRmb3IgKG1vZHVsZUlkIGluIHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcykge1xuXHRcdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm8ocmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzLCBtb2R1bGVJZCkpIHtcblx0XHRcdFx0XHRcdGlmICghb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKVxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0gPSBbXTtcblx0XHRcdFx0XHRcdGFkZEFsbFRvU2V0KFxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0sXG5cdFx0XHRcdFx0XHRcdHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF1cblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoZG9EaXNwb3NlKSB7XG5cdFx0XHRcdGFkZEFsbFRvU2V0KG91dGRhdGVkTW9kdWxlcywgW3Jlc3VsdC5tb2R1bGVJZF0pO1xuXHRcdFx0XHRhcHBsaWVkVXBkYXRlW21vZHVsZUlkXSA9IHdhcm5VbmV4cGVjdGVkUmVxdWlyZTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0Y3VycmVudFVwZGF0ZSA9IHVuZGVmaW5lZDtcblxuXHQvLyBTdG9yZSBzZWxmIGFjY2VwdGVkIG91dGRhdGVkIG1vZHVsZXMgdG8gcmVxdWlyZSB0aGVtIGxhdGVyIGJ5IHRoZSBtb2R1bGUgc3lzdGVtXG5cdHZhciBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMgPSBbXTtcblx0Zm9yICh2YXIgaiA9IDA7IGogPCBvdXRkYXRlZE1vZHVsZXMubGVuZ3RoOyBqKyspIHtcblx0XHR2YXIgb3V0ZGF0ZWRNb2R1bGVJZCA9IG91dGRhdGVkTW9kdWxlc1tqXTtcblx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdGlmIChcblx0XHRcdG1vZHVsZSAmJlxuXHRcdFx0KG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZCB8fCBtb2R1bGUuaG90Ll9tYWluKSAmJlxuXHRcdFx0Ly8gcmVtb3ZlZCBzZWxmLWFjY2VwdGVkIG1vZHVsZXMgc2hvdWxkIG5vdCBiZSByZXF1aXJlZFxuXHRcdFx0YXBwbGllZFVwZGF0ZVtvdXRkYXRlZE1vZHVsZUlkXSAhPT0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlICYmXG5cdFx0XHQvLyB3aGVuIGNhbGxlZCBpbnZhbGlkYXRlIHNlbGYtYWNjZXB0aW5nIGlzIG5vdCBwb3NzaWJsZVxuXHRcdFx0IW1vZHVsZS5ob3QuX3NlbGZJbnZhbGlkYXRlZFxuXHRcdCkge1xuXHRcdFx0b3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzLnB1c2goe1xuXHRcdFx0XHRtb2R1bGU6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdHJlcXVpcmU6IG1vZHVsZS5ob3QuX3JlcXVpcmVTZWxmLFxuXHRcdFx0XHRlcnJvckhhbmRsZXI6IG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZFxuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG5cblx0dmFyIG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzO1xuXG5cdHJldHVybiB7XG5cdFx0ZGlzcG9zZTogZnVuY3Rpb24gKCkge1xuXHRcdFx0Y3VycmVudFVwZGF0ZVJlbW92ZWRDaHVua3MuZm9yRWFjaChmdW5jdGlvbiAoY2h1bmtJZCkge1xuXHRcdFx0XHRkZWxldGUgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuXHRcdFx0fSk7XG5cdFx0XHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IHVuZGVmaW5lZDtcblxuXHRcdFx0dmFyIGlkeDtcblx0XHRcdHZhciBxdWV1ZSA9IG91dGRhdGVkTW9kdWxlcy5zbGljZSgpO1xuXHRcdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0dmFyIG1vZHVsZUlkID0gcXVldWUucG9wKCk7XG5cdFx0XHRcdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdO1xuXHRcdFx0XHRpZiAoIW1vZHVsZSkgY29udGludWU7XG5cblx0XHRcdFx0dmFyIGRhdGEgPSB7fTtcblxuXHRcdFx0XHQvLyBDYWxsIGRpc3Bvc2UgaGFuZGxlcnNcblx0XHRcdFx0dmFyIGRpc3Bvc2VIYW5kbGVycyA9IG1vZHVsZS5ob3QuX2Rpc3Bvc2VIYW5kbGVycztcblx0XHRcdFx0Zm9yIChqID0gMDsgaiA8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdGRpc3Bvc2VIYW5kbGVyc1tqXS5jYWxsKG51bGwsIGRhdGEpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18uaG1yRFttb2R1bGVJZF0gPSBkYXRhO1xuXG5cdFx0XHRcdC8vIGRpc2FibGUgbW9kdWxlICh0aGlzIGRpc2FibGVzIHJlcXVpcmVzIGZyb20gdGhpcyBtb2R1bGUpXG5cdFx0XHRcdG1vZHVsZS5ob3QuYWN0aXZlID0gZmFsc2U7XG5cblx0XHRcdFx0Ly8gcmVtb3ZlIG1vZHVsZSBmcm9tIGNhY2hlXG5cdFx0XHRcdGRlbGV0ZSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdO1xuXG5cdFx0XHRcdC8vIHdoZW4gZGlzcG9zaW5nIHRoZXJlIGlzIG5vIG5lZWQgdG8gY2FsbCBkaXNwb3NlIGhhbmRsZXJcblx0XHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXTtcblxuXHRcdFx0XHQvLyByZW1vdmUgXCJwYXJlbnRzXCIgcmVmZXJlbmNlcyBmcm9tIGFsbCBjaGlsZHJlblxuXHRcdFx0XHRmb3IgKGogPSAwOyBqIDwgbW9kdWxlLmNoaWxkcmVuLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdFx0dmFyIGNoaWxkID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW21vZHVsZS5jaGlsZHJlbltqXV07XG5cdFx0XHRcdFx0aWYgKCFjaGlsZCkgY29udGludWU7XG5cdFx0XHRcdFx0aWR4ID0gY2hpbGQucGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKTtcblx0XHRcdFx0XHRpZiAoaWR4ID49IDApIHtcblx0XHRcdFx0XHRcdGNoaWxkLnBhcmVudHMuc3BsaWNlKGlkeCwgMSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIHJlbW92ZSBvdXRkYXRlZCBkZXBlbmRlbmN5IGZyb20gbW9kdWxlIGNoaWxkcmVuXG5cdFx0XHR2YXIgZGVwZW5kZW5jeTtcblx0XHRcdGZvciAodmFyIG91dGRhdGVkTW9kdWxlSWQgaW4gb3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcblx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhvdXRkYXRlZERlcGVuZGVuY2llcywgb3V0ZGF0ZWRNb2R1bGVJZCkpIHtcblx0XHRcdFx0XHRtb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0aWYgKG1vZHVsZSkge1xuXHRcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPVxuXHRcdFx0XHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llc1tvdXRkYXRlZE1vZHVsZUlkXTtcblx0XHRcdFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbal07XG5cdFx0XHRcdFx0XHRcdGlkeCA9IG1vZHVsZS5jaGlsZHJlbi5pbmRleE9mKGRlcGVuZGVuY3kpO1xuXHRcdFx0XHRcdFx0XHRpZiAoaWR4ID49IDApIG1vZHVsZS5jaGlsZHJlbi5zcGxpY2UoaWR4LCAxKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXHRcdGFwcGx5OiBmdW5jdGlvbiAocmVwb3J0RXJyb3IpIHtcblx0XHRcdC8vIGluc2VydCBuZXcgY29kZVxuXHRcdFx0Zm9yICh2YXIgdXBkYXRlTW9kdWxlSWQgaW4gYXBwbGllZFVwZGF0ZSkge1xuXHRcdFx0XHRpZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGFwcGxpZWRVcGRhdGUsIHVwZGF0ZU1vZHVsZUlkKSkge1xuXHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX18ubVt1cGRhdGVNb2R1bGVJZF0gPSBhcHBsaWVkVXBkYXRlW3VwZGF0ZU1vZHVsZUlkXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBydW4gbmV3IHJ1bnRpbWUgbW9kdWxlc1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBjdXJyZW50VXBkYXRlUnVudGltZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRjdXJyZW50VXBkYXRlUnVudGltZVtpXShfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gY2FsbCBhY2NlcHQgaGFuZGxlcnNcblx0XHRcdGZvciAodmFyIG91dGRhdGVkTW9kdWxlSWQgaW4gb3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcblx0XHRcdFx0aWYgKF9fd2VicGFja19yZXF1aXJlX18ubyhvdXRkYXRlZERlcGVuZGVuY2llcywgb3V0ZGF0ZWRNb2R1bGVJZCkpIHtcblx0XHRcdFx0XHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXy5jW291dGRhdGVkTW9kdWxlSWRdO1xuXHRcdFx0XHRcdGlmIChtb2R1bGUpIHtcblx0XHRcdFx0XHRcdG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzID1cblx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbb3V0ZGF0ZWRNb2R1bGVJZF07XG5cdFx0XHRcdFx0XHR2YXIgY2FsbGJhY2tzID0gW107XG5cdFx0XHRcdFx0XHR2YXIgZXJyb3JIYW5kbGVycyA9IFtdO1xuXHRcdFx0XHRcdFx0dmFyIGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrcyA9IFtdO1xuXHRcdFx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRcdFx0XHR2YXIgZGVwZW5kZW5jeSA9IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2pdO1xuXHRcdFx0XHRcdFx0XHR2YXIgYWNjZXB0Q2FsbGJhY2sgPVxuXHRcdFx0XHRcdFx0XHRcdG1vZHVsZS5ob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcGVuZGVuY3ldO1xuXHRcdFx0XHRcdFx0XHR2YXIgZXJyb3JIYW5kbGVyID1cblx0XHRcdFx0XHRcdFx0XHRtb2R1bGUuaG90Ll9hY2NlcHRlZEVycm9ySGFuZGxlcnNbZGVwZW5kZW5jeV07XG5cdFx0XHRcdFx0XHRcdGlmIChhY2NlcHRDYWxsYmFjaykge1xuXHRcdFx0XHRcdFx0XHRcdGlmIChjYWxsYmFja3MuaW5kZXhPZihhY2NlcHRDYWxsYmFjaykgIT09IC0xKSBjb250aW51ZTtcblx0XHRcdFx0XHRcdFx0XHRjYWxsYmFja3MucHVzaChhY2NlcHRDYWxsYmFjayk7XG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3JIYW5kbGVycy5wdXNoKGVycm9ySGFuZGxlcik7XG5cdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzLnB1c2goZGVwZW5kZW5jeSk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGZvciAodmFyIGsgPSAwOyBrIDwgY2FsbGJhY2tzLmxlbmd0aDsgaysrKSB7XG5cdFx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdFx0Y2FsbGJhY2tzW2tdLmNhbGwobnVsbCwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMpO1xuXHRcdFx0XHRcdFx0XHR9IGNhdGNoIChlcnIpIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAodHlwZW9mIGVycm9ySGFuZGxlcnNba10gPT09IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3JIYW5kbGVyc1trXShlcnIsIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZXBlbmRlbmN5SWQ6IGRlcGVuZGVuY2llc0ZvckNhbGxiYWNrc1trXVxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycjIpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJhY2NlcHQtZXJyb3ItaGFuZGxlci1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogb3V0ZGF0ZWRNb2R1bGVJZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogZGVwZW5kZW5jaWVzRm9yQ2FsbGJhY2tzW2tdLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVycjIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvcmlnaW5hbEVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycjIpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImFjY2VwdC1lcnJvcmVkXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG91dGRhdGVkTW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBkZXBlbmRlbmNpZXNGb3JDYWxsYmFja3Nba10sXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvYWQgc2VsZiBhY2NlcHRlZCBtb2R1bGVzXG5cdFx0XHRmb3IgKHZhciBvID0gMDsgbyA8IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcy5sZW5ndGg7IG8rKykge1xuXHRcdFx0XHR2YXIgaXRlbSA9IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlc1tvXTtcblx0XHRcdFx0dmFyIG1vZHVsZUlkID0gaXRlbS5tb2R1bGU7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0aXRlbS5yZXF1aXJlKG1vZHVsZUlkKTtcblx0XHRcdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRcdFx0aWYgKHR5cGVvZiBpdGVtLmVycm9ySGFuZGxlciA9PT0gXCJmdW5jdGlvblwiKSB7XG5cdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRpdGVtLmVycm9ySGFuZGxlcihlcnIsIHtcblx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0bW9kdWxlOiBfX3dlYnBhY2tfcmVxdWlyZV9fLmNbbW9kdWxlSWRdXG5cdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoZXJyMikge1xuXHRcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcblx0XHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtYWNjZXB0LWVycm9yLWhhbmRsZXItZXJyb3JlZFwiLFxuXHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVycjIsXG5cdFx0XHRcdFx0XHRcdFx0XHRvcmlnaW5hbEVycm9yOiBlcnJcblx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRpZiAoIW9wdGlvbnMuaWdub3JlRXJyb3JlZCkge1xuXHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycjIpO1xuXHRcdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcblx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtYWNjZXB0LWVycm9yZWRcIixcblx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG5cdFx0XHRcdFx0XHRcdHJlcG9ydEVycm9yKGVycik7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvdXRkYXRlZE1vZHVsZXM7XG5cdFx0fVxuXHR9O1xufVxuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJJLmpzb25wID0gZnVuY3Rpb24gKG1vZHVsZUlkLCBhcHBseUhhbmRsZXJzKSB7XG5cdGlmICghY3VycmVudFVwZGF0ZSkge1xuXHRcdGN1cnJlbnRVcGRhdGUgPSB7fTtcblx0XHRjdXJyZW50VXBkYXRlUnVudGltZSA9IFtdO1xuXHRcdGN1cnJlbnRVcGRhdGVSZW1vdmVkQ2h1bmtzID0gW107XG5cdFx0YXBwbHlIYW5kbGVycy5wdXNoKGFwcGx5SGFuZGxlcik7XG5cdH1cblx0aWYgKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oY3VycmVudFVwZGF0ZSwgbW9kdWxlSWQpKSB7XG5cdFx0Y3VycmVudFVwZGF0ZVttb2R1bGVJZF0gPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm1bbW9kdWxlSWRdO1xuXHR9XG59O1xuX193ZWJwYWNrX3JlcXVpcmVfXy5obXJDLmpzb25wID0gZnVuY3Rpb24gKFxuXHRjaHVua0lkcyxcblx0cmVtb3ZlZENodW5rcyxcblx0cmVtb3ZlZE1vZHVsZXMsXG5cdHByb21pc2VzLFxuXHRhcHBseUhhbmRsZXJzLFxuXHR1cGRhdGVkTW9kdWxlc0xpc3Rcbikge1xuXHRhcHBseUhhbmRsZXJzLnB1c2goYXBwbHlIYW5kbGVyKTtcblx0Y3VycmVudFVwZGF0ZUNodW5rcyA9IHt9O1xuXHRjdXJyZW50VXBkYXRlUmVtb3ZlZENodW5rcyA9IHJlbW92ZWRDaHVua3M7XG5cdGN1cnJlbnRVcGRhdGUgPSByZW1vdmVkTW9kdWxlcy5yZWR1Y2UoZnVuY3Rpb24gKG9iaiwga2V5KSB7XG5cdFx0b2JqW2tleV0gPSBmYWxzZTtcblx0XHRyZXR1cm4gb2JqO1xuXHR9LCB7fSk7XG5cdGN1cnJlbnRVcGRhdGVSdW50aW1lID0gW107XG5cdGNodW5rSWRzLmZvckVhY2goZnVuY3Rpb24gKGNodW5rSWQpIHtcblx0XHRpZiAoXG5cdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8oaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJlxuXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdICE9PSB1bmRlZmluZWRcblx0XHQpIHtcblx0XHRcdHByb21pc2VzLnB1c2gobG9hZFVwZGF0ZUNodW5rKGNodW5rSWQsIHVwZGF0ZWRNb2R1bGVzTGlzdCkpO1xuXHRcdFx0Y3VycmVudFVwZGF0ZUNodW5rc1tjaHVua0lkXSA9IHRydWU7XG5cdFx0fVxuXHR9KTtcblx0aWYgKF9fd2VicGFja19yZXF1aXJlX18uZikge1xuXHRcdF9fd2VicGFja19yZXF1aXJlX18uZi5qc29ucEhtciA9IGZ1bmN0aW9uIChjaHVua0lkLCBwcm9taXNlcykge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRjdXJyZW50VXBkYXRlQ2h1bmtzICYmXG5cdFx0XHRcdCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oY3VycmVudFVwZGF0ZUNodW5rcywgY2h1bmtJZCkgJiZcblx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiZcblx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdICE9PSB1bmRlZmluZWRcblx0XHRcdCkge1xuXHRcdFx0XHRwcm9taXNlcy5wdXNoKGxvYWRVcGRhdGVDaHVuayhjaHVua0lkKSk7XG5cdFx0XHRcdGN1cnJlbnRVcGRhdGVDaHVua3NbY2h1bmtJZF0gPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn07XG5cbl9fd2VicGFja19yZXF1aXJlX18uaG1yTSA9ICgpID0+IHtcblx0aWYgKHR5cGVvZiBmZXRjaCA9PT0gXCJ1bmRlZmluZWRcIikgdGhyb3cgbmV3IEVycm9yKFwiTm8gYnJvd3NlciBzdXBwb3J0OiBuZWVkIGZldGNoIEFQSVwiKTtcblx0cmV0dXJuIGZldGNoKF9fd2VicGFja19yZXF1aXJlX18ucCArIF9fd2VicGFja19yZXF1aXJlX18uaG1yRigpKS50aGVuKChyZXNwb25zZSkgPT4ge1xuXHRcdGlmKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDA0KSByZXR1cm47IC8vIG5vIHVwZGF0ZSBhdmFpbGFibGVcblx0XHRpZighcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCB1cGRhdGUgbWFuaWZlc3QgXCIgKyByZXNwb25zZS5zdGF0dXNUZXh0KTtcblx0XHRyZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuXHR9KTtcbn07XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCIvLyBtb2R1bGUgY2FjaGUgYXJlIHVzZWQgc28gZW50cnkgaW5saW5pbmcgaXMgZGlzYWJsZWRcbi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQzMjMpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==